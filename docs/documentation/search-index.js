var searchIndex = JSON.parse('{\
"foliage":{"doc":"","t":"","n":["AVRInput","AVRPower","Accept","Again","AllCandidates","Alphanumeric","Alt","AltGraph","AndroidInterface","AppSwitch","ArrowDown","ArrowLeft","ArrowRight","ArrowUp","Attn","AudioBalanceLeft","AudioBalanceRight","AudioBassBoostDown","AudioBassBoostToggle","AudioBassBoostUp","AudioFaderFront","AudioFaderRear","AudioSurroundModeNext","AudioTrebleDown","AudioTrebleUp","AudioVolumeDown","AudioVolumeMute","AudioVolumeUp","Backspace","BrightnessDown","BrightnessUp","BrowserBack","BrowserFavorites","BrowserForward","BrowserHome","BrowserRefresh","BrowserSearch","BrowserStop","Call","Camera","CameraFocus","Cancel","CapsLock","ChannelDown","ChannelUp","Clear","Close","ClosedCaptionToggle","CodeInput","ColorF0Red","ColorF1Green","ColorF2Yellow","ColorF3Blue","ColorF4Grey","ColorF5Brown","Compose","ContextMenu","Control","Convert","Copy","CrSel","Cut","DVR","Delete","Dimmer","DisplaySwap","Eisu","Eject","End","EndCall","Enter","EraseEof","Escape","ExSel","Execute","Exit","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F25","F26","F27","F28","F29","F3","F30","F31","F32","F33","F34","F35","F4","F5","F6","F7","F8","F9","FavoriteClear0","FavoriteClear1","FavoriteClear2","FavoriteClear3","FavoriteRecall0","FavoriteRecall1","FavoriteRecall2","FavoriteRecall3","FavoriteStore0","FavoriteStore1","FavoriteStore2","FavoriteStore3","FinalMode","Find","Fn","FnLock","Foliage","GoBack","GoHome","GroupFirst","GroupLast","GroupNext","GroupPrevious","Guide","GuideNextDay","GuidePreviousDay","HangulMode","HanjaMode","Hankaku","HeadsetHook","Help","Hibernate","Hiragana","HiraganaKatakana","Home","Hyper","Info","Insert","InstantReplay","JunjaMode","KanaMode","KanjiMode","Katakana","Key11","Key12","LastNumberRedial","LaunchApplication1","LaunchApplication2","LaunchCalendar","LaunchContacts","LaunchMail","LaunchMediaPlayer","LaunchMusicPlayer","LaunchPhone","LaunchScreenSaver","LaunchSpreadsheet","LaunchWebBrowser","LaunchWebCam","LaunchWordProcessor","Link","ListProgram","LiveContent","Lock","LogOff","MailForward","MailReply","MailSend","MannerMode","MediaApps","MediaAudioTrack","MediaClose","MediaFastForward","MediaLast","MediaPause","MediaPlay","MediaPlayPause","MediaRecord","MediaRewind","MediaSkipBackward","MediaSkipForward","MediaStepBackward","MediaStepForward","MediaStop","MediaTopMenu","MediaTrackNext","MediaTrackPrevious","Meta","MicrophoneToggle","MicrophoneVolumeDown","MicrophoneVolumeMute","MicrophoneVolumeUp","ModeChange","NamedKey","NavigateIn","NavigateNext","NavigateOut","NavigatePrevious","New","NextCandidate","NextFavoriteChannel","NextUserProfile","NonConvert","Notification","NumLock","OnDemand","Open","PageDown","PageUp","Pairing","Paste","Pause","PinPDown","PinPMove","PinPToggle","PinPUp","Play","PlaySpeedDown","PlaySpeedReset","PlaySpeedUp","Power","PowerOff","PreviousCandidate","Print","PrintScreen","Process","Props","RandomToggle","RcLowBattery","RecordSpeedNext","Redo","RfBypass","Romaji","STBInput","STBPower","Save","ScanChannelsToggle","ScreenModeNext","ScrollLock","Select","Settings","Shift","SingleCandidate","Soft1","Soft2","Soft3","Soft4","Space","SpeechCorrectionList","SpeechInputToggle","SpellCheck","SplitScreenToggle","Standby","Subtitle","Super","Symbol","SymbolLock","TV","TV3DMode","TVAntennaCable","TVAudioDescription","TVAudioDescriptionMixDown","TVAudioDescriptionMixUp","TVContentsMenu","TVDataService","TVInput","TVInputComponent1","TVInputComponent2","TVInputComposite1","TVInputComposite2","TVInputHDMI1","TVInputHDMI2","TVInputHDMI3","TVInputHDMI4","TVInputVGA1","TVMediaContext","TVNetwork","TVNumberEntry","TVPower","TVRadioService","TVSatellite","TVSatelliteBS","TVSatelliteCS","TVSatelliteToggle","TVTerrestrialAnalog","TVTerrestrialDigital","TVTimer","Tab","Teletext","Undo","VideoModeNext","VoiceDial","WakeUp","Wink","Zenkaku","ZenkakuHankaku","ZoomIn","ZoomOut","ZoomToggle","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","ash","asset","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","circle","clipboard","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","cmp","color","compare","compositor","coordinate","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","differential","differential_enable","downcast","downcast","downcast","drop","drop","drop","dyn_eq","dyn_hash","elm","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from_subset","from_subset","from_subset","from_world","from_world","ginkgo","hash","icon","icon_fetcher","image","init","init","init","instance","interaction","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","job","load_native_asset","media","new","panel","partial_cmp","rectangle","run","scene","set_descriptor","text","texture","time","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_text","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","virtual_keyboard","vzip","vzip","vzip","window","with_android_interface","with_leaf","with_leaves","with_renderleaf","with_window_descriptor","with_worker_path","workflow","identification","instruction","leaflet","render","render_packet","renderer","RenderId","RenderIdentification","as_any","as_any","as_any_mut","as_dyn_eq","borrow","borrow_mut","clone","clone_into","clone_type_data","component_ids","deref","deref_mut","deserialize","diff_id","downcast","drop","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","erased_serialize","extend","fmt","from","from_components","from_subset","get_components","hash","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","render_id","serialize","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","PerPackage","PerRenderer","RenderInstructionHandle","RenderInstructionsRecorder","RenderRecordBehavior","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","downcast","downcast","downcast","drop","drop","drop","finish","from","from","from","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","Alpha","Opaque","RENDER_PHASE","Render","RenderPackage","RenderPhase","Resources","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","clone_type_data","create_package","create_resources","deref","deref_mut","diff_id","downcast","drop","eq","from","from_subset","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","on_package_removal","partial_cmp","prepare_package","prepare_resources","record_behavior","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","value","vzip","None","RenderPacket","RenderPacketDifferential","RenderPacketStore","Some","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","component_ids","default","default","deref","deref","deref_mut","deref_mut","deserialize","diff_id","diff_id","downcast","downcast","drop","drop","erased_serialize","extend","from","from","from_components","from_subset","from_subset","from_world","from_world","get","get","get_components","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","new","serialize","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","RenderPackage","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","diff_id","downcast","drop","from","from_subset","init","into","into_any","into_any_rc","is_in_subset","package_data","signal_record","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","AssetContainer","AssetFetchFn","AssetKey","OnFetch","as_any","as_any","as_any_mut","as_any_mut","assets","attach","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","component_ids","config","default","deref","deref","deref_mut","deref_mut","diff_id","diff_id","downcast","downcast","drop","drop","extend","from","from","from_components","from_subset","from_subset","from_world","get_components","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","new","store","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","all_tuples","archetype","bundle","change_detection","component","entity","event","prelude","query","reflect","removal_detection","schedule","storage","system","world","Archetype","ArchetypeComponentId","ArchetypeEntity","ArchetypeGeneration","ArchetypeId","ArchetypeRow","Archetypes","EMPTY","Edges","INVALID","INVALID","archetype_components_len","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","compare","components","contains","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","edges","empty","entities","entity","entity_table_row","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","generation","get","get_add_bundle","get_archetype_component_id","get_param","get_remove_bundle","get_sparse_set_index","get_storage_type","get_take_bundle","hash","hash","id","index","index","index","index","index_mut","init","init","init","init","init","init","init","init","init_state","initial","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","len","len","new","new","partial_cmp","sparse_set_components","sparse_set_index","table_components","table_id","table_row","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Bundle","Bundle","BundleId","BundleInfo","Bundles","DynamicBundle","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","components","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","downcast","downcast","downcast","drop","drop","drop","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from_subset","from_subset","from_subset","from_world","get","get_id","get_param","get_sparse_set_index","hash","id","index","init","init","init","init_state","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","sparse_set_index","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","CHECK_TICK_THRESHOLD","DetectChanges","DetectChangesMut","Inner","MAX_CHANGE_AGE","Mut","MutUntyped","NonSendMut","Ref","Res","ResMut","as_any","as_any_mut","as_mut","as_ref","borrow","borrow_mut","bypass_change_detection","bypass_change_detection","deref","deref_mut","diff_id","downcast","drop","fmt","from","from_subset","init","into","into_any","into_any_rc","into_inner","is_added","is_added","is_changed","is_changed","is_in_subset","last_changed","last_changed","map_unchanged","reborrow","replace_if_neq","set_changed","set_changed","set_if_neq","set_last_changed","set_last_changed","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","with_type","Component","Component","ComponentDescriptor","ComponentId","ComponentIdFor","ComponentInfo","ComponentStorage","ComponentTicks","Components","MAX","STORAGE_TYPE","SparseSet","SparseStorage","Storage","StorageType","Table","TableStorage","Tick","TickCells","added","added_tick","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","changed","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","compare","component_id","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","get","get","get_id","get_info","get_info_unchecked","get_name","get_param","get_param","get_resource_id","get_sparse_set_index","hash","id","index","init","init","init","init","init","init","init","init","init","init","init","init_component","init_component_with_descriptor","init_non_send","init_resource","init_state","init_state","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_added","is_changed","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_newer_than","is_send_and_sync","iter","last_changed_tick","layout","len","name","name","new","new","new","new_archetype","new_resource","new_with_layout","partial_cmp","resource_id","set","set_changed","sparse_set_index","storage_type","storage_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Entities","Entity","EntityLocation","EntityMapper","MapEntities","ReserveEntitiesIterator","alloc","alloc_at","archetype_id","archetype_row","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone_into","clone_type_data","contains","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","drop","drop","drop","drop","eq","flush","flush_and_reserve_invalid_assuming_no_entities","flush_as_invalid","fmt","fmt","free","from","from","from","from","from_subset","from_subset","from_subset","from_subset","get","get_map","get_map_mut","get_or_reserve","get_param","init","init","init","init","init_state","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","len","map_entities","next","reserve","reserve_entities","reserve_entity","resolve_from_id","size_hint","table_id","table_row","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","total_count","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","world_scope","Event","Event","EventId","EventIterator","EventIteratorWithId","EventReader","EventWriter","Events","ManualEventIterator","ManualEventIteratorWithId","ManualEventReader","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone_into","clone_type_data","cmp","compare","count","count","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","drop","drop","drop","drop","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","event_queue_update_system","event_update_condition","event_update_system","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_world","hash","id","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","iter_with_id","last","last","len","len","len","missed_events","new","next","next","nth","nth","partial_cmp","read","read_with_id","size_hint","size_hint","to_compact_string","to_owned","to_smolstr","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","without_id","Added","AnyOf","AppTypeRegistry","Bundle","Bundle","Changed","Commands","Component","Component","Condition","Deferred","DetectChanges","DetectChangesMut","Entity","EntityMut","EntityRef","EntityWorldMut","Event","Event","EventReader","EventWriter","Events","FromWorld","Has","In","In","In","Inner","IntoSystem","IntoSystemConfigs","IntoSystemSet","IntoSystemSetConfigs","Local","Mut","NextState","NonSend","NonSendMut","OnEnter","OnExit","OnTransition","Or","Out","Out","PLACEHOLDER","ParallelCommands","Param","ParamSet","Query","QueryState","ReadOnlySystem","Ref","ReflectComponent","ReflectResource","RemovedComponents","Res","ResMut","Resource","Resource","Schedule","Schedules","Set","State","States","States","Storage","System","System","SystemParamFunction","SystemSet","SystemSet","With","Without","World","add","add_schedule","add_systems","after","after","allow_ambiguous_component","allow_ambiguous_component","allow_ambiguous_resource","allow_ambiguous_resource","ambiguous_with","ambiguous_with","ambiguous_with_all","ambiguous_with_all","and_then","any_component_removed","any_with_component","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply_deferred","apply_deferred","apply_deferred","apply_or_insert","apply_or_insert","apply_state_transition","archetype","archetype","archetype","archetype_component_access","archetypes","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_deref_mut","as_deref_mut","as_deref_mut","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_mut","as_mut","as_mut","as_nop","as_readonly","as_readonly","as_ref","as_ref","as_ref","as_ref","as_ref","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_unsafe_world_cell","as_unsafe_world_cell_readonly","before","before","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bundles","bypass_change_detection","bypass_change_detection","bypass_change_detection","bypass_change_detection","cell","chain","chain","change_tick","check_change_tick","check_change_ticks","clear","clear","clear","clear_all","clear_entities","clear_resources","clear_trackers","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","cmp","command_scope","compare","component","component_access","component_id","component_mut","components","concat_compact","concat_compact","concat_compact","concat_compact","concat_compact","concat_compact","configure_schedules","configure_set","configure_sets","contains","contains","contains","contains","contains","contains","contains_id","contains_id","contains_id","contains_non_send","contains_resource","contains_type_id","contains_type_id","contains_type_id","copy","copy","crate_name","crate_name","crate_name","dbg","default","default","default","default","default","default","default","default_system_sets","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","despawn","despawn","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","distributive_run_if","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drain","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","entities","entities_mut","entity","entity","entity_mut","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","error","events","extend","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","field","field","field_len","field_len","field_mut","field_mut","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_pointers","fn_pointers","for_each","for_each","for_each_mut","for_each_mut","for_each_unchecked","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_raw","from_reflect","from_reflect","from_reflect","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_type","from_type","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","generation","get","get","get","get","get","get","get","get","get_build_settings","get_by_id","get_by_id","get_by_id","get_by_id","get_change_ticks","get_change_ticks","get_change_ticks","get_change_ticks_by_id","get_change_ticks_by_id","get_change_ticks_by_id","get_component","get_component_mut","get_component_unchecked_mut","get_component_unchecked_mut","get_entity","get_entity","get_entity_mut","get_event","get_executor_kind","get_field","get_field","get_field_mut","get_field_mut","get_inner","get_last_run","get_manual","get_many","get_many","get_many_entities","get_many_entities_mut","get_many_mut","get_many_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut_by_id","get_mut_by_id","get_mut_by_id","get_non_send_by_id","get_non_send_mut_by_id","get_non_send_resource","get_non_send_resource_mut","get_or_spawn","get_or_spawn","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_reader","get_reader_current","get_ref","get_ref","get_ref","get_represented_type_info","get_represented_type_info","get_represented_type_info","get_resource","get_resource_by_id","get_resource_mut","get_resource_mut_by_id","get_resource_or_insert_with","get_single","get_single","get_single_mut","get_single_mut","get_single_unchecked","get_single_unchecked_manual","get_sparse_set_index","get_type_registration","get_type_registration","get_type_registration","get_unchecked","get_unchecked","graph","graph_mut","hash","hash","hash","hash","hash","id","id","id","id","ignore","ignored_scheduling_ambiguities","in_set","in_set","in_state","increment_change_tick","index","info","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init_component","init_component_with_descriptor","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_non_send_resource","init_resource","init_resource","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","initialize","initialize","insert","insert","insert","insert","insert_by_id","insert_by_ids","insert_non_send_by_id","insert_non_send_resource","insert_or_spawn_batch","insert_or_spawn_batch","insert_resource","insert_resource","insert_resource_by_id","inspect_entity","intern","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_inner","into_inner","into_inner","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_reflect","into_reflect","into_reflect","into_system","into_system_set","into_world_mut","is_added","is_added","is_added","is_added","is_added","is_added","is_added","is_anonymous","is_changed","is_changed","is_changed","is_changed","is_changed","is_changed","is_changed","is_empty","is_empty","is_empty","is_empty","is_empty","is_exclusive","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_resource_added","is_resource_changed","is_send","iter","iter","iter","iter","iter","iter_combinations","iter_combinations","iter_combinations_mut","iter_combinations_mut","iter_combinations_unchecked","iter_combinations_unsafe","iter_current_update_events","iter_entities","iter_entities_mut","iter_fields","iter_fields","iter_ignored_ambiguities","iter_inner","iter_manual","iter_many","iter_many","iter_many_manual","iter_many_mut","iter_many_mut","iter_many_unsafe","iter_mut","iter_mut","iter_mut","iter_unchecked","iter_unsafe","iter_with_id","iter_with_id","join_compact","join_compact","join_compact","join_compact","join_compact","join_compact","last_change_tick","last_changed","last_changed","last_changed","last_changed","last_changed","last_changed","leak","len","len","len","location","location","location","many","many_entities","many_entities_mut","many_mut","map","map","map_unchanged","map_unchanged","map_unchanged","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","module_path","module_path","module_path","name","new","new","new","new","new","new","new","new","new","new","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_from_entities","non_send_resource","non_send_resource_mut","not","oldest_event_count","oldest_id","on_event","on_fetch","or_else","p0","p0","p0","p0","p0","p0","p0","p0","p1","p1","p1","p1","p1","p1","p1","p2","p2","p2","p2","p2","p2","p3","p3","p3","p3","p3","p4","p4","p4","p4","p5","p5","p5","p6","p6","p7","par_iter","par_iter","par_iter_mut","par_iter_mut","partial_cmp","pipe","print_ignored_ambiguities","query","query_filtered","read","read","read_change_tick","read_with_id","read_with_id","reader","reader_mut","reader_mut_with_events","reborrow","reborrow","reborrow","reborrow","ref_eq","ref_hash","reflect","reflect","reflect_crate_name","reflect_crate_name","reflect_crate_name","reflect_hash","reflect_module_path","reflect_module_path","reflect_module_path","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_short_type_path","reflect_short_type_path","reflect_short_type_path","reflect_type_ident","reflect_type_ident","reflect_type_ident","reflect_type_path","reflect_type_path","reflect_type_path","reflect_unchecked_mut","reflect_unchecked_mut","register_boxed_system","register_system","remove","remove","remove","remove","remove_entry","remove_non_send_by_id","remove_non_send_resource","remove_resource","remove_resource","remove_resource_by_id","remove_system","removed","removed_components","removed_with_id","replace_if_neq","resource","resource_added","resource_changed","resource_changed_or_removed","resource_equals","resource_exists","resource_exists_and_changed","resource_exists_and_equals","resource_mut","resource_removed","resource_scope","run","run","run","run_if","run_if","run_once","run_readonly","run_schedule","run_system","run_system","run_system_once_with","run_unsafe","schedule_scope","send","send","send_batch","send_default","send_default","send_event","send_event_batch","send_event_default","serialize","set","set","set","set","set_apply_final_deferred","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_build_settings","set_changed","set_changed","set_changed","set_changed","set_executor_kind","set_if_neq","set_last_changed","set_last_changed","set_last_changed","set_last_changed","set_last_run","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","short_type_path","short_type_path","short_type_path","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","single","single","single_mut","single_mut","sparse_set_index","spawn","spawn","spawn_batch","spawn_batch","spawn_empty","spawn_empty","state_changed","state_exists","state_exists_and_equals","storages","system_type","take","to","to_bits","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_readonly","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_run_schedule","try_schedule_scope","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ident","type_ident","type_ident","type_info","type_info","type_info","type_path","type_path","type_path","unwrap","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetypes","update_archetypes_unsafe_world_cell","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_drain","update_location","validate_world","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","warn","world","world_mut","world_scope","Aligned","IsAligned","OwningPtr","Ptr","PtrMut","ThinSlicePtr","Unaligned","UnsafeCellDeref","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_mut","as_ptr","as_ptr","as_ptr","as_ref","as_ref","assert_unique","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_add","byte_add","byte_add","byte_offset","byte_offset","byte_offset","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","dangling_with_align","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop_as","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","make","new","new","new","promote","read","read","read_unaligned","reborrow","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_unaligned","to_unaligned","to_unaligned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","Access","Added","AliasedMutability","AnyOf","ArchetypeFilter","BatchingStrategy","Changed","Fetch","FilteredAccess","FilteredAccessSet","Has","IS_ARCHETYPAL","IS_DENSE","Item","MissingComponent","MissingReadAccess","MissingWriteAccess","MultipleEntities","NoEntities","NoSuchEntity","NoSuchEntity","NopWorldQuery","Or","QueryCombinationIter","QueryComponentError","QueryDoesNotMatch","QueryEntityError","QueryItem","QueryIter","QueryManyIter","QueryParIter","QuerySingleError","QueryState","ROQueryItem","ReadOnly","ReadOnlyWorldQuery","State","With","Without","WorldQuery","WorldQuery","access","access_mut","add","add_read","add_read","add_write","add_write","and_with","and_without","append_or","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","batch_size_limits","batches_per_thread","batches_per_thread","batching_strategy","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","combined_access","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","extend_access","fetch","fetch","fetch_next","fetch_next","filter_fetch","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_mut","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","get_conflicts","get_conflicts","get_conflicts","get_conflicts_single","grow","has_any_read","has_any_write","has_read","has_read_all","has_write","has_write_all","init","init","init","init","init","init","init","init","init","init","init","init","init_fetch","init_fetch","init_state","init_state","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","is_compatible","is_compatible","is_compatible","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","len","matches_component_set","matches_component_set","max_batch_size","min_batch_size","new","new","next","next","next","read_all","read_all","reads","reads_and_writes","set_archetype","set_archetype","set_table","set_table","shrink","shrink","size_hint","size_hint","size_hint","to_compact_string","to_compact_string","to_compact_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_smolstr","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_archetype_component_access","update_archetype_component_access","update_component_access","update_component_access","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_all","write_all","writes","AppTypeRegistry","ReflectBundle","ReflectBundleFns","ReflectCommandExt","ReflectComponent","ReflectComponentFns","ReflectMapEntities","ReflectResource","ReflectResourceFns","apply","apply","apply","apply","apply_or_insert","apply_or_insert","apply_or_insert","apply_or_insert","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","contains","copy","copy","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","fn_pointers","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_type","from_type","from_world","from_world","from_world","init","init","init","init","init","insert","insert","insert","insert","insert_reflect","insert_reflect_with_registry","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","map_all_entities","map_entities","new","new","new","new","reflect","reflect","reflect_mut","reflect_unchecked_mut","reflect_unchecked_mut","remove","remove","remove","remove","remove_reflect","remove_reflect_with_registry","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","RemovedComponentEntity","RemovedComponentEvents","RemovedComponentReader","RemovedComponents","RemovedIter","RemovedIterWithId","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","downcast","downcast","downcast","drop","drop","drop","fmt","fmt","fmt","from","from","from","from_subset","from_subset","from_subset","from_world","from_world","get","get_param","init","init","init","init_state","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","new","send","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","update","vzip","vzip","vzip","Ambiguity","AndThen","AnonymousSet","BoxedCondition","Condition","Configs","Configs","Configs","CrossDependency","Dag","DependencyCycle","DependencyLoop","DynEq","Error","ExecutorKind","HierarchyCycle","HierarchyLoop","HierarchyRedundancy","Ignore","InternedScheduleLabel","InternedSystemSet","IntoSystemConfigs","IntoSystemSet","IntoSystemSetConfigs","LogLevel","MainThreadExecutor","MultiThreaded","MultiThreadedExecutor","NextState","NodeConfig","NodeConfig","NodeConfig","NodeConfig","NodeConfigs","NodeId","NotSystem","OnEnter","OnExit","OnTransition","OrElse","Schedule","ScheduleBuildError","ScheduleBuildSettings","ScheduleGraph","ScheduleLabel","ScheduleLabel","Schedules","Set","Set","SetsHaveOrderButIntersect","Simple","SimpleExecutor","SingleThreaded","SingleThreadedExecutor","State","States","States","System","SystemConfig","SystemConfigs","SystemSchedule","SystemSet","SystemSet","SystemSetConfig","SystemSetConfigs","SystemTypeSet","SystemTypeSetAmbiguity","Uninitialized","Warn","after","after","after","after","ambiguity_detection","ambiguous_with","ambiguous_with","ambiguous_with","ambiguous_with","ambiguous_with_all","ambiguous_with_all","ambiguous_with_all","ambiguous_with_all","and_then","apply_deferred","apply_state_transition","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","before","before","before","before","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_schedule","cached_topsort","chain","chain","chain","chain","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","common_conditions","compare","conflicting_systems","conflicts_to_string","default","default","default","default","default","default","default","default","default","dependency","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","distributive_run_if","distributive_run_if","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_clone","dyn_clone","dyn_clone","dyn_clone","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get_set_at","get_system_at","graph","hash","hash","hash","hash","hierarchy","hierarchy_detection","ignored_scheduling_ambiguities","in_set","in_set","in_set","in_set","in_set_inner","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initialize","intern","intern","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_configs","into_configs","into_system_set","into_system_set","into_system_set","is_anonymous","is_anonymous","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_set","is_system","leak","new","new","new","new","new","new","new","or_else","partial_cmp","ref_eq","ref_hash","report_sets","run_enter_schedule","run_if","run_if","run_if","run_if","run_if_dyn","set_at","system_at","system_sets","system_type","system_type","systems","to","to_compact_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","use_shortnames","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","chained","collective_conditions","configs","chained","collective_conditions","configs","chained","collective_conditions","configs","any_component_removed","any_with_component","in_state","not","on_event","resource_added","resource_changed","resource_changed_or_removed","resource_equals","resource_exists","resource_exists_and_changed","resource_exists_and_equals","resource_removed","run_once","state_changed","state_exists","state_exists_and_equals","Column","ComponentSparseSet","ResourceData","Resources","SparseSet","SparseSetIndex","SparseSets","Storages","Table","TableId","TableRow","Tables","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clear","clear","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","component_count","contains","contains","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","empty","entities","entity_capacity","entity_count","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","get","get","get","get","get","get","get_added_tick","get_added_tick","get_added_tick_unchecked","get_added_ticks_slice","get_changed_tick","get_changed_tick","get_changed_tick_unchecked","get_changed_ticks_slice","get_column","get_data","get_data","get_data_mut","get_data_ptr","get_data_slice","get_data_unchecked","get_mut","get_or_insert_with","get_sparse_set_index","get_ticks","get_ticks","get_ticks","get_ticks_unchecked","get_with_ticks","has_column","id","index","index","index","index_mut","indices","init","init","init","init","init","init","init","init","init","init","init","insert","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_present","item_layout","iter","iter","iter","iter","iter","iter_mut","len","len","len","len","len","len","new","new","new","non_send_resources","remove","resources","sparse_set_index","sparse_sets","tables","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","values","values_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","Adapt","AdapterSystem","BoxedSystem","CombinatorSystem","Combine","Command","CommandQueue","Commands","Deferred","Despawn","EntityCommand","EntityCommands","ExclusiveFunctionSystem","ExclusiveSystemParam","ExclusiveSystemParamFunction","ExclusiveSystemParamItem","FunctionSystem","In","In","In","In","In","In","InitResource","Insert","InsertOrSpawnBatch","InsertResource","IntoSystem","Item","Item","Local","LogComponents","NonSend","NonSendMut","Out","Out","Out","Out","Out","ParallelCommands","Param","Param","ParamSet","PipeSystem","Query","ReadOnlySystem","ReadOnlySystemParam","Recursive","RegisteredSystemError","Remove","RemoveResource","RemovedSystem","Res","ResMut","Resource","Resource","RunSystem","RunSystemOnce","SelfRemove","Spawn","SpawnBatch","State","State","StaticSystemParam","System","System","SystemBuffer","SystemChangeTick","SystemId","SystemIdNotRegistered","SystemMeta","SystemName","SystemParam","SystemParam","SystemParamFunction","SystemParamItem","SystemState","TryInsert","WithEntity","adapt","adapter","add","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply_deferred","apply_deferred","apply_deferred","apply_deferred","apply_deferred","archetype_component_access","archetype_component_access","archetype_component_access","archetype_component_access","archetype_component_access","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_ref","assert_is_read_only_system","assert_is_system","assert_system_does_not_conflict","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bundle","bundle","bundle","bundles_iter","bundles_iter","check_change_tick","check_change_tick","check_change_tick","check_change_tick","check_change_tick","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","combine","commands","component_access","component_access","component_access","component_access","component_access","default","default_system_sets","default_system_sets","default_system_sets","default_system_sets","default_system_sets","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","despawn","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","entity","entity","entity","entity","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","get","get_last_run","get_last_run","get_last_run","get_last_run","get_last_run","get_manual","get_manual_mut","get_mut","get_param","get_param","get_param","get_param","get_param","get_param","get_unchecked_manual","hash","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init_state","init_state","init_state","init_state","initialize","initialize","initialize","initialize","initialize","initialized","insert","insert_reflect","insert_reflect_with_registry","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_configs","into_configs","into_configs","into_configs","into_inner","into_system","into_system","into_system","into_system","into_system","is_exclusive","is_exclusive","is_exclusive","is_exclusive","is_exclusive","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_send","is_send","is_send","is_send","is_send","is_send","last_run","lifetimeless","log_components","map","matches_world","meta","name","name","name","name","name","name","name","new","new","new","new","new","new","new","new_archetype","new_archetype","pipe","push","remove","remove_reflect","remove_reflect_with_registry","resource","run","run","run","run","run","run","run_readonly","run_system_once","run_system_once_with","run_unsafe","run_unsafe","run_unsafe","run_unsafe","run_unsafe","set_last_run","set_last_run","set_last_run","set_last_run","set_last_run","set_non_send","system","this_run","to_compact_string","to_compact_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetypes","update_archetypes_unsafe_world_cell","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_entity","dbg","error","ignore","info","new","unwrap","warn","Read","SCommands","SQuery","SRes","SResMut","Write","CHECK_TICK_THRESHOLD","EntityMut","EntityRef","EntityWorldMut","FromWorld","Mut","Ref","SpawnBatchIter","World","WorldBorrow","WorldBorrowMut","WorldCell","WorldId","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","error","fmt","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","get_non_send_resource","get_non_send_resource_mut","get_param","get_resource","get_resource_mut","get_sparse_set_index","hash","init","init","init","init","init","init_state","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","len","new","next","non_send_resource","non_send_resource_mut","resource","resource_mut","send_event","send_event_batch","send_event_default","size_hint","sparse_set_index","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unsafe_world_cell","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","TryRunScheduleError","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","diff_id","downcast","drop","fmt","fmt","from","from_subset","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","to_compact_string","to_smolstr","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","UnsafeEntityCell","UnsafeWorldCell","archetype","archetypes","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","bundles","change_tick","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","components","contains","contains_id","contains_type_id","deref","deref","deref_mut","deref_mut","diff_id","diff_id","downcast","downcast","drop","drop","entities","fmt","from","from","from_subset","from_subset","get","get_by_id","get_change_ticks","get_change_ticks_by_id","get_entity","get_mut","get_mut_by_id","get_non_send_resource","get_non_send_resource_by_id","get_non_send_resource_mut","get_non_send_resource_mut_by_id","get_ref","get_resource","get_resource_by_id","get_resource_mut","get_resource_mut_by_id","id","id","increment_change_tick","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","last_change_tick","location","removed_components","storages","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","world","world","world_metadata","world_mut","Area","Circle","CircleStyle","Diameter","SetDescriptor","area","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","attach","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","component_ids","component_ids","config","create_package","create_resources","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","drop","drop","drop","drop","dyn_clone","dyn_eq","dyn_hash","dyn_hash","eq","eq","equivalent","equivalent","equivalent","erased_serialize","extend","extend","extend","fill","fmt","fmt","from","from","from","from","from_components","from_components","from_subset","from_subset","from_subset","from_subset","from_world","get_components","get_components","hash","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_configs","into_system_set","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_valid_bit_pattern","new","new","on_package_removal","prepare_package","prepare_resources","record_behavior","render_id","ring","serialize","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","Clipboard","as_any","as_any_mut","attach","borrow","borrow_mut","config","deref","deref_mut","diff_id","downcast","drop","from","from_subset","handle","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","write","BLACK","BLANK","BLUE","BLUE_DARK","BLUE_MEDIUM","CYAN","CYAN_DARK","CYAN_MEDIUM","Color","ColorBuilder","DARK_ORANGE","GREEN","GREEN_DARK","GREEN_MEDIUM","GREY","GREY_DARK","GREY_MEDIUM","LIGHT_GREEN","LIGHT_RED","LIGHT_RED_ORANGE","OFF_BLACK","OFF_WHITE","RED","RED_DARK","RED_MEDIUM","RED_ORANGE","RED_ORANGE_DARK","RED_ORANGE_MEDIUM","Rgb","Rgba","WHITE","alpha","alpha","alpha","as_any","as_any","as_any_mut","as_any_mut","blue","blue","blue","borrow","borrow","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","component_ids","default","default","deref","deref","deref_mut","deref_mut","deserialize","diff_id","diff_id","downcast","downcast","drop","drop","eq","eq","erased_serialize","extend","fmt","fmt","from","from","from","from","from_components","from_rgb","from_rgba","from_subset","from_subset","from_world","from_world","get_components","green","green","green","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_valid_bit_pattern","partial_cmp","red","red","red","serialize","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","with_alpha","with_alpha","with_blue","with_green","with_red","Compositor","CurrentView","Segmental","View","ViewHandle","ViewHandleOffset","add","add_responsive","add_responsive_scene","add_to_view","add_view","anchor","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","attach","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","change_view","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","component_ids","config","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","extend","fmt","from","from","from","from","from","from_components","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","get_components","hash","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","layout","layout","new","new","new","remove_from_view","remove_view","segment","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","AspectRatio","Desktop","LANDSCAPE","LANDSCAPE_DESKTOP","LANDSCAPE_MOBILE","LANDSCAPE_TABLET","LANDSCAPE_WORKSTATION","LIMITED_HEIGHT","LIMITED_WIDTH","Landscape","Layout","LayoutThreshold","Mobile","Orientation","PORTRAIT","PORTRAIT_DESKTOP","PORTRAIT_MOBILE","PORTRAIT_TABLET","PORTRAIT_WORKSTATION","Portrait","Tablet","Threshold","ThresholdBound","Workstation","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_area","from_area","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","hash","hash","hash","horizontal_bound","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_width_major","max","min","new","new","new","new","orientation","reciprocal","satisfied","threshold","threshold","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","vertical_bound","vzip","vzip","vzip","vzip","vzip","vzip","Anchored","Both","Bottom","Center","DEFAULT_GAP","Far","Fixed","Gap","GapDescriptor","Grid","GridRelativeValue","GridTemplate","Horizontal","Justify","Left","LeftBottom","LeftTop","Near","ResponsiveGrid","ResponsiveSegment","Right","RightBottom","RightTop","Segment","SegmentBias","SegmentUnit","SegmentUnitDesc","SegmentUnitDescriptor","SegmentValue","Top","Vertical","WellFormedSegmentUnitDescriptor","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","assign_gap","at_layer","base","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","column_element_width","column_width","component_ids","configure_view","coordinate","current","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_hash","dyn_hash","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","extend","far","fixed","fixed","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_components","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","gap_x","gap_y","get_components","hash","hash","hash","hash","horizontal","horizontal_exception","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","justify","maximum","minimum","near","new","new","new","new","new","offset","row_element_height","row_height","serialize","serialize","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vertical","vertical_exception","viewed_at","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_bounds","without_landscape_desktop","without_landscape_mobile","without_landscape_tablet","without_landscape_workstation","without_portrait_desktop","without_portrait_mobile","without_portrait_tablet","without_portrait_workstation","Coordinate","CoordinateContext","CoordinateUnit","DeviceContext","InterfaceContext","NumericalContext","PositionAdjust","area","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","component_ids","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","extend","extend","fmt","fmt","fmt","fmt","from","from","from","from","from","from_components","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","get_components","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","layer","layer","location","location","new","partial_cmp","partial_cmp","partial_cmp","position","section","section","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","with_area","with_layer","with_position","Area","CReprArea","add","as_any","as_any","as_any_mut","as_any_mut","as_device","as_interface","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","component_ids","component_ids","default","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","diff_id","diff_id","div","div_assign","downcast","downcast","drop","drop","eq","eq","erased_serialize","erased_serialize","extend","extend","fmt","from","from","from","from","from","from","from","from_components","from_components","from_subset","from_subset","from_world","from_world","get_components","get_components","height","height","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_valid_bit_pattern","max_bound","min_bound","mul","mul_assign","new","new","normalized","partial_cmp","serialize","serialize","sub","to_c","to_device","to_interface","to_numerical","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","width","width","Layer","add","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","clone_type_data","component_ids","default","deref","deref_mut","deserialize","diff_id","downcast","drop","eq","erased_serialize","extend","fmt","from","from","from","from","from_components","from_subset","from_world","get_components","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","is_valid_bit_pattern","new","partial_cmp","serialize","sub","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","z","Location","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","clone_type_data","default","deref","deref_mut","deserialize","diff_id","downcast","drop","eq","erased_serialize","extend","fmt","from","from_subset","from_world","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","layer","new","partial_cmp","position","serialize","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","CReprPosition","Position","add","add_assign","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","component_ids","component_ids","default","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","diff_id","diff_id","div","downcast","downcast","drop","drop","eq","eq","erased_serialize","erased_serialize","extend","extend","fmt","fmt","from","from","from","from","from","from","from","from_components","from_components","from_subset","from_subset","from_world","from_world","get_components","get_components","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_valid_bit_pattern","new","new","normalized","partial_cmp","serialize","serialize","sub","to_c","to_device","to_interface","to_numerical","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","x","y","Section","area","as_any","as_any_mut","as_numerical","borrow","borrow_mut","bottom","center","clean_scale","clone","clone_into","clone_type_data","contains","default","deref","deref_mut","deserialize","diff_id","downcast","drop","eq","erased_serialize","extend","fmt","from","from","from_left_top_right_bottom","from_subset","from_world","height","init","intersection","into","into_any","into_any_arc","into_any_rc","is_in_subset","is_overlapping","is_touching","left","new","normalized","partial_cmp","position","right","serialize","to_device","to_interface","to_owned","to_subset","to_subset_unchecked","top","try_from","try_into","type_id","upcast","vzip","width","with_area","with_position","Despawn","Differentiable","Differential","DifferentialBundle","DifferentialDisable","DifferentialId","DifferentialIdentification","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","component","component_ids","component_ids","component_ids","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","despawn","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","differential","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","extend","extend","extend","extend","extend","from","from","from","from","from","from","from_components","from_components","from_components","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","get_components","get_components","get_components","hash","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_disabled","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","new","push_cached","serialize","serialize","should_despawn","signal_despawn","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","Active","BundleExtend","BundleExtension","Disabled","ElementStyle","Elm","Engaged","EngagedEnd","EngagedStart","EventStage","External","Fetch","Fill","InteractionHandlerFn","InteractionHandlerTrigger","Process","Ring","active","add_event","add_interaction_handler","add_view_binding","add_view_scene_binding","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","change_view","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","component_ids","component_ids","config","configure_view_grid","container","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","disabled","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","enable_differential","eq","equivalent","equivalent","equivalent","extend","extend","extend","extend","extension","fmt","from","from","from","from","from","from","from_components","from_components","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","generate_asset_key","get_components","get_components","hash","inactive","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","leaf","main","new","on_fetch","on_fetch","original","remove_web_element","send_event","set","startup","store_local_asset","teardown","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","view_trigger","vzip","vzip","vzip","vzip","vzip","vzip","Compositor","Configure","CoordinateFinalize","CoreSet","Differential","ElmConfiguration","ExternalEvent","ExternalSet","Interaction","Process","ProcessEvent","RenderPacket","Spawn","TransitionView","ViewBindings","Visibility","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","configure_hook","deref","deref","deref","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","downcast","downcast","downcast","drop","drop","drop","dyn_clone","dyn_clone","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from_subset","from_subset","from_subset","hash","hash","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_configs","into_configs","into_system_set","into_system_set","is_in_subset","is_in_subset","is_in_subset","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","EmptySetDescriptor","Leaf","Leaves","SetDescriptor","Tag","as_any","as_any","as_any","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","attach","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","component_ids","config","default","deref","deref","deref_mut","deref_mut","diff_id","diff_id","downcast","downcast","drop","drop","dyn_clone","dyn_eq","dyn_hash","dyn_hash","eq","equivalent","equivalent","equivalent","extend","fmt","from","from","from_components","from_subset","from_subset","from_world","get_components","hash","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_configs","into_system_set","is_in_subset","is_in_subset","leaves","new","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","ClearColor","Ginkgo","adapter","alpha_color_target_state","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","buffer_address","clear_color","clone","clone_into","clone_type_data","configuration","depth_stencil_state","depth_texture","deref","deref","deref_mut","deref_mut","device","device","diff_id","diff_id","downcast","downcast","drop","drop","fragment_state","from","from","from_subset","from_subset","index_buffer_with_data","init","init","instance","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","msaa","msaa","msaa_multisample_state","png_to_cov","png_to_r8unorm_d2","queue","queue","sampler_bind_group_entry","sampler_bind_group_layout_entry","scale_factor","surface","texture_bind_group_entry","texture_d2_bind_group_entry","texture_r8unorm_d2","texture_rgba8unorm_d2","texture_rgba8unorm_srgb_d2","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","triangle_list_primitive","try_from","try_from","try_into","try_into","type_id","type_id","uniform","upcast","upcast","vertex_buffer_with_data","vertex_uniform_bind_group_layout_entry","viewport","viewport","viewport_bind_group_entry","vzip","vzip","Msaa","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","diff_id","downcast","drop","from","from_subset","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","AlignedUniform","AlignedUniformData","Uniform","as_any","as_any","as_any_mut","as_any_mut","bind_group_entry","bind_group_entry","borrow","borrow","borrow_mut","borrow_mut","buffer","data","deref","deref","deref_mut","deref_mut","diff_id","diff_id","downcast","downcast","drop","drop","from","from","from_subset","from_subset","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","needs_update","new","new","refill","set_aspect","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","update","update","vzip","vzip","Viewport","ViewportHandle","adjust_position","area_updated","as_any","as_any","as_any_mut","as_any_mut","attach","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","config","deref","deref","deref_mut","deref_mut","deserialize","diff_id","diff_id","downcast","downcast","drop","drop","erased_serialize","far_layer","from","from","from_subset","from_subset","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","new","section","section","serialize","set_position","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","Activity","Airplay","AlertCircle","AlertOctagon","AlertTriangle","AlignCenter","AlignJustify","AlignLeft","AlignRight","Anchor","Aperture","Archive","Area","ArrowDown","ArrowDownCircle","ArrowDownLeft","ArrowDownRight","ArrowLeft","ArrowLeftCircle","ArrowRight","ArrowRightCircle","ArrowUp","ArrowUpCircle","ArrowUpLeft","ArrowUpRight","AtSign","Award","BarChart","BarChart2","Battery","BatteryCharging","Bell","BellOff","Bluetooth","Bold","Book","BookOpen","Bookmark","Box","Briefcase","Calendar","Camera","CameraOff","Cast","Check","CheckCircle","CheckSquare","ChevronDown","ChevronLeft","ChevronRight","ChevronUp","ChevronsDown","ChevronsLeft","ChevronsRight","ChevronsUp","Chrome","Circle","Clipboard","Clock","Cloud","CloudDrizzle","CloudLightning","CloudOff","CloudRain","CloudSnow","Code","CodeSandbox","Codepen","Coffee","Columns","Command","Compass","Copy","CornerDownLeft","CornerDownRight","CornerLeftDown","CornerLeftUp","CornerRightDown","CornerRightUp","CornerUpLeft","CornerUpRight","Cpu","CreditCard","Crop","Crosshair","Database","Delete","Disc","Divide","DivideCircle","DivideSquare","DollarSign","Download","DownloadCloud","Dribble","Droplet","Edit","EditThree","EditTwo","ExternalLink","Eye","EyeOff","Facebook","FastForward","Feather","FeatherIcon","Figma","File","FileMinus","FilePlus","FileText","Film","Filter","Flag","Folder","FolderMinus","FolderPlus","Framer","Frown","Gift","GitBranch","GitCommit","GitMerge","GitPullRequest","Github","Gitlab","Globe","Grid","HardDrive","Hash","Headphones","Heart","HelpCircle","Hexagon","Home","Icon","IconId","IconScale","Image","Inbox","Info","Instagram","Italic","Key","Layers","Layout","LifeBuoy","Link","LinkTwo","LinkedIn","List","Loader","Lock","LogIn","LogOut","Mail","Map","MapPin","Maximize","MaximizeTwo","Meh","Menu","MessageCircle","MessageSquare","Mic","MicOff","Minimize","MinimizeTwo","Minus","MinusCircle","MinusSquare","Monitor","Moon","MoreHorizontal","MoreVertical","MousePointer","Move","Music","Navigation","NavigationTwo","Octagon","Package","Paperclip","Pause","PauseCircle","PenTool","Percent","Phone","PhoneCall","PhoneForwarded","PhoneIncoming","PhoneOff","PhoneOutgoing","PieChart","Play","PlayCircle","Plus","PlusCircle","PlusSquare","Pocket","Power","Printer","RSS","Radio","RefreshCCW","RefreshCW","Repeat","Rewind","RotateCCW","RotateCW","Save","Scissors","Search","Send","Server","SetDescriptor","Settings","Share","ShareTwo","Shield","ShieldOff","ShoppingBag","ShoppingCart","Shuffle","Sidebar","SkipBack","SkipForward","Slack","Slash","Sliders","Smartphone","Smile","Speaker","Square","Star","StopCircle","Sun","Sunrise","Sunset","TV","Table","Tablet","Tag","Target","Terminal","Thermometer","ThumbsDown","ThumbsUp","ToggleLeft","ToggleRight","Tool","Trash","TrashTwo","Trello","TrendingDown","TrendingUp","Triangle","Truck","Twitch","Twitter","Type","Umbrella","Underline","Unlock","Upload","UploadCloud","User","UserCheck","UserMinus","UserPlus","UserX","Users","Video","VideoOff","Voicemail","Volume","VolumeOne","VolumeTwo","VolumeX","Watch","Wifi","WifiOff","Wind","X","XCircle","XOctagon","XSquare","Youtube","Zap","ZapOff","ZoomIn","ZoomOut","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","attach","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","component_ids","component_ids","component_ids","config","create_package","create_resources","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","dyn_clone","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","extend","extend","extend","extend","fmt","fmt","from","from","from","from","from","from","from_components","from_components","from_components","from_dim","from_subset","from_subset","from_subset","from_subset","from_subset","get_components","get_components","get_components","hash","hash","hash","id","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_configs","into_system_set","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","new","on_package_removal","prepare_package","prepare_resources","px","record_behavior","render_id","serialize","serialize","serialize","storage","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","Image","ImageData","ImageId","ImageStorage","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","attach","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","component_ids","component_ids","component_ids","config","create_package","create_resources","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","drop","drop","drop","drop","dyn_eq","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","extend","extend","extend","extend","fill","from","from","from","from","from_components","from_components","from_components","from_subset","from_subset","from_subset","from_subset","from_world","get_components","get_components","get_components","hash","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","on_package_removal","prepare_package","prepare_resources","record_behavior","render_id","serialize","serialize","serialize","some","storage","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","Index","InstanceCoordinator","InstanceCoordinatorBuilder","as_any","as_any","as_any_mut","as_any_mut","attribute","borrow","borrow","borrow_mut","borrow_mut","buffer","build","default","deref","deref","deref_mut","deref_mut","diff_id","diff_id","downcast","downcast","drop","drop","from","from","from_subset","from_subset","from_world","has_instances","has_key","init","init","instances","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","keys","new","prepare","queue_add","queue_key_layer_change","queue_remove","queue_render_packet","queue_write","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","with_attribute","Begin","Cancel","Character","Circle","Dead","End","FocusedEntity","Interaction","InteractionEvent","InteractionId","InteractionListener","InteractionPhase","InteractionShape","Key","KeyboardAdapter","KeyboardEvent","Mods","MouseAdapter","Moved","Named","Pressed","PrimaryInteraction","PrimaryInteractionEntity","Rectangle","Released","State","Unidentified","active","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","attach","begin","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button_pressed","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","component_ids","config","current","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_hash","end","engaged","engaged_end","engaged_start","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_components","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get_components","hash","id","init","init","init","init","init","init","init","init","init","init","init","init","interaction","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","location","modifiers","new","new","new","phase","set_interaction_listeners","state","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_location","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_shape","Active","Container","ExecutionState","Exit","Idle","Idle","Job","JobSyncPoint","Suspended","Task","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","attempt_to_idle","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_idle","can_idle","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","container","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","dyn_clone","dyn_eq","dyn_hash","dyn_hash","eq","eq","equivalent","equivalent","equivalent","exec_main","exec_startup","exec_teardown","execution_state","exit_requested","fmt","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","hash","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_configs","into_system_set","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","main","main","new","new","request_exit","resume","resumed","should_exit","startup","startup","suspend","suspended","teardown","teardown","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","Href","HrefLink","Media","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","attach","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","component_ids","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","downcast","downcast","downcast","download","drop","drop","drop","extend","extend","from","from","from","from_components","from_subset","from_subset","from_subset","from_world","get_components","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","link","native_document","native_video","navigate_to","new","new","remove","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","web_document","web_video","with_circle_shape","Area","Panel","PanelContentArea","PanelStyle","SetDescriptor","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","attach","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","component_ids","component_ids","config","create_package","create_resources","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","drop","drop","drop","drop","dyn_clone","dyn_eq","dyn_hash","dyn_hash","eq","eq","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","extend","extend","extend","fill","fmt","from","from","from","from","from_components","from_components","from_subset","from_subset","from_subset","from_subset","from_world","get_components","get_components","hash","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_configs","into_system_set","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_valid_bit_pattern","new","on_package_removal","prepare_package","prepare_resources","record_behavior","render_id","ring","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","Rectangle","as_any","as_any_mut","attach","borrow","borrow_mut","clone","clone_into","clone_type_data","config","create_package","create_resources","deref","deref_mut","diff_id","downcast","drop","extend","from","from_subset","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","new","on_package_removal","prepare_package","prepare_resources","record_behavior","render_id","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","Anchor","Binding","BindingCoordinate","Bindings","Components","ExternalArgs","Root","Scene","SceneAccessChain","SceneBinder","SceneBinding","SceneCoordinator","SceneHandle","SceneTarget","access_chain","align","anchor","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","bind","bind_nodes","bind_scene","binding","binding","binding_entity","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","component_ids","coordinate","default","default","default","default","dependents","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","despawn","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_hash","dyn_hash","entity","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_components","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","get_alignment_mut","get_components","handle","hash","hash","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","resolve_handle","root","spawn_scene","target","this","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_anchor","update_anchor_area","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_layer","AlignmentBias","AlignmentDisable","AlignmentPoint","Away","Center","Close","LayerAlignment","PositionAlignment","SceneAligner","SceneAlignment","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","away","bias","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calc_layer","calc_pos","center","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","close","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","horizontal","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","offset","pos","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","vertical","vzip","vzip","vzip","vzip","vzip","vzip","Area","CharacterDimension","DEFAULT_OPT_SCALE","FontSize","GlyphColorChanges","MaxCharacters","SetDescriptor","Text","TextKey","TextValue","area_metrics","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","attach","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","component_ids","component_ids","component_ids","component_ids","component_ids","config","create_package","create_resources","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","dimensions","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","dyn_clone","dyn_eq","dyn_hash","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","extend","extend","extend","extend","extend","extend","fmt","fmt","font","from","from","from","from","from","from","from","from_components","from_components","from_components","from_components","from_components","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","get_components","get_components","get_components","get_components","get_components","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_configs","into_system_set","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","new","new","on_package_removal","prepare_package","prepare_resources","px","record_behavior","render_id","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_change","with_range","MAX_CHECKED_FONT_SIZE","MonospacedFont","TEXT_HEIGHT_CORRECTION","as_any","as_any_mut","best_fit","borrow","borrow_mut","character_dimensions","deref","deref_mut","diff_id","downcast","drop","from","from_subset","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","new","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","AtlasBlock","AtlasEntry","PADDING","TextureAtlas","TextureAtlasLocation","add_reference","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","block","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","cmp","compare","coord","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","drop","drop","drop","drop","dyn_eq","dyn_hash","entries_mut","eq","equivalent","equivalent","equivalent","factors","fixed","fmt","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_world","get","grow_by","has_key","hash","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","num_filled_locations","partial_cmp","position","remove_reference","set","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","view","vzip","vzip","vzip","vzip","would_grow","write_next","TextureCoordinates","TexturePartition","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","default","deref","deref","deref_mut","deref_mut","deserialize","diff_id","diff_id","downcast","downcast","drop","drop","erased_serialize","fmt","from","from","from_subset","from_subset","from_world","from_world","full","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_valid_bit_pattern","is_valid_bit_pattern","new","new","serialize","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","MipsLevel","Progress","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","component_ids","component_ids","default","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","diff_id","diff_id","downcast","downcast","drop","drop","empty","end","end_mut","eq","eq","erased_serialize","erased_serialize","extend","extend","from","from","from_components","from_components","from_subset","from_subset","from_world","from_world","full","get_components","get_components","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_valid_bit_pattern","is_valid_bit_pattern","new","new","serialize","serialize","set_end","set_start","start","start_mut","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","FixedAtlas","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","diff_id","downcast","drop","from","from_subset","get","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","new","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","view","vzip","write_key","Time","TimeDelta","TimeMarker","as_any","as_any_mut","attach","borrow","borrow_mut","config","deref","deref_mut","diff_id","downcast","drop","frame_diff","from","from_subset","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","mark","milli_to_sec","time_since","timer","to_subset","to_subset_unchecked","total_time","try_from","try_into","type_id","upcast","vzip","Timer","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","clone_type_data","component_ids","default","deref","deref_mut","diff_id","downcast","drop","extend","finished","fmt","from","from_components","from_subset","from_world","get_components","init","interval","into","into_any","into_any_arc","into_any_rc","is_in_subset","last_mark","mark","new","not_started","overage","percent_elapsed","reset","set_interval","set_offset","start","start","start_offset","start_with_offset","started","time_elapsed","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","with_start_offset","Keyboard","NumberPad","TelephonePad","VirtualKeyboardAdapter","VirtualKeyboardType","as_any","as_any","as_any_mut","as_any_mut","attach","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","close","component_ids","config","deref","deref","deref_mut","deref_mut","diff_id","diff_id","downcast","downcast","drop","drop","extend","from","from","from_components","from_subset","from_subset","get_components","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","open","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","ADDRESS_MODE_CLAMP_TO_BORDER","ADDRESS_MODE_CLAMP_TO_ZERO","ALL","ALLOW_UNDERLYING_NONCOMPLIANT_ADAPTER","ALPHA","ALPHA_BLENDING","ANISOTROPIC_FILTERING","AccelerationStructure","Adapter","AdapterInfo","Add","AddressMode","All","Always","Astc","AstcBlock","AstcChannel","Auto","AutoNoVsync","AutoVsync","Automatic","B10x10","B10x5","B10x6","B10x8","B12x10","B12x12","B4x4","B5x4","B5x5","B6x5","B6x6","B8x5","B8x6","B8x8","BASE_VERTEX","BGRA8UNORM_STORAGE","BLACK","BLENDABLE","BLUE","BLUE","BROWSER_WEBGPU","BUFFER_BINDINGS_NOT_16_BYTE_ALIGNED","BUFFER_BINDING_ARRAY","Back","Backend","Backends","Bc1RgbaUnorm","Bc1RgbaUnormSrgb","Bc2RgbaUnorm","Bc2RgbaUnormSrgb","Bc3RgbaUnorm","Bc3RgbaUnormSrgb","Bc4RSnorm","Bc4RUnorm","Bc5RgSnorm","Bc5RgUnorm","Bc6hRgbFloat","Bc6hRgbUfloat","Bc7RgbaUnorm","Bc7RgbaUnormSrgb","Bgra8Unorm","Bgra8UnormSrgb","BindGroup","BindGroupDescriptor","BindGroupEntry","BindGroupLayout","BindGroupLayoutDescriptor","BindGroupLayoutEntry","BindingResource","BindingType","BlendComponent","BlendFactor","BlendOperation","BlendState","BrowserWebGpu","Buffer","Buffer","Buffer","BufferAddress","BufferArray","BufferAsyncError","BufferBinding","BufferBindingType","BufferDescriptor","BufferSize","BufferSlice","BufferUsages","BufferView","BufferViewMut","CLEAR_TEXTURE","CLIPPER_INVOCATIONS","CLIPPER_PRIMITIVES_OUT","COLOR","COMPARISON_SAMPLERS","COMPUTE","COMPUTE_SHADERS","COMPUTE_SHADER_INVOCATIONS","CONSERVATIVE_RASTERIZATION","COPY_BUFFER_ALIGNMENT","COPY_BYTES_PER_ROW_ALIGNMENT","COPY_DST","COPY_DST","COPY_SRC","COPY_SRC","CUBE_ARRAY_TEXTURES","Ccw","ClampToBorder","ClampToEdge","Clear","Color","ColorTargetState","ColorWrites","CommandBuffer","CommandBufferDescriptor","CommandEncoder","CommandEncoderDescriptor","CompareFunction","Comparison","CompositeAlphaMode","ComputePass","ComputePassDescriptor","ComputePassTimestampWrites","ComputePipeline","ComputePipelineDescriptor","Constant","Cpu","CreateSurfaceError","Cube","CubeArray","Cw","D1","D1","D2","D2","D2Array","D3","D3","DEBUG","DEPTH32FLOAT_STENCIL8","DEPTH_BIAS_CLAMP","DEPTH_CLIP_CONTROL","DEPTH_TEXTURE_AND_BUFFER_COPIES","DISCARD_HAL_LABELS","DUAL_SOURCE_BLENDING","DX12","DecrementClamp","DecrementWrap","Depth","Depth16Unorm","Depth24Plus","Depth24PlusStencil8","Depth32Float","Depth32FloatStencil8","DepthBiasState","DepthOnly","DepthStencilState","Destroyed","Device","DeviceDescriptor","DeviceLostReason","DeviceType","Discard","DiscreteGpu","DisplayP3","DownlevelCapabilities","DownlevelFlags","Dst","DstAlpha","Dx12","Dx12Compiler","Dxc","DynamicOffset","EacR11Snorm","EacR11Unorm","EacRg11Snorm","EacRg11Unorm","Empty","Equal","Error","ErrorFilter","Etc2Rgb8A1Unorm","Etc2Rgb8A1UnormSrgb","Etc2Rgb8Unorm","Etc2Rgb8UnormSrgb","Etc2Rgba8Unorm","Etc2Rgba8UnormSrgb","Extent3d","FILTERABLE","FLOAT32_FILTERABLE","FRAGMENT","FRAGMENT_SHADER_INVOCATIONS","FRAGMENT_STORAGE","FRAGMENT_WRITABLE_STORAGE","FULL_DRAW_INDEX_UINT32","Face","Features","Fifo","FifoRelaxed","Fill","FilterMode","Filtering","Float","Float16x2","Float16x4","Float32","Float32x2","Float32x3","Float32x4","Float64","Float64x2","Float64x3","Float64x4","FragmentState","Front","FrontFace","Fxc","GL","GREEN","GREEN","Gl","Gles3MinorVersion","Good","Greater","GreaterEqual","Hdr","HighPerformance","IGNORE","INDEPENDENT_BLEND","INDEX","INDIRECT","INDIRECT_EXECUTION","INDIRECT_FIRST_INSTANCE","INVALID_TIMESTAMP","Id","ImageCopyBuffer","ImageCopyBufferBase","ImageCopyTexture","ImageCopyTextureBase","ImageCopyTextureTagged","ImageCopyTextureTaggedBase","ImageDataLayout","ImageSubresourceRange","Immediate","IncrementClamp","IncrementWrap","IndexFormat","Inherit","Instance","Instance","InstanceDescriptor","InstanceFlags","IntegratedGpu","Invert","Keep","Label","Less","LessEqual","Limits","Line","LineList","LineStrip","Linear","Load","LoadOp","Lost","Lost","LowPower","MAPPABLE_PRIMARY_BUFFERS","MAP_ALIGNMENT","MAP_READ","MAP_WRITE","METAL","MULTISAMPLED_SHADING","MULTISAMPLE_RESOLVE","MULTISAMPLE_X16","MULTISAMPLE_X2","MULTISAMPLE_X4","MULTISAMPLE_X8","MULTIVIEW","MULTI_DRAW_INDIRECT","MULTI_DRAW_INDIRECT_COUNT","Mailbox","Maintain","MaintainBase","MaintainResult","MapMode","Max","Metal","Min","MirrorRepeat","MultisampleState","NONBLOCKING_QUERY_RESOLVE","NONE","NON_POWER_OF_TWO_MIPMAPPED_TEXTURES","NV12","Nearest","Never","NonFiltering","None","None","NotEqual","OVER","Occlusion","Ok","One","OneMinusConstant","OneMinusDst","OneMinusDstAlpha","OneMinusSrc","OneMinusSrc1","OneMinusSrc1Alpha","OneMinusSrcAlpha","Opaque","OpaqueBlack","OpaqueWhite","Operations","Origin2d","Origin3d","Other","OutOfMemory","OutOfMemory","OutOfMemory","Outdated","Outdated","PARTIALLY_BOUND_BINDING_ARRAY","PIPELINE_STATISTICS_QUERY","POLYGON_MODE_LINE","POLYGON_MODE_POINT","PREMULTIPLIED_ALPHA_BLENDING","PRIMARY","PUSH_CONSTANTS","PUSH_CONSTANT_ALIGNMENT","PipelineLayout","PipelineLayoutDescriptor","PipelineStatistics","PipelineStatisticsTypes","Plane0","Plane1","Plane2","Point","PointList","Poll","Poll","PolygonMode","PostMultiplied","PowerPreference","PreMultiplied","PredefinedColorSpace","PresentMode","PresentationTimestamp","PrimitiveState","PrimitiveTopology","PushConstantRange","QUERY_RESOLVE","QUERY_RESOLVE_BUFFER_ALIGNMENT","QUERY_SET_MAX_QUERIES","QUERY_SIZE","QuerySet","QuerySetDescriptor","QueryType","Queue","QueueWriteBufferView","R16Float","R16Sint","R16Snorm","R16Uint","R16Unorm","R32Float","R32Sint","R32Uint","R8Sint","R8Snorm","R8Uint","R8Unorm","RAY_QUERY","RAY_TRACING_ACCELERATION_STRUCTURE","READ_ONLY_DEPTH_STENCIL","RED","RED","RENDER_ATTACHMENT","REPLACE","REPLACE","RG11B10UFLOAT_RENDERABLE","RawHandle","Read","ReadOnly","ReadWrite","RenderBundle","RenderBundleDepthStencil","RenderBundleDescriptor","RenderBundleEncoder","RenderBundleEncoderDescriptor","RenderPass","RenderPassColorAttachment","RenderPassDepthStencilAttachment","RenderPassDescriptor","RenderPassTimestampWrites","RenderPipeline","RenderPipelineDescriptor","Repeat","Replace","RequestAdapterOptions","RequestAdapterOptionsBase","RequestDeviceError","ReverseSubtract","Rg11b10Float","Rg16Float","Rg16Sint","Rg16Snorm","Rg16Uint","Rg16Unorm","Rg32Float","Rg32Sint","Rg32Uint","Rg8Sint","Rg8Snorm","Rg8Uint","Rg8Unorm","Rgb10a2Uint","Rgb10a2Unorm","Rgb9e5Ufloat","Rgba16Float","Rgba16Sint","Rgba16Snorm","Rgba16Uint","Rgba16Unorm","Rgba32Float","Rgba32Sint","Rgba32Uint","Rgba8Sint","Rgba8Snorm","Rgba8Uint","Rgba8Unorm","Rgba8UnormSrgb","SAMPLED_TEXTURE_AND_STORAGE_BUFFER_ARRAY_NON_UNIFORM_INDEXING","SECONDARY","SHADER_EARLY_DEPTH_TEST","SHADER_F16","SHADER_F64","SHADER_I16","SHADER_PRIMITIVE_INDEX","SHADER_UNUSED_VERTEX_OUTPUT","SPIRV_SHADER_PASSTHROUGH","STORAGE","STORAGE_BINDING","STORAGE_READ_WRITE","STORAGE_RESOURCE_BINDING_ARRAY","SURFACE_VIEW_FORMATS","Sampler","Sampler","Sampler","SamplerArray","SamplerBindingType","SamplerBorderColor","SamplerDescriptor","ShaderLocation","ShaderModel","ShaderModule","ShaderModuleDescriptor","ShaderModuleDescriptorSpirV","ShaderSource","ShaderStages","Sint","Sint16x2","Sint16x4","Sint32","Sint32x2","Sint32x3","Sint32x4","Sint8x2","Sint8x4","Sm2","Sm4","Sm5","Snorm16x2","Snorm16x4","Snorm8x2","Snorm8x4","Some","Src","Src1","Src1Alpha","SrcAlpha","SrcAlphaSaturated","Srgb","Stencil8","StencilFaceState","StencilOnly","StencilOperation","StencilState","Storage","StorageTexture","StorageTextureAccess","Store","StoreOp","SubmissionIndex","SubmissionQueueEmpty","Suboptimal","Subtract","Surface","SurfaceCapabilities","SurfaceConfiguration","SurfaceError","SurfaceStatus","SurfaceTarget","SurfaceTargetUnsafe","SurfaceTexture","TEXTURE_ADAPTER_SPECIFIC_FORMAT_FEATURES","TEXTURE_BINDING","TEXTURE_BINDING_ARRAY","TEXTURE_COMPRESSION_ASTC","TEXTURE_COMPRESSION_ASTC_HDR","TEXTURE_COMPRESSION_BC","TEXTURE_COMPRESSION_ETC2","TEXTURE_FORMAT_16BIT_NORM","TEXTURE_FORMAT_NV12","TIMESTAMP_QUERY","TIMESTAMP_QUERY_INSIDE_PASSES","TRANSPARENT","Texture","Texture","TextureAspect","TextureDescriptor","TextureDimension","TextureFormat","TextureFormatFeatureFlags","TextureFormatFeatures","TextureSampleType","TextureUsages","TextureView","TextureView","TextureViewArray","TextureViewDescriptor","TextureViewDimension","Timeout","Timeout","Timestamp","TransparentBlack","TriangleList","TriangleStrip","UNIFORM","UNIFORM_BUFFER_AND_STORAGE_TEXTURE_ARRAY_NON_UNIFORM_INDEXING","UNRESTRICTED_EXTERNAL_TEXTURE_COPIES","UNRESTRICTED_INDEX_BUFFER","Uint","Uint16","Uint16x2","Uint16x4","Uint32","Uint32","Uint32x2","Uint32x3","Uint32x4","Uint8x2","Uint8x4","UncapturedErrorHandler","Uniform","Unknown","Unorm","Unorm16x2","Unorm16x4","Unorm8x2","Unorm8x4","UnormSrgb","VALIDATION","VERTEX","VERTEX","VERTEX_AND_INSTANCE_INDEX_RESPECTS_RESPECTIVE_FIRST_VALUE_IN_INDIRECT_DRAW","VERTEX_ATTRIBUTE_64BIT","VERTEX_FRAGMENT","VERTEX_SHADER_INVOCATIONS","VERTEX_STORAGE","VERTEX_STRIDE_ALIGNMENT","VERTEX_WRITABLE_STORAGE","VIEW_FORMATS","VULKAN","Validation","Validation","Version0","Version1","Version2","Vertex","VertexAttribute","VertexBufferLayout","VertexFormat","VertexState","VertexStepMode","VirtualGpu","Vulkan","WEBGPU_TEXTURE_FORMAT_SUPPORT","WHITE","Wait","Wait","WaitForSubmissionIndex","WaitForSubmissionIndex","WasmNotSend","WasmNotSendSync","WasmNotSync","Wgsl","Window","WindowHandle","Write","WriteOnly","ZERO","ZERO","Zero","Zero","Zero","a","add_srgb_suffix","address_mode_u","address_mode_v","address_mode_w","all","all","all","all","all","all","all","all","all","all","all_native_mask","all_webgpu_mask","allowed_usages","alpha","alpha_mode","alpha_modes","alpha_to_coverage_enabled","anisotropy_clamp","any_backend_feature_enabled","array_layer_count","array_layer_count","array_stride","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_entire_binding","as_entire_buffer_binding","as_hal","as_hal","as_hal","as_hal","as_hal","as_image_copy","as_mut","as_mut","as_ref","aspect","aspect","aspect","aspect","aspect","aspect","aspect_specific_format","attributes","b","back","backend","backends","base_array_layer","base_array_layer","base_mip_level","base_mip_level","begin_compute_pass","begin_occlusion_query","begin_pipeline_statistics_query","begin_pipeline_statistics_query","begin_render_pass","beginning_of_pass_write_index","beginning_of_pass_write_index","bias","bind_group_layouts","binding","binding","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","blend","block_copy_size","block_dimensions","block_size","border_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer","buffer","buffers","bytes_per_row","check_limits","check_limits_with_fail_fn","clamp","clear_buffer","clear_texture","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","cmp","cmp","cmp","color","color_attachments","color_formats","color_space","color_space","compare","compare","compare","compare","compare","compare","compatible_surface","compatible_surface","compatible_texture_dimension","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","compliant","components","components_with_aspect","configure","conservative","constant","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","copy_buffer_to_buffer","copy_buffer_to_texture","copy_texture_to_buffer","copy_texture_to_texture","count","count","count","create_adapter_from_hal","create_bind_group","create_bind_group_layout","create_buffer","create_buffer_from_hal","create_buffer_init","create_command_encoder","create_compute_pipeline","create_device_from_hal","create_pipeline_layout","create_query_set","create_render_bundle_encoder","create_render_pipeline","create_sampler","create_shader_module","create_shader_module_spirv","create_shader_module_unchecked","create_surface","create_surface_unsafe","create_texture","create_texture_from_hal","create_texture_with_data","create_view","cull_mode","debugging","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","depth_compare","depth_fail_op","depth_ops","depth_or_array_layers","depth_or_array_layers","depth_read_only","depth_stencil","depth_stencil","depth_stencil_attachment","depth_write_enabled","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","desired_maximum_frame_latency","destroy","destroy","destroy","device","device_type","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","dimension","dimension","dimension","dispatch_workgroups","dispatch_workgroups_indirect","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downlevel_defaults","downlevel_webgl2_defaults","draw","draw","draw","draw","draw_indexed","draw_indexed","draw_indexed","draw_indexed","draw_indexed_indirect","draw_indexed_indirect","draw_indexed_indirect","draw_indexed_indirect","draw_indirect","draw_indirect","draw_indirect","draw_indirect","driver","driver_info","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dst_factor","dx12_shader_compiler","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","end_occlusion_query","end_of_pass_write_index","end_of_pass_write_index","end_pipeline_statistics_query","end_pipeline_statistics_query","entries","entries","entry_point","entry_point","entry_point","enumerate_adapters","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute_bundles","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","fail_op","features","features","finish","finish","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_fallback_adapter","force_fallback_adapter","format","format","format","format","format","format","format","format","formats","fragment","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_build_config","from_core","from_hal","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_plane","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_window","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","front","front_face","g","generate_report","get_bind_group_layout","get_bind_group_layout","get_capabilities","get_current_texture","get_default_config","get_downlevel_capabilities","get_info","get_mapped_range","get_mapped_range_mut","get_presentation_timestamp","get_texture_format_features","get_timestamp_period","gles_minor_version","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","guaranteed_format_features","has_color_aspect","has_depth_aspect","has_dynamic_offset","has_stencil_aspect","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","height","include_spirv_raw","include_wgsl","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert_debug_marker","insert_debug_marker","insert_debug_marker","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_combined_depth_stencil_format","is_compressed","is_depth_enabled","is_depth_read_only","is_depth_stencil_component","is_depth_stencil_format","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_enabled","is_enabled","is_full_resource","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_invalid","is_multi_planar_format","is_queue_empty","is_read_only","is_read_only","is_read_only","is_srgb","is_stencil_read_only","is_strip","is_surface_supported","is_wait","is_webgpu_compliant","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","layer_range","layout","layout","layout","layout","layout","limits","limits","limits","load","lod_max_clamp","lod_min_clamp","mag_filter","map_async","map_index","map_label","mapped_at_creation","mask","max_bind_groups","max_bindings_per_bind_group","max_buffer_size","max_compute_invocations_per_workgroup","max_compute_workgroup_size_x","max_compute_workgroup_size_y","max_compute_workgroup_size_z","max_compute_workgroup_storage_size","max_compute_workgroups_per_dimension","max_dynamic_storage_buffers_per_pipeline_layout","max_dynamic_uniform_buffers_per_pipeline_layout","max_inter_stage_shader_components","max_mips","max_non_sampler_bindings","max_push_constant_size","max_sampled_textures_per_shader_stage","max_samplers_per_shader_stage","max_storage_buffer_binding_size","max_storage_buffers_per_shader_stage","max_storage_textures_per_shader_stage","max_texture_array_layers","max_texture_dimension_1d","max_texture_dimension_2d","max_texture_dimension_3d","max_uniform_buffer_binding_size","max_uniform_buffers_per_shader_stage","max_vertex_attributes","max_vertex_buffer_array_stride","max_vertex_buffers","min_filter","min_storage_buffer_offset_alignment","min_uniform_buffer_offset_alignment","mip_level","mip_level","mip_level","mip_level","mip_level_count","mip_level_count","mip_level_count","mip_level_count","mip_level_size","mip_range","mipmap_filter","module","module","module","multi_draw_indexed_indirect","multi_draw_indexed_indirect_count","multi_draw_indirect","multi_draw_indirect_count","multisample","multiview","multiview","name","needs_ref_value","needs_ref_value","needs_ref_value","new","not","not","not","not","not","not","not","not","not","not","occlusion_query_set","offset","offset","offset","on_submitted_work_done","on_uncaptured_error","operation","ops","origin","origin","origin","origin","panic_on_timeout","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pass_op","physical_size","planes","poll","poll_all","polygon_mode","pop_debug_group","pop_debug_group","pop_debug_group","pop_error_scope","power_preference","power_preference","premultiplied_alpha","premultiplied_alpha","present","present_mode","present_modes","primitive","push_constant_ranges","push_debug_group","push_debug_group","push_debug_group","push_error_scope","query_set","query_set","r","range","read_mask","ref_second_blend_source","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove_srgb_suffix","request_adapter","request_device","required_features","required_features","required_limits","resolve_query_set","resolve_target","resource","rows_per_image","sample_count","sample_count","sample_count","sample_count_supported","sample_type","set","set","set","set","set","set","set","set","set","set","set_bind_group","set_bind_group","set_bind_group","set_bind_group","set_bind_group","set_blend_constant","set_device_lost_callback","set_index_buffer","set_index_buffer","set_index_buffer","set_index_buffer","set_pipeline","set_pipeline","set_pipeline","set_pipeline","set_pipeline","set_push_constants","set_push_constants","set_push_constants","set_push_constants","set_push_constants","set_scissor_rect","set_stencil_reference","set_vertex_buffer","set_vertex_buffer","set_vertex_buffer","set_vertex_buffer","set_viewport","shader_location","shader_model","size","size","size","size","size","size","size_multiple_requirement","slice","slope_scale","source","source","source","source","source","src_factor","stages","start_capture","stencil","stencil_ops","stencil_read_only","step_mode","stop_capture","store","strip_index_format","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","submit","suboptimal","supported_sample_counts","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","targets","texture","texture","texture","texture","texture","timestamp_writes","timestamp_writes","to_2d","to_3d","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_str","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_tagged","to_untagged","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","topology","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unclipped_depth","union","union","union","union","union","union","union","union","union","union","unmap","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","usage","usage","usage","usage","usage","usages","uses_constant","using_alignment","using_resolution","util","vendor","vertex","vertex_attr_array","view","view","view_formats","view_formats","visibility","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait","wait_for","width","width","width","with_env","write_buffer","write_buffer_with","write_mask","write_mask","write_texture","write_timestamp","write_timestamp","write_timestamp","x","x","y","y","z","access","format","has_dynamic_offset","min_binding_size","multisampled","sample_type","ty","view_dimension","view_dimension","read_only","dxc_path","dxil_path","description","source","source","raw_display_handle","raw_window_handle","block","channel","filterable","Label","MAX_BIND_GROUPS","MAX_COLOR_ATTACHMENTS","MAX_VERTEX_BUFFERS","None","RawString","Some","any_surface","api","binding_model","command","device","error","gfx_if_dx12","gfx_if_dx12_hidden","gfx_if_empty","gfx_if_empty_hidden","gfx_if_gles","gfx_if_gles_hidden","gfx_if_metal","gfx_if_metal_hidden","gfx_if_vulkan","gfx_if_vulkan_hidden","gfx_select","global","hal_api","hal_label","hub","id","identity","instance","pipeline","present","registry","resource","storage","validation","AnySurface","as_any","as_any_mut","backend","borrow","borrow_mut","deref","deref_mut","diff_id","downcast","downcast_ref","drop","fmt","from","from_subset","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","new","take","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","Empty","Gles","Vulkan","ArrayUnsupported","BindError","BindGroup","BindGroupDescriptor","BindGroupDynamicBindingData","BindGroupEntry","BindGroupLayout","BindGroupLayoutDescriptor","BindGroupLayoutEntryError","BindGroupLayouts","BindingArrayLengthMismatch","BindingArrayPartialLengthMismatch","BindingArrayZeroLength","BindingRangeTooLarge","BindingResource","BindingSizeTooSmall","BindingTypeMaxCountError","BindingTypeMaxCountErrorKind","BindingZeroSize","BindingZone","BindingsNumMismatch","Buffer","BufferArray","BufferBinding","BufferRangeTooLarge","ConflictBinding","CreateBindGroupError","CreateBindGroupLayoutError","CreatePipelineLayoutError","DepthStencilAspect","Device","Device","Device","DuplicateBinding","DynamicBindingOutOfBounds","DynamicStorageBuffers","DynamicUniformBuffers","Entry","GetBindGroupLayoutError","InvalidBindGroupLayout","InvalidBindingIndex","InvalidBuffer","InvalidGroupIndex","InvalidLayout","InvalidPipeline","InvalidSampler","InvalidStorageTextureFormat","InvalidStorageTextureMipLevelCount","InvalidTexture","InvalidTextureDimension","InvalidTextureMultisample","InvalidTextureSampleType","InvalidTextureView","InvalidVisibility","LateMinBufferBindingSizeMismatch","MisalignedPushConstantRange","MismatchedDynamicOffsetCount","MissingBindingDeclaration","MissingBufferUsage","MissingDownlevelFlags","MissingFeatures","MissingFeatures","MissingStages","MissingTextureUsage","MoreThanOnePushConstantRangePerStage","PartialRangeMatch","Pipeline","PipelineLayout","PipelineLayoutDescriptor","PushConstantRangeTooLarge","PushConstantUploadError","ResourceUsageConflict","SampleTypeFloatFilterableBindingMultisampled","SampledTextures","Sampler","SamplerArray","Samplers","SingleBindingExpected","Stage","StorageBuffers","StorageReadNotSupported","StorageTextureCube","StorageTextureReadWrite","StorageTextures","TextureView","TextureViewArray","TooLarge","TooManyBindings","TooManyBindings","TooManyGroups","Unaligned","UnalignedBufferOffset","UnalignedDynamicBinding","UniformBuffers","UnmatchedStages","WrongBindingType","WrongSamplerComparison","WrongSamplerFiltering","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","as_info","as_info","as_info","as_info_mut","as_info_mut","as_info_mut","bind_group_layouts","binding","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_size","buffer_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","compact_index","count","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","entries","entries","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_pretty","fmt_pretty","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","group_index","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","kind","label","label","label","label","layout","limit","offset","push_constant_ranges","resource","shader_size","size","source","source","source","source","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zone","actual","alignment","binding","binding","binding_range","buffer_size","expected","group","group","group","idx","idx","limit_name","maximum_dynamic_offset","offset","offset","actual","actual","actual","actual","actual","binding","binding","binding","binding","binding","binding","binding","binding","binding","buffer","buffer","expected","expected","expected","expected","given","layout_cmp","layout_dimension","layout_flt","layout_format","layout_multisampled","layout_sample_type","limit","min","mip_level_count","range","sampler_cmp","sampler_flt","size","view_dimension","view_format","view_format","view_samples","binding","binding","error","maximum","actual","bound","index","index","index","intersected","max","max","provided","range","actual","actual","actual","end_offset","idx","idx","idx","matched","missing","offset","range","unmatched","AlreadyStarted","AlreadyStopped","AttachmentErrorLocation","AttachmentSampleCountMismatch","AttachmentsDimensionMismatch","BakedCommands","BasePassRef","BeginOcclusionQuery","BeginPipelineStatisticsQuery","Beginning","Bind","Bind","BindGroupIndexOutOfRange","BindGroupIndexOutOfRange","BindingSizeTooSmall","BindingSizeTooSmall","BufferOffsetAlignment","BufferOverrun","BufferOverrun","BufferOverrun","Bundle","Clear","ClearError","Color","ColorAttachment","ColorAttachment","ColorAttachmentError","CommandBuffer","CommandBufferMutable","CommandEncoderError","ComputePass","ComputePassDescriptor","ComputePassError","ComputePassErrorInner","ComputePassTimestampWrites","CopyAspectNotOne","CopyDstMissingAspects","CopyError","CopyFromForbiddenTextureFormat","CopySide","CopySrcMissingAspects","CopyToForbiddenTextureFormat","CreateRenderBundleError","Depth","Destination","DestroyedBuffer","DestroyedBuffer","Device","Device","Device","Device","Device","Discard","Dispatch","Dispatch","DispatchError","Draw","Draw","DrawError","Encoder","Encoder","Encoder","Encoder","End","EndOcclusionQuery","EndPipelineStatisticsQuery","ExecuteBundle","ExecutionError","ExternalCopyToForbiddenTextureFormat","ImageCopyBuffer","ImageCopyTexture","ImageCopyTextureTagged","IncompatibleBindGroup","IncompatibleBindGroup","IncompatibleBundleReadOnlyDepthStencil","IncompatibleBundleTargets","IncompatiblePipelineRods","IncompatiblePipelineTargets","IncompatibleType","IndexBeyondLimit","IndirectBufferOverrun","IndirectBufferOverrun","IndirectCountBufferOverrun","InstanceBeyondLimit","Invalid","InvalidAttachment","InvalidBindGroup","InvalidBindGroup","InvalidBindGroup","InvalidBindGroup","InvalidBuffer","InvalidBuffer","InvalidBuffer","InvalidBuffer","InvalidBytesPerRow","InvalidCommandEncoder","InvalidCopySize","InvalidDepthOps","InvalidDepthStencilAttachmentFormat","InvalidDepthTextureExtent","InvalidDevice","InvalidDevice","InvalidDevice","InvalidDimensionExternal","InvalidDynamicOffsetCount","InvalidFormat","InvalidGroupSize","InvalidIndirectBuffer","InvalidMipLevel","InvalidPipeline","InvalidPipeline","InvalidPopDebugGroup","InvalidPopDebugGroup","InvalidQuerySet","InvalidQuerySet","InvalidQuerySet","InvalidQuerySet","InvalidRenderBundle","InvalidResolveSampleCounts","InvalidRowsPerImage","InvalidSampleCount","InvalidSampleCount","InvalidScissorRect","InvalidStencilOps","InvalidTexture","InvalidTexture","InvalidTextureAspect","InvalidTextureLayerRange","InvalidTextureLevelRange","InvalidTextureMipLevel","InvalidValuesOffset","InvalidViewportDepth","InvalidViewportRect","Load","LoadOp","MemoryInitFailure","MismatchedResolveTextureFormat","MissingAttachments","MissingBlendConstant","MissingBufferUsage","MissingBufferUsage","MissingBufferUsage","MissingClearTextureFeature","MissingCopyDstUsageFlag","MissingCopyDstUsageFlag","MissingCopySrcUsageFlag","MissingDownlevelFlags","MissingDownlevelFlags","MissingDownlevelFlags","MissingFeatures","MissingFeatures","MissingIndexBuffer","MissingOcclusionQuerySet","MissingPipeline","MissingPipeline","MissingRenderAttachmentUsageFlag","MissingTextureAspect","MissingTextureUsage","MissingVertexBuffer","MultiViewDimensionMismatch","MultiViewMismatch","NoValidTextureClearMode","NotRecording","Occlusion","OutOfBounds","OutOfMemory","Pass","PassChannel","PassErrorScope","PipelineStatistics","PopDebugGroup","PushConstants","PushConstants","QueryError","QueryOverrun","QueryReset","QueryUse","QueryUse","QueryUseError","Rect","RenderBundle","RenderBundleDescriptor","RenderBundleEncoder","RenderBundleEncoderDescriptor","RenderBundleError","RenderCommand","RenderCommandError","RenderPass","RenderPassColorAttachment","RenderPassDepthStencilAttachment","RenderPassDescriptor","RenderPassError","RenderPassErrorInner","RenderPassTimestampLocation","RenderPassTimestampWrites","Resolve","ResolveError","ResourceUsageConflict","ResourceUsageConflict","SameSourceDestinationBuffer","SetBindGroup","SetIndexBuffer","SetPipelineCompute","SetPipelineRender","SetPushConstant","SetScissorRect","SetVertexBuffer","SetViewport","SimplifiedQueryType","Source","Store","StoreOp","SurfaceTextureDropped","TextureFormatsNotCopyCompatible","TextureOverrun","TextureViewIsNotRenderable","Timestamp","TooMany","Transfer","TransferError","UnalignedBufferOffset","UnalignedBufferOffset","UnalignedBufferOffset","UnalignedBytesPerRow","UnalignedCopyHeight","UnalignedCopyOriginX","UnalignedCopyOriginY","UnalignedCopySize","UnalignedCopyWidth","UnalignedFillSize","Unimplemented","Unimplemented","UnmatchedIndexFormats","UnspecifiedBytesPerRow","UnspecifiedRowsPerImage","UnsupportedResolveTargetFormat","UsageConflict","Use","UsedTwiceInsideRenderpass","VertexBeyondLimit","VertexBufferIndexOutOfRange","WriteTimestamp","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_info","as_info","as_info_mut","as_info_mut","aspect","aspect","beginning_of_pass_write_index","beginning_of_pass_write_index","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","bundle_ffi","channel","clear_value","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","color_attachments","color_formats","color_space","commands","compute_ffi","default","default","default","default","depth","depth_stencil","depth_stencil_attachment","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dummy","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dynamic_offsets","end_of_pass_write_index","end_of_pass_write_index","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_pretty","fmt_pretty","fmt_pretty","fmt_pretty","fmt_pretty","fmt_pretty","fmt_pretty","fmt_pretty","fmt_pretty","fmt_pretty","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","h","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_finished","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","label","label","label","label","label","label","layout","load_op","mip_level","mip_level","multiview","new","new","new","occlusion_query_set","origin","origin","parent","parent_id","parent_id","premultiplied_alpha","push_constant_data","query_set","query_set","read_only","render_ffi","resolve_target","sample_count","scope","scope","scope","set_index_buffer","set_index_buffer","source","source","source","source","source","source","source","source","source","source","source","source","source","source","stencil","store_op","string_data","texture","texture","timestamp_writes","timestamp_writes","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","view","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","w","x","y","index","resolve","buffer_size","end_offset","start_offset","subresource_array_layer_count","subresource_base_array_layer","subresource_base_mip_level","subresource_mip_level_count","subresource_range_aspects","texture_format","texture_layer_range","texture_level_range","given","limit","buffer_size","end_offset","index","max","offset","current","diff","index","limit","buffer","diff","index","index","index_limit","instance_limit","last_index","last_instance","last_vertex","pipeline","slot","slot","vertex_limit","indexed","indirect","indirect","pipeline","pipeline","active_query_index","new_query_index","query_index","query_index","query_set_size","query_type","set_type","actual","expected","index","index","max","max","actual_extent","actual_location","actual_location","actual_samples","begin_count_offset","buffer_size","bundle_depth","bundle_stencil","count","count_buffer_size","dst","dst","end_count_offset","end_offset","expected_extent","expected_location","expected_location","expected_samples","format","location","location","location","location","offset","pass_depth","pass_stencil","reason","src","src","buffer_end_offset","buffer_size","buffer_start_offset","end_query","end_query","query_set_size","start_query","start_query","stride","aspect","aspect","aspect","buffer_size","count","dimension","dst_format","end_offset","end_offset","format","format","format","level","requested","sample_count","side","side","src_format","start_offset","start_offset","texture_size","total","wgpu_render_bundle_draw","wgpu_render_bundle_draw_indexed","wgpu_render_bundle_draw_indexed_indirect","wgpu_render_bundle_draw_indirect","wgpu_render_bundle_insert_debug_marker","wgpu_render_bundle_pop_debug_group","wgpu_render_bundle_push_debug_group","wgpu_render_bundle_set_bind_group","wgpu_render_bundle_set_index_buffer","wgpu_render_bundle_set_pipeline","wgpu_render_bundle_set_push_constants","wgpu_render_bundle_set_vertex_buffer","wgpu_compute_pass_begin_pipeline_statistics_query","wgpu_compute_pass_dispatch_workgroups","wgpu_compute_pass_dispatch_workgroups_indirect","wgpu_compute_pass_end_pipeline_statistics_query","wgpu_compute_pass_insert_debug_marker","wgpu_compute_pass_pop_debug_group","wgpu_compute_pass_push_debug_group","wgpu_compute_pass_set_bind_group","wgpu_compute_pass_set_pipeline","wgpu_compute_pass_set_push_constant","wgpu_compute_pass_write_timestamp","wgpu_render_pass_begin_occlusion_query","wgpu_render_pass_begin_pipeline_statistics_query","wgpu_render_pass_draw","wgpu_render_pass_draw_indexed","wgpu_render_pass_draw_indexed_indirect","wgpu_render_pass_draw_indirect","wgpu_render_pass_end_occlusion_query","wgpu_render_pass_end_pipeline_statistics_query","wgpu_render_pass_execute_bundles","wgpu_render_pass_insert_debug_marker","wgpu_render_pass_multi_draw_indexed_indirect","wgpu_render_pass_multi_draw_indexed_indirect_count","wgpu_render_pass_multi_draw_indirect","wgpu_render_pass_multi_draw_indirect_count","wgpu_render_pass_pop_debug_group","wgpu_render_pass_push_debug_group","wgpu_render_pass_set_bind_group","wgpu_render_pass_set_blend_constant","wgpu_render_pass_set_index_buffer","wgpu_render_pass_set_pipeline","wgpu_render_pass_set_push_constants","wgpu_render_pass_set_scissor_rect","wgpu_render_pass_set_stencil_reference","wgpu_render_pass_set_vertex_buffer","wgpu_render_pass_set_viewport","wgpu_render_pass_write_timestamp","BufferMapPendingClosure","Device","Device","DeviceDescriptor","DeviceError","DeviceLostCallback","DeviceLostClosure","DeviceLostClosureC","DeviceLostClosureRust","DeviceLostInvocation","HostMap","ImplicitPipelineContext","ImplicitPipelineIds","IncompatibleColorAttachment","IncompatibleDepthStencilAttachment","IncompatibleMultiview","IncompatibleSampleCount","Invalid","InvalidDevice","InvalidQueueId","Lost","MissingDownlevelFlags","MissingFeatures","OutOfMemory","Read","RenderBundle","RenderPassCompatibilityCheckType","RenderPassCompatibilityError","RenderPipeline","ResourceCreationFailed","SHADER_STAGE_COUNT","StuckGpu","UserClosures","WaitIdleError","Write","WrongDevice","WrongSubmissionIndex","any_device","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_info","as_info_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callback","callback","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","create_buffer_from_hal","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","device_lost_invocations","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_c","from_rust","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","global","group_ids","group_ids","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_valid","label","mappings","queue","required_features","required_limits","resource","root_id","root_id","source","submissions","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_string","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","user_data","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","actual","actual","actual","actual","expected","expected","expected","expected","indices","ty","ty","ty","ty","AnyDevice","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","diff_id","downcast","downcast_clone","downcast_ref","drop","fmt","from","from_subset","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","new","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","Buffer","BufferStillMapped","DestroyedBuffer","DestroyedBuffer","DestroyedTexture","DestroyedTexture","InvalidQueue","MemoryInitFailure","Queue","Queue","Queue","QueueSubmitError","QueueWriteError","StagingBuffer","StuckGpu","SubmittedWorkDoneClosure","SubmittedWorkDoneClosureC","SurfaceOutputDropped","SurfaceUnconfigured","TempResource","Texture","Transfer","Unmap","WrappedSubmissionIndex","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_info","as_info_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callback","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","device","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_c","from_rust","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","index","info","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","queue_id","raw","source","source","to_compact_string","to_compact_string","to_compact_string","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_smolstr","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","user_data","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CreateDeviceError","Device","FailedToCreateZeroBuffer","OutOfMemory","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","clone_type_data","deref","deref_mut","diff_id","downcast","drop","fmt","fmt","from","from","from_subset","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","source","to_compact_string","to_owned","to_smolstr","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","ContextError","ErrorFormatter","PrettyError","as_any","as_any","as_any_mut","as_any_mut","bind_group_label","bind_group_layout_label","borrow","borrow","borrow_mut","borrow_mut","buffer_label","buffer_label_with_key","cause","command_buffer_label","compute_pipeline_label","deref","deref","deref_mut","deref_mut","diff_id","diff_id","downcast","downcast","drop","drop","error","fmt","fmt","fmt_pretty","fmt_pretty","format_pretty_any","from","from","from_subset","from_subset","init","init","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","label","label","label_key","note","query_set_label","render_pipeline_label","sampler_label","source","string","texture_label","texture_label_with_key","texture_view_label","texture_view_label_with_key","to_compact_string","to_smolstr","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","Global","GlobalReport","adapter_as_hal","adapter_downlevel_capabilities","adapter_drop","adapter_features","adapter_get_info","adapter_get_presentation_timestamp","adapter_get_texture_format_features","adapter_is_surface_supported","adapter_limits","adapter_request_device","as_any","as_any","as_any","as_any_mut","as_any_mut","bind_group_drop","bind_group_label","bind_group_layout_drop","bind_group_layout_label","borrow","borrow","borrow_mut","borrow_mut","buffer_destroy","buffer_drop","buffer_get_mapped_range","buffer_label","buffer_map_async","buffer_unmap","clear_backend","command_buffer_drop","command_buffer_label","command_encoder_clear_buffer","command_encoder_clear_texture","command_encoder_copy_buffer_to_buffer","command_encoder_copy_buffer_to_texture","command_encoder_copy_texture_to_buffer","command_encoder_copy_texture_to_texture","command_encoder_drop","command_encoder_finish","command_encoder_insert_debug_marker","command_encoder_pop_debug_group","command_encoder_push_debug_group","command_encoder_resolve_query_set","command_encoder_run_compute_pass","command_encoder_run_render_pass","command_encoder_write_timestamp","compute_pipeline_drop","compute_pipeline_get_bind_group_layout","compute_pipeline_label","create_adapter_from_hal","create_buffer_error","create_buffer_from_hal","create_device_from_hal","create_render_bundle_error","create_texture_error","create_texture_from_hal","deref","deref","deref_mut","deref_mut","device_as_hal","device_create_bind_group","device_create_bind_group_layout","device_create_buffer","device_create_command_encoder","device_create_compute_pipeline","device_create_pipeline_layout","device_create_query_set","device_create_render_bundle_encoder","device_create_render_pipeline","device_create_sampler","device_create_shader_module","device_create_shader_module_spirv","device_create_texture","device_destroy","device_downlevel_properties","device_drop","device_features","device_fence_as_hal","device_label","device_limits","device_mark_lost","device_poll","device_set_device_lost_closure","device_start_capture","device_stop_capture","diff_id","diff_id","downcast","downcast","drop","drop","drop","dyn_eq","enumerate_adapters","eq","equivalent","equivalent","equivalent","fmt","from","from","from_hal_instance","from_instance","from_subset","from_subset","generate_report","gl","hub_report","init","init","instance","instance_as_hal","instance_create_surface","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","new","pipeline_layout_drop","pipeline_layout_label","poll_all_devices","query_set_drop","query_set_label","queue_create_staging_buffer","queue_drop","queue_get_timestamp_period","queue_on_submitted_work_done","queue_submit","queue_validate_write_buffer","queue_write_buffer","queue_write_staging_buffer","queue_write_texture","render_bundle_drop","render_bundle_encoder_finish","render_bundle_label","render_pipeline_drop","render_pipeline_get_bind_group_layout","render_pipeline_label","request_adapter","sampler_drop","sampler_label","shader_module_drop","shader_module_label","surface_as_hal","surface_configure","surface_drop","surface_get_capabilities","surface_get_current_texture","surface_present","surface_texture_discard","surfaces","surfaces","surfaces","texture_as_hal","texture_create_view","texture_destroy","texture_drop","texture_label","texture_view_drop","texture_view_label","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vulkan","vzip","vzip","HalApi","VARIANT","create_instance_from_hal","get_surface","hub","instance_as_hal","Hub","HubReport","Hubs","adapters","adapters","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","bind_group_layouts","bind_group_layouts","bind_groups","bind_groups","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffers","buffers","command_buffers","command_buffers","compute_pipelines","compute_pipelines","deref","deref","deref","deref_mut","deref_mut","deref_mut","devices","devices","diff_id","diff_id","diff_id","downcast","downcast","downcast","drop","drop","drop","dyn_eq","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from_subset","from_subset","from_subset","generate_report","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_empty","is_in_subset","is_in_subset","is_in_subset","pipeline_layouts","pipeline_layouts","query_sets","query_sets","queues","queues","render_bundles","render_bundles","render_pipelines","render_pipelines","samplers","samplers","shader_modules","shader_modules","staging_buffers","texture_views","texture_views","textures","textures","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","AdapterId","BindGroupId","BindGroupLayoutId","BufferId","CommandBufferId","CommandEncoderId","ComputePassEncoderId","ComputePipelineId","DeviceId","EPOCH_MASK","Id","PipelineLayoutId","QuerySetId","QueueId","RenderBundleEncoderId","RenderBundleId","RenderPassEncoderId","RenderPipelineId","SamplerId","ShaderModuleId","StagingBufferId","SurfaceId","TextureId","TextureViewId","TypedId","as_any","as_any","as_any_mut","as_dyn_eq","backend","borrow","borrow_mut","clone","clone_into","clone_type_data","cmp","compare","deref","deref_mut","diff_id","downcast","drop","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","fmt","from","from","from_raw","from_subset","hash","init","into","into_any","into_any_arc","into_any_rc","into_raw","into_raw","is_in_subset","partial_cmp","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","unzip","unzip","upcast","vzip","zip","zip","GlobalIdentityHandlerFactory","IdentityHandlerFactory","IdentityManager","IdentityManagerFactory","Input","Input","as_any","as_any","as_any_mut","as_any_mut","autogenerate_ids","autogenerate_ids","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","diff_id","diff_id","downcast","downcast","drop","drop","fmt","fmt","free","from","from","from_subset","from_subset","init","init","input_to_id","input_to_id","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","mark_as_used","new","process","spawn","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","Adapter","AdapterInputs","DeviceLost","FailedLimit","GetSurfaceSupportError","HalSurface","IdSet","Instance","Internal","InvalidAdapter","InvalidAdapter","InvalidAdapter","InvalidAdapter","InvalidSurface","InvalidSurface","InvalidSurface","IsSurfaceSupportedError","LimitsExceeded","Mask","NoGraphicsQueue","NotFound","OutOfMemory","RequestAdapterError","RequestAdapterOptions","RequestDeviceError","Surface","Unsupported","UnsupportedFeature","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_info","as_info","as_info_mut","as_info_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","compatible_surface","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_fallback_adapter","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","get_capabilities","gl","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_surface_supported","label","name","new","parse_backends_from_comma_list","power_preference","raw","source","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_string","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vulkan","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ABSTRACT_FLOAT","ABSTRACT_INT","ABSTRACT_WIDTH","Abs","AbstractFloat","AbstractFloat","AbstractInt","AbstractInt","AccelerationStructure","Access","AccessIndex","Acos","Acosh","Add","Add","AddressSpace","All","And","And","Any","Arena","Array","ArrayLength","ArraySize","As","Asin","Asinh","Atan","Atan2","Atanh","Atomic","Atomic","AtomicCompareExchangeWeakResult","AtomicFunction","AtomicResult","Auto","BOOL","BOOL_WIDTH","Barrier","Barrier","BaseInstance","BaseVertex","Bgra8Unorm","Bi","Bias","Binary","BinaryOperator","Binding","BindingArray","BitwiseNot","Block","Block","Bool","Bool","Break","BuiltIn","BuiltIn","ByName","ByNameOrId","Bytes","Call","CallResult","Ceil","Center","Centroid","Clamp","ClipDistance","Coarse","Compose","Compute","ConservativeDepth","Constant","Constant","Constant","Continue","Cos","Cosh","CountLeadingZeros","CountOneBits","CountTrailingZeros","Cross","Cube","CullDistance","D1","D2","D3","Default","Degrees","Depth","Derivative","DerivativeAxis","DerivativeControl","Determinant","Distance","Divide","Dot","Dynamic","EarlyDepthTest","Emit","EntryPoint","Equal","Exact","Exchange","ExclusiveOr","ExclusiveOr","Exp","Exp2","Expression","ExtractBits","F32","F32","F64","F64","FaceForward","FastHashMap","FastHashSet","FastIndexMap","FastIndexSet","FindLsb","FindMsb","Fine","Flat","Float","Floor","Fma","Fract","FragDepth","Fragment","Frexp","FrexpResult","FrontFacing","Function","Function","FunctionArgument","FunctionArgument","FunctionResult","GlobalInvocationId","GlobalVariable","GlobalVariable","Gradient","Greater","GreaterEqual","GreaterEqual","Handle","Handle","I32","I32","I32","I64","I64","If","Image","ImageClass","ImageDimension","ImageLoad","ImageQuery","ImageQuery","ImageSample","ImageStore","InclusiveOr","InclusiveOr","Initialize","InsertBits","InstanceIndex","Interpolation","Inverse","InverseSqrt","IsInf","IsNan","Kill","LOAD","Ldexp","Length","Less","LessEqual","LessEqual","Linear","Literal","Literal","Load","LocalInvocationId","LocalInvocationIndex","LocalVariable","LocalVariable","Location","Log","Log2","LogicalAnd","LogicalNot","LogicalOr","Loop","Math","MathFunction","Matrix","Max","Max","Min","Min","Mix","Modf","ModfResult","Module","Modulo","Multiply","Negate","None","None","Normalize","NotEqual","NumLayers","NumLevels","NumSamples","NumWorkGroups","Outer","Override","Pack2x16float","Pack2x16snorm","Pack2x16unorm","Pack4x8snorm","Pack4x8unorm","Perspective","PointCoord","PointSize","Pointer","Position","Pow","PredeclaredType","PrimitiveIndex","Private","Proceed","PushConstant","Quad","R16Float","R16Sint","R16Snorm","R16Uint","R16Unorm","R32Float","R32Sint","R32Uint","R8Sint","R8Snorm","R8Uint","R8Unorm","Radians","Range","RayQuery","RayQuery","RayQueryFunction","RayQueryGetIntersection","RayQueryProceedResult","Reflect","Refract","Relational","RelationalFunction","ResourceBinding","Return","ReverseBits","Rg11b10Float","Rg16Float","Rg16Sint","Rg16Snorm","Rg16Uint","Rg16Unorm","Rg32Float","Rg32Sint","Rg32Uint","Rg8Sint","Rg8Snorm","Rg8Uint","Rg8Unorm","Rgb10a2Uint","Rgb10a2Unorm","Rgba16Float","Rgba16Sint","Rgba16Snorm","Rgba16Uint","Rgba16Unorm","Rgba32Float","Rgba32Sint","Rgba32Uint","Rgba8Sint","Rgba8Snorm","Rgba8Uint","Rgba8Unorm","Round","STORAGE","STORE","Sample","SampleIndex","SampleLevel","SampleMask","Sampled","Sampler","Sampling","Saturate","Scalar","Scalar","ScalarKind","Select","ShaderStage","ShiftLeft","ShiftRight","Sign","Sin","Sinh","Sint","Size","SmoothStep","SourceLocation","Span","SpanContext","SpecialTypes","Splat","Sqrt","Statement","Step","Storage","Storage","StorageAccess","StorageFormat","Store","Struct","StructMember","Subtract","Subtract","Switch","SwitchCase","SwitchValue","Swizzle","SwizzleComponent","Tan","Tanh","Terminate","Transpose","Tri","Trunc","Type","TypeInner","U32","U32","U32","UNDEFINED","Uint","Unary","UnaryOperator","Unchanged","Uniform","UniqueArena","Unpack2x16float","Unpack2x16snorm","Unpack2x16unorm","Unpack4x8snorm","Unpack4x8unorm","ValuePointer","Vector","VectorSize","Vertex","VertexIndex","ViewIndex","W","WORK_GROUP","Width","WithSpan","WorkGroup","WorkGroupId","WorkGroupSize","WorkGroupUniformLoad","WorkGroupUniformLoadResult","X","X","XYZW","Y","Y","Z","Zero","ZeroValue","access","all","all","and_then","append","append","apply_default_interpolation","argument_count","arguments","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_inner","automatic_conversion_combine","automatically_converts_to","back","binding","binding","binding","binding","binding","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonical_form","check_contains_handle","check_contains_handle","check_contains_range","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","compact","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","complement","complement","component_type","components","conservative","const_expressions","constants","contains","contains","cull","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","difference","difference","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","early_depth_test","emit_to_stderr","emit_to_stderr_with_path","emit_to_string","emit_to_string_with_path","empty","empty","entry_points","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expressions","extend","extend","extend","extend_block","fall_through","fetch_if","fetch_if_or_append","fetch_or_append","first_and_last","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_index","from_iter","from_iter","from_name","from_name","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_vec","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_zero_based_index_range","front","function","functions","generate_predeclared_type","generate_ray_desc_type","generate_ray_intersection_type","get","get_handle","get_mut","get_span","get_span","global_variables","group","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","implicit_derivatives","index","index","index","index","index","index_mut","indexable_length","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","insert","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_other","is_abstract","is_all","is_all","is_atomic_pointer","is_defined","is_dynamic_index","is_dynamically_sized","is_empty","is_empty","is_empty","is_empty","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_mipmapped","is_multisampled","is_numeric","is_terminator","iter","iter","iter","iter","iter_mut","iter_names","iter_names","keywords","kind","len","len","len","length","line_number","line_position","local_variables","location","location","name","name","name","name","name","name","name","name","named_expressions","needs_pre_emit","new","new","new","new","new","new","new_from_bounds","next","not","not","offset","offset","one","originating_global","override","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pointer_space","predeclared_types","proc","push","range_from","ray_desc","ray_intersection","remove","remove","replace","result","scalar","scalar","scalar_kind","scalar_kind","scalar_width","set","set","size","source","space","span_iter","span_iter_mut","spans","special_types","splice","stage","sub","sub","sub_assign","sub_assign","subsume","symmetric_difference","symmetric_difference","to_built_in","to_compact_string","to_ctx","to_indexable_length","to_inner_atomic","to_inner_scalar","to_inner_vector","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_range","to_smolstr","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_wgsl","to_wgsl","to_wgsl","to_wgsl","toggle","toggle","total_span","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","ty","ty","ty","ty","ty_inner","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","union","union","until","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","valid","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","width","with_capacity","with_context","with_span","workgroup_size","zero","zero_based_index_range","access","compare","interpolation","location","sampling","second_blend_source","invariant","accept","arg","arg1","arg2","arg3","argument","array_index","array_index","axis","base","base","committed","comparison","components","condition","convert","coordinate","coordinate","ctrl","depth_ref","expr","expr","expr","fun","fun","gather","image","image","image","index","index","kind","left","level","level","offset","op","op","pattern","pointer","query","query","reject","right","sample","sampler","size","size","ty","ty","ty","value","vector","access","format","kind","multi","multi","level","size","size","width","width","acceleration_structure","descriptor","result","x","y","accept","arguments","array_index","body","break_if","cases","condition","continuing","coordinate","fun","fun","function","image","pointer","pointer","pointer","query","reject","result","result","result","selector","value","value","value","value","arrayed","base","base","base","class","columns","comparison","dim","members","rows","scalar","scalar","scalar","size","size","size","size","space","space","span","stride","CULL_BACK_FACING","CULL_FRONT_FACING","CULL_NO_OPAQUE","CULL_OPAQUE","NO_OPAQUE","OPAQUE","RayFlag","SKIP_AABBS","SKIP_CLOSEST_HIT_SHADER","SKIP_TRIANGLES","TERMINATE_ON_FIRST_HIT","all","as_any","as_any","as_any_mut","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","clone_type_data","complement","contains","default","deref","deref_mut","diff_id","difference","downcast","drop","dyn_eq","empty","eq","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","from_subset","from_world","glsl","init","insert","intersection","intersects","into","into_any","into_any_arc","into_any_rc","into_iter","is_all","is_empty","is_in_subset","iter","iter_names","msl","not","remove","set","spv","sub","sub_assign","symmetric_difference","to_owned","to_subset","to_subset_unchecked","toggle","try_from","try_into","type_id","union","upcast","vzip","ADJUST_COORDINATE_SPACE","ARRAY_OF_ARRAYS","BUFFER_STORAGE","BindingMap","CLIP_DISTANCE","COMPUTE_SHADER","CONSERVATIVE_DEPTH","CUBE_TEXTURES_ARRAY","CULL_DISTANCE","Custom","DOUBLE_TYPE","DRAW_PARAMETERS","DUAL_SOURCE_BLENDING","DYNAMIC_ARRAY_SIZE","Desktop","Embedded","EntryPointNotFound","Error","FIRST_INSTANCE_BINDING","FORCE_POINT_SIZE","FULL_IMAGE_FORMATS","Features","FmtError","IMAGE_LOAD_STORE","IMAGE_SIZE","INCLUDE_UNUSED_ITEMS","INSTANCE_INDEX","ImageMultipleSamplers","MULTISAMPLED_TEXTURES","MULTISAMPLED_TEXTURE_ARRAYS","MULTI_VIEW","MissingFeatures","MultiplePushConstants","NOPERSPECTIVE_QUALIFIER","Options","PipelineOptions","PushConstantItem","ReflectionInfo","SAMPLE_QUALIFIER","SAMPLE_VARIABLES","SUPPORTED_CORE_VERSIONS","SUPPORTED_ES_VERSIONS","TEXTURE_LEVELS","TEXTURE_SAMPLES","TEXTURE_SHADOW_LOD","TextureMapping","UnsupportedExternal","UnsupportedScalar","VaryingLocation","Version","VersionNotSupported","Writer","WriterFlags","access_path","all","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","binding_map","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","complement","complement","contains","contains","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","difference","difference","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_hash","empty","empty","entry_point","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_name","from_name","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","hash","index","init","init","init","init","init","init","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","iter","iter_names","iter_names","location","multiview","new","new_gles","not","not","offset","partial_cmp","push_constant_items","remove","remove","sampler","set","set","shader_stage","source","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","texture","texture_mapping","to_compact_string","to_compact_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniforms","union","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","varying","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","writer_flags","zero_initialize_workgroup_memory","is_webgl","version","BindSamplerTarget","BindTarget","BindingMap","CapabilityNotSupported","EntryPointError","EntryPointResourceMap","EntryPointResources","Error","FeatureNotImplemented","Format","Inline","InlineSamplerIndex","MissingBindTarget","MissingBinding","MissingPushConstants","MissingSizesBuffer","Options","PipelineOptions","Resource","Slot","TranslationInfo","UnimplementedBindTarget","UnsupportedArrayOf","UnsupportedArrayOfType","UnsupportedAttribute","UnsupportedBinaryOp","UnsupportedBuiltIn","UnsupportedCall","UnsupportedCompose","UnsupportedFunction","UnsupportedRWStorageTexture","UnsupportedRayTracing","UnsupportedWriteableStorageBuffer","UnsupportedWriteableStorageTexture","Validation","Writer","allow_and_force_point_size","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","binding_array_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds_check_policies","buffer","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","entry_point_names","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fake_missing_bindings","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","inline_samplers","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lang_version","mutable","new","per_entry_point_map","push_constant_buffer","resources","sampler","sampler","sizes_buffer","source","spirv_cross_compatibility","texture","to_compact_string","to_compact_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","write_string","zero_initialize_workgroup_memory","Address","Always","BorderColor","ClampToBorder","ClampToEdge","ClampToZero","CompareFunc","Coord","Equal","Filter","Greater","GreaterEqual","InlineSampler","Less","LessEqual","Linear","MirroredRepeat","Nearest","Never","Normalized","NotEqual","OpaqueBlack","OpaqueWhite","Pixel","Repeat","TransparentBlack","address","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_str","as_str","as_str","as_str","as_str","border_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","compare_func","coord","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lod_clamp","mag_filter","max_anisotropy","min_filter","mip_filter","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","ADJUST_COORDINATE_SPACE","ARRAYED","Addresses","ArbitraryPrecisionFixedPointINTEL","ArbitraryPrecisionFloatingPointINTEL","ArbitraryPrecisionIntegersINTEL","AsmINTEL","AtomicFloat16AddEXT","AtomicFloat16MinMaxEXT","AtomicFloat32AddEXT","AtomicFloat32MinMaxEXT","AtomicFloat64AddEXT","AtomicFloat64MinMaxEXT","AtomicStorage","AtomicStorageOps","BFloat16ConversionINTEL","BindingInfo","BindingMap","BindlessTextureNV","BitInstructions","BlockingPipesINTEL","CLAMP_FRAG_DEPTH","CacheControlsINTEL","Capability","ClipDistance","ComputeDerivativeGroupLinearNV","ComputeDerivativeGroupQuadsNV","CooperativeMatrixKHR","CooperativeMatrixNV","CoreBuiltinsARM","CullDistance","DEBUG","DEPTH","DebugInfo","DebugInfoModuleINTEL","DemoteToHelperInvocation","DemoteToHelperInvocationEXT","DenormFlushToZero","DenormPreserve","DerivativeControl","DeviceEnqueue","DeviceGroup","DisplacementMicromapNV","DotProduct","DotProductInput4x8Bit","DotProductInput4x8BitKHR","DotProductInput4x8BitPacked","DotProductInput4x8BitPackedKHR","DotProductInputAll","DotProductInputAllKHR","DotProductKHR","DrawParameters","EntryPointNotFound","Error","ExpectAssumeKHR","FORCE_POINT_SIZE","FPFastMathModeINTEL","FPGAArgumentInterfacesINTEL","FPGABufferLocationINTEL","FPGAClusterAttributesINTEL","FPGADSPControlINTEL","FPGAInvocationPipeliningAttributesINTEL","FPGAKernelAttributesINTEL","FPGAKernelAttributesv2INTEL","FPGALatencyControlINTEL","FPGALoopControlsINTEL","FPGAMemoryAccessesINTEL","FPGAMemoryAttributesINTEL","FPGARegINTEL","FPMaxErrorINTEL","FeatureNotImplemented","Float16","Float16Buffer","Float16ImageAMD","Float64","FloatingPointModeINTEL","FragmentBarycentricKHR","FragmentBarycentricNV","FragmentDensityEXT","FragmentFullyCoveredEXT","FragmentMaskAMD","FragmentShaderPixelInterlockEXT","FragmentShaderSampleInterlockEXT","FragmentShaderShadingRateInterlockEXT","FragmentShadingRateKHR","FunctionFloatControlINTEL","FunctionPointersINTEL","GenericPointer","Geometry","GeometryPointSize","GeometryShaderPassthroughNV","GeometryStreams","GlobalVariableFPGADecorationsINTEL","GlobalVariableHostAccessINTEL","GroupNonUniform","GroupNonUniformArithmetic","GroupNonUniformBallot","GroupNonUniformClustered","GroupNonUniformPartitionedNV","GroupNonUniformQuad","GroupNonUniformRotateKHR","GroupNonUniformShuffle","GroupNonUniformShuffleRelative","GroupNonUniformVote","GroupUniformArithmeticKHR","Groups","IOPipesINTEL","Image1D","ImageBasic","ImageBuffer","ImageCubeArray","ImageFootprintNV","ImageGatherBiasLodAMD","ImageGatherExtended","ImageMSArray","ImageMipmap","ImageQuery","ImageReadWrite","ImageReadWriteLodAMD","ImageRect","ImageTypeFlags","IndirectReferencesINTEL","InputAttachment","InputAttachmentArrayDynamicIndexing","InputAttachmentArrayDynamicIndexingEXT","InputAttachmentArrayNonUniformIndexing","InputAttachmentArrayNonUniformIndexingEXT","Int16","Int64","Int64Atomics","Int64ImageEXT","Int8","IntegerFunctions2INTEL","InterpolationFunction","Kernel","KernelAttributesINTEL","LABEL_VARYINGS","Linkage","LiteralSampler","LongConstantCompositeINTEL","LoopFuseINTEL","MULTISAMPLED","Matrix","MemoryAccessAliasingINTEL","MeshShadingEXT","MeshShadingNV","MinLod","MissingCapabilities","MultiView","MultiViewport","NamedBarrier","Native","None","OptNoneINTEL","Options","PerViewAttributesNV","PhysicalStorageBufferAddresses","PhysicalStorageBufferAddressesEXT","PipeStorage","PipelineOptions","Pipes","Polyfill","RayCullMaskKHR","RayQueryKHR","RayQueryPositionFetchKHR","RayQueryProvisionalKHR","RayTracingDisplacementMicromapNV","RayTracingKHR","RayTracingMotionBlurNV","RayTracingNV","RayTracingOpacityMicromapEXT","RayTracingPositionFetchKHR","RayTracingProvisionalKHR","RayTraversalPrimitiveCullingKHR","RoundToInfinityINTEL","RoundingModeRTE","RoundingModeRTZ","RuntimeAlignedAttributeINTEL","RuntimeDescriptorArray","RuntimeDescriptorArrayEXT","SAMPLED","SampleMaskOverrideCoverageNV","SampleMaskPostDepthCoverage","SampleRateShading","Sampled1D","SampledBuffer","SampledCubeArray","SampledImageArrayDynamicIndexing","SampledImageArrayNonUniformIndexing","SampledImageArrayNonUniformIndexingEXT","SampledRect","Shader","ShaderClockKHR","ShaderEnqueueAMDX","ShaderInvocationReorderNV","ShaderLayer","ShaderNonUniform","ShaderNonUniformEXT","ShaderSMBuiltinsNV","ShaderStereoViewNV","ShaderViewportIndex","ShaderViewportIndexLayerEXT","ShaderViewportIndexLayerNV","ShaderViewportMaskNV","ShadingRateNV","SignedZeroInfNanPreserve","SparseResidency","SplitBarrierINTEL","StencilExportEXT","StorageBuffer16BitAccess","StorageBuffer8BitAccess","StorageBufferArrayDynamicIndexing","StorageBufferArrayNonUniformIndexing","StorageBufferArrayNonUniformIndexingEXT","StorageImageArrayDynamicIndexing","StorageImageArrayNonUniformIndexing","StorageImageArrayNonUniformIndexingEXT","StorageImageExtendedFormats","StorageImageMultisample","StorageImageReadWithoutFormat","StorageImageWriteWithoutFormat","StorageInputOutput16","StoragePushConstant16","StoragePushConstant8","StorageTexelBufferArrayDynamicIndexing","StorageTexelBufferArrayDynamicIndexingEXT","StorageTexelBufferArrayNonUniformIndexing","StorageTexelBufferArrayNonUniformIndexingEXT","StorageUniform16","StorageUniformBufferBlock16","SubgroupAvcMotionEstimationChromaINTEL","SubgroupAvcMotionEstimationINTEL","SubgroupAvcMotionEstimationIntraINTEL","SubgroupBallotKHR","SubgroupBufferBlockIOINTEL","SubgroupDispatch","SubgroupImageBlockIOINTEL","SubgroupImageMediaBlockIOINTEL","SubgroupShuffleINTEL","SubgroupVoteKHR","Tessellation","TessellationPointSize","TextureBlockMatchQCOM","TextureBoxFilterQCOM","TextureSampleWeightedQCOM","TileImageColorReadAccessEXT","TileImageDepthReadAccessEXT","TileImageStencilReadAccessEXT","TransformFeedback","USMStorageClassesINTEL","UniformAndStorageBuffer16BitAccess","UniformAndStorageBuffer8BitAccess","UniformBufferArrayDynamicIndexing","UniformBufferArrayNonUniformIndexing","UniformBufferArrayNonUniformIndexingEXT","UniformDecoration","UniformTexelBufferArrayDynamicIndexing","UniformTexelBufferArrayDynamicIndexingEXT","UniformTexelBufferArrayNonUniformIndexing","UniformTexelBufferArrayNonUniformIndexingEXT","UnstructuredLoopControlsINTEL","UnsupportedVersion","Validation","VariableLengthArrayINTEL","VariablePointers","VariablePointersStorageBuffer","Vector16","VectorAnyINTEL","VectorComputeINTEL","VulkanMemoryModel","VulkanMemoryModelDeviceScope","VulkanMemoryModelDeviceScopeKHR","VulkanMemoryModelKHR","WorkgroupMemoryExplicitLayout16BitAccessKHR","WorkgroupMemoryExplicitLayout8BitAccessKHR","WorkgroupMemoryExplicitLayoutKHR","Writer","WriterFlags","ZeroInitializeWorkgroupMemoryMode","all","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","binding_array_size","binding_map","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds_check_policies","capabilities","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","compare","complement","complement","contains","contains","debug_info","decorate_non_uniform_binding_array_access","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","difference","difference","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","empty","empty","entry_point","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","file_name","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_name","from_name","from_str","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_u32","from_world","from_world","get_capabilities_used","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","iter","iter_names","iter_names","lang_version","new","not","not","partial_cmp","remove","remove","set","set","shader_stage","source_code","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_compact_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","write_vec","zero_initialize_workgroup_memory","compact","SymbolTable","Typifier","add","add_root","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","default","default","deref","deref","deref_mut","deref_mut","diff_id","diff_id","downcast","downcast","drop","drop","fmt","fmt","from","from","from_subset","from_subset","from_world","from_world","get","grow","index","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","invalidate","is_in_subset","is_in_subset","lookup","new","pop_scope","push_scope","register_type","reset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","wgsl","Frontend","ParseError","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","deref","deref","deref_mut","deref_mut","diff_id","diff_id","downcast","downcast","drop","drop","emit_to_stderr","emit_to_stderr_with_path","emit_to_string","emit_to_string_with_path","fmt","fmt","from","from","from_subset","from_subset","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","labels","location","message","new","parse","parse_str","source","to_compact_string","to_owned","to_smolstr","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","wgsl","RESERVED","Alignment","ArrayLength","ArrayLengthDynamic","Atomic","AutomaticConversionFloatToInt","AutomaticConversionLossy","BoundsCheckPolicies","BoundsCheckPolicy","Call","Constant","ConstantEvaluator","ConstantEvaluatorError","Derivative","DivisionByZero","Dynamic","EIGHT","Emitter","EntryPoint","EntryPointArgument","EntryPointIndex","EntryPointLocal","ExpressionConstnessTracker","FOUR","Function","FunctionArg","FunctionArgument","FunctionArgumentNotFound","FunctionLocal","FunctionNotDefined","FunctionReturnsVoid","GlobalCtx","GlobalVariable","GlobalVariable","Handle","ImageExpression","IncompatibleOperands","IndexableLength","IndexableLengthError","InvalidAccess","InvalidAccessBase","InvalidAccessIndex","InvalidAccessIndexTy","InvalidArrayElementType","InvalidArrayLength","InvalidArrayLengthArg","InvalidBinaryOpArgs","InvalidCastArg","InvalidClamp","InvalidImage","InvalidMathArg","InvalidMathArgCount","InvalidPointer","InvalidScalar","InvalidStructMemberType","InvalidSubAccess","InvalidUnaryOpArg","InvalidVector","Known","LayoutError","LayoutErrorInner","Layouter","Literal","Load","LocalVariable","MIN_UNIFORM","MissingSpecialType","NameKey","Namer","NonPowerOfTwoWidth","NotImplemented","ONE","OutOfBoundsIndex","Overflow","POINTER_SPAN","RayQueryExpression","ReadZeroSkipWrite","RemainderByZero","ResolveContext","ResolveError","Restrict","SIXTEEN","ShiftedMoreThan32Bits","SplatScalarOnly","StructMember","SubexpressionsAreNotConstant","SwizzleOutOfBounds","SwizzleVectorOnly","TWO","Type","TypeLayout","TypeNotConstructible","TypeNotIndexable","TypeResolution","Unchecked","Value","WorkGroupUniformLoadResult","alignment","arguments","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","binding_array","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","call","call_or","cast","cast_array","choose_policy","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","compare","const_expressions","constants","constants","contains","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","ensure_block_returns","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","flatten_compose","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_glsl_function","for_glsl_module","for_wgsl_function","for_wgsl_module","force_non_const","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arena","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_width","from_world","from_world","from_world","from_world","from_world","functions","global_vars","handle","hash","hash","hash","hash","hash","image_load","image_store","index","index","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_with","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_aligned","is_const","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_running","local_vars","mul","mul","new","new","partial_cmp","reset","resolve","round_up","size","source","special_types","start","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_ctx","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_stride","to_string","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_wgsl","try_eval_and_append","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","types","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_locals","from","to","to_type","to_type","value","expr","expr","index","indexed","indexed","name","ty","BoundsCheckPolicies","BoundsCheckPolicy","Dynamic","Expression","GuardedIndex","IndexableLength","IndexableLengthError","InvalidArrayLength","Known","Known","ReadZeroSkipWrite","Restrict","TypeNotIndexable","Unchecked","access_needs_check","as_any","as_any_mut","binding_array","borrow","borrow_mut","buffer","clone","clone_into","clone_type_data","deref","deref_mut","diff_id","downcast","drop","find_checked_indexes","fmt","from","from_subset","image_load","image_store","index","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","ARGUMENT","Alignment","Argument","Argument","ArgumentCount","ArgumentType","ArrayStride","BINDINGS","BLOCKS","BindingArrayBaseTypeNotStruct","BindingCollision","BindingCollision","BreakOutsideOfLoopOrSwitch","CLIP_DISTANCE","COMPUTE","CONSTANTS","CONSTRUCTIBLE","CONTROL_FLOW_UNIFORMITY","COPY","CUBE_ARRAY_TEXTURES","CULL_DISTANCE","CallError","Capabilities","ComparisonSamplingMismatch","ComponentCount","ComponentType","Compose","Compose","ComposeError","Conflict","ConflictingCaseType","ConflictingSwitchCase","ConstExpression","ConstExpressionError","Constant","ConstantError","ContinueOutsideOfLoop","Corrupted","DATA","DERIVATIVE","DUAL_SOURCE_BLENDING","Disalignment","DoesntExist","DuplicateBuiltIn","EARLY_DEPTH_TEST","EXPRESSIONS","EmptyStruct","EntryPoint","EntryPointError","ExpectedBindingArrayType","ExpectedGlobalOrArgument","ExpectedGlobalVariable","ExpectedImageType","ExpectedSamplerType","Expression","ExpressionAlreadyInScope","ExpressionError","ExpressionInfo","ExpressionMismatch","FLOAT64","FRAGMENT","ForbiddenStageOperations","Function","Function","FunctionArgumentDoesntExist","FunctionError","FunctionInfo","GlobalUse","GlobalVariable","GlobalVariableError","HOST_SHAREABLE","IMPLICIT_LEVEL","IO_SHAREABLE","IndexMustBeConstant","IndexOutOfBounds","IndexableLength","Infinity","InitializerNotAllowed","InitializerType","InitializerType","InstructionsAfterReturn","InvalidAccelerationStructure","InvalidArgumentPointerSpace","InvalidArgumentType","InvalidArgumentType","InvalidArrayBaseType","InvalidArrayStride","InvalidArrayType","InvalidAtomic","InvalidAtomicResultType","InvalidAtomicWidth","InvalidAttributeInStage","InvalidBaseType","InvalidBinaryOperandTypes","InvalidBinding","InvalidBooleanVector","InvalidBuiltInStage","InvalidBuiltInType","InvalidCall","InvalidCastArgument","InvalidData","InvalidDepthReference","InvalidDepthSampleLevel","InvalidDerivative","InvalidDynamicArray","InvalidFloatArgument","InvalidGatherComponent","InvalidGatherDimension","InvalidGatherLevel","InvalidGlobalUsage","InvalidHandle","InvalidIfType","InvalidImageArrayIndex","InvalidImageArrayIndexType","InvalidImageClass","InvalidImageCoordinateType","InvalidImageOtherIndex","InvalidImageOtherIndexType","InvalidImageStore","InvalidIndexType","InvalidInputAttributeInStage","InvalidIntegerInterpolation","InvalidInterpolation","InvalidLocationAttributeCombination","InvalidLocationsWhileDualSourceBlending","InvalidPointerBase","InvalidPointerToUnsized","InvalidPointerType","InvalidRayDescriptor","InvalidRayQueryExpression","InvalidRayQueryType","InvalidRayQueryType","InvalidReturnSpot","InvalidReturnType","InvalidSampleLevelBiasType","InvalidSampleLevelExactType","InvalidSampleLevelGradientType","InvalidSampleOffset","InvalidSelectTypes","InvalidSplatType","InvalidSplatType","InvalidStorePointer","InvalidStoreTypes","InvalidStoreValue","InvalidSwitchType","InvalidSwizzleComponent","InvalidType","InvalidType","InvalidType","InvalidType","InvalidUnaryOperandType","InvalidUsage","InvalidVectorType","InvalidWorkGroupUniformLoadResultType","LastCaseFallTrough","Layouter","Literal","Literal","LiteralError","LocalVariable","LocalVariableError","MULTISAMPLED_SHADING","MULTIVIEW","MatrixElementNotFloat","MemberMissingBinding","MemberOffset","MemberOffsetAfterStruct","MemberOutOfBounds","MemberOverlap","MissingBinding","MissingCapabilities","MissingCapability","MissingDefaultCase","MissingInterpolation","MissingTypeFlags","MissingVertexOutputPosition","ModuleInfo","MoreThanOnePushConstantUsed","MultipleDefaultCases","NaN","NegativeIndex","NonConst","NonConstInitializer","NonConstructibleReturnType","NonConstructibleType","NonHostShareable","NonUniformControlFlow","NonUniformWorkgroupUniformLoad","NotIOShareableType","NotInScope","OutOfRangeWorkgroupSize","PRIMITIVE_INDEX","PUSH_CONSTANT","PipelineInputRegularFunction","PipelineOutputRegularFunction","QUERY","RAY_QUERY","READ","Result","ResultAlreadyInScope","ResultValue","SAMPLED_TEXTURE_AND_STORAGE_BUFFER_ARRAY_NON_UNIFORM_INDEXING","SAMPLER_NON_UNIFORM_INDEXING","SIZED","STORAGE_TEXTURE_16BIT_NORM_FORMATS","STRUCT_LAYOUTS","ShaderStages","StorageAddressSpaceWriteOnlyNotSupported","StructSpan","Type","Type","Type","Type","TypeError","TypeFlags","UNIFORM_BUFFER_AND_STORAGE_TEXTURE_ARRAY_NON_UNIFORM_INDEXING","UnexpectedEarlyDepthTest","UnexpectedWorkgroupSize","Uniformity","UniformityRequirements","UnsizedMember","UnsupportedCapability","UnsupportedCapability","UnsupportedSpecializedArrayLength","VERTEX","ValidationError","ValidationFlags","Validator","VaryingError","WORK_GROUP_BARRIER","WRITE","Width","Width","WidthError","WorkgroupUniformLoadExpressionMismatch","WorkgroupUniformLoadInvalidPointer","WrongArgumentCount","all","all","all","all","all","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","available_stages","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_literal_value","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","complement","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","contains","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","difference","difference","difference","difference","difference","difference","dominates_global_use","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dual_source_blending","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","empty","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expression_count","extend","extend","extend","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_name","from_name","from_name","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","get_entry_point","global_variable_count","index","index","index","index","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_all","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","iter","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","may_kill","new","non_uniform_result","not","not","not","not","not","not","ref_count","remove","remove","remove","remove","remove","remove","requirements","reset","sampling_set","set","set","set","set","set","set","source","source","source","source","source","source","source","source","source","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","toggle","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniformity","uniformity","union","union","union","union","union","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","validate","validate_literal","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","index","index","required","required","seen","seen_expression","source","expected","given","index","alignment","alignment","alignment","expected","index","index","index","offset","offset","span","stride","location","location_mask","has_ref","image","sampler","error","function","handle","handle","index","index","name","name","name","name","pointer","source","source","space","value","required","seen","base","expected","index","index","offset","offset","size","space","span","stride","handle","handle","handle","handle","handle","name","name","name","name","name","source","source","source","source","source","source","stage","attribute","location","location","BLEND_CONSTANT","BindGroup","BlendFactorOnUnsupportedTarget","ColorAttachment","ColorState","ColorStateError","ComputePipeline","ComputePipelineDescriptor","ConservativeRasterizationNonFillPolygonMode","CreateComputePipelineError","CreateRenderPipelineError","CreateShaderModuleError","DepthStencilState","DepthStencilStateError","Device","Device","Device","FormatNotBlendable","FormatNotColor","FormatNotDepth","FormatNotRenderable","FormatNotRenderable","FormatNotStencil","FragmentState","Generation","Implicit","Implicit","ImplicitBindGroupCount","ImplicitLayoutError","IncompatibleFormat","Internal","Internal","InvalidGroupIndex","InvalidLayout","InvalidLayout","InvalidMinMaxBlendFactors","InvalidSampleCount","InvalidSampleCount","InvalidSampleCount","InvalidVertexAttributeOffset","InvalidWriteMask","MissingDownlevelFlags","MissingDownlevelFlags","MissingFeatures","MissingFeatures","MissingIds","Naga","Parsing","Pipeline","PipelineExpectsShaderToUseDualSourceBlending","PipelineFlags","ProgrammableStageDescriptor","ReflectionError","RenderPipeline","RenderPipelineDescriptor","STENCIL_REFERENCE","ShaderError","ShaderExpectsPipelineToUseDualSourceBlending","ShaderLocationClash","ShaderModule","ShaderModuleDescriptor","ShaderModuleSource","Stage","Stage","StripIndexFormatForNonStripTopology","TooManyVertexAttributes","TooManyVertexBuffers","UnalignedShader","UnalignedVertexStride","Validation","VertexBufferLayout","VertexState","VertexStep","VertexStrideTooLarge","WRITES_DEPTH","WRITES_STENCIL","Wgsl","all","array_stride","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_info","as_info","as_info","as_info_mut","as_info_mut","as_info_mut","attributes","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffers","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","complement","contains","default","depth_stencil","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","difference","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","empty","entry_point","eq","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragment","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","iter_names","label","label","label","label","label","layout","layout","location","mode","module","multisample","multiview","not","primitive","remove","set","shader_bound_checks","source","source","source","source","source","source","stage","stage","stage","step_mode","stride","sub","sub_assign","symmetric_difference","targets","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vertex","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","pipeline","shader","binding","error","error","factor","given","given","given","group","index","index","limit","limit","limit","location","offset","size","stage","stage","stride","strip_index_format","target","topology","bind","group","limit","AlreadyAcquired","ConfigureSurfaceError","Device","Device","Invalid","InvalidSurface","InvalidViewFormat","MissingDownlevelFlags","NotConfigured","PreviousOutputExists","StillReferenced","StuckGpu","SurfaceError","SurfaceOutput","TooLarge","UnsupportedAlphaMode","UnsupportedFormat","UnsupportedPresentMode","UnsupportedQueueFamily","UnsupportedUsage","ZeroArea","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","deref","deref","deref","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","downcast","downcast","downcast","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","source","source","status","texture_id","to_compact_string","to_compact_string","to_owned","to_owned","to_smolstr","to_smolstr","to_string","to_string","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","available","available","available","height","max_texture_dimension_2d","requested","requested","requested","width","Registry","RegistryReport","as_any","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","default","deref","deref","deref_mut","deref_mut","diff_id","diff_id","downcast","downcast","drop","drop","dyn_eq","element_size","eq","equivalent","equivalent","equivalent","fmt","fmt","force_replace","force_replace_with_error","from","from","from_subset","from_subset","from_world","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_empty","is_in_subset","is_in_subset","label_for_resource","num_allocated","num_error","num_kept_from_user","num_released_from_user","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","unregister_locked","upcast","upcast","vzip","vzip","Aborted","AccessError","AlreadyDestroyed","AlreadyMapped","AlreadyMapped","ArrayLayerCount","Aspects","Buffer","BufferAccessError","BufferAccessResult","BufferCopy","BufferDescriptor","BufferMapAsyncStatus","BufferMapCallback","BufferMapCallbackC","BufferMapOperation","ContextLost","CreateBufferError","CreateQuerySetError","CreateSamplerError","CreateTextureError","CreateTextureView","CreateTextureViewError","DestroyError","Destroyed","DestroyedBuffer","DestroyedTexture","Device","Device","Device","Device","Device","Dimension","Err","Error","Failed","FormatReinterpretation","HeightNotMultipleOf","Invalid","Invalid","Invalid","InvalidAlignment","InvalidAnisotropy","InvalidArrayLayerCount","InvalidAspect","InvalidCompressedDimension","InvalidCubeTextureViewSize","InvalidCubemapArrayTextureDepth","InvalidCubemapTextureDepth","InvalidDepthDimension","InvalidDimension","InvalidDimensionUsages","InvalidFilterModeWithAnisotropy","InvalidFormatUsages","InvalidLodMaxClamp","InvalidLodMinClamp","InvalidMipLevelCount","InvalidMultisampledFormat","InvalidMultisampledStorageBinding","InvalidMultisampledTextureViewDimension","InvalidRange","InvalidSampleCount","InvalidSampleCount","InvalidTexture","InvalidTextureViewDimension","InvalidUsage","InvalidUsage","InvalidUsageFlags","InvalidViewFormat","LimitExceeded","MagFilter","MapAborted","MapAlreadyPending","MapAlreadyPending","MaxBufferSize","MinFilter","MipLevelCount","MipmapFilter","MissingBufferUsage","MissingDownlevelFlags","MissingDownlevelFlags","MissingFeatures","MissingFeatures","MissingFeatures","MultisampledDepthOrArrayLayer","MultisampledNotRenderAttachment","NegativeRange","None","NotMapped","NotMultipleOfBlockHeight","NotMultipleOfBlockWidth","Ok","OutOfBoundsOverrun","OutOfBoundsUnderrun","OutOfMemory","QuerySet","QuerySetDescriptor","RenderPass","Resource","ResourceInfo","Sampler","SamplerDescriptor","SamplerFilterErrorType","StagingBuffer","Success","Surface","TYPE","Texture","TextureClearMode","TextureDescriptor","TextureDimensionError","TextureErrorDimension","TextureView","TextureViewDescriptor","TextureViewDestroyError","TextureViewNotRenderableReason","TooManyArrayLayers","TooManyMipLevels","TooManyObjects","TooManyQueries","UnalignedOffset","UnalignedRange","UnalignedRangeSize","UnalignedSize","Usage","UsageMismatch","WidthNotMultipleOf","X","Y","Z","Zero","ZeroArrayLayerCount","ZeroCount","ZeroMipLevelCount","address_modes","anisotropy_clamp","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_info","as_info","as_info","as_info","as_info","as_info","as_info","as_info_mut","as_info_mut","as_info_mut","as_info_mut","as_info_mut","as_info_mut","as_info_mut","border_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callback","callback","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","compare","count","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","dimension","dimension","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_c","from_rust","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","host","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_equal","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_unique","label","label","label","label","label","label","label","label","label","lod_max_clamp","lod_min_clamp","mag_filter","mapped_at_creation","min_filter","mip_level_count","mipmap_filter","range","ref_count","sample_count","size","size","source","source","source","source","source","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","usage","usage","user_data","view_formats","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","end","index","index","max","min","offset","range_size","start","maximum","requested","count","maximum","anisotropic_clamp","filter_mode","filter_type","lod_max_clamp","lod_min_clamp","maximum","requested","depth","depth","dim","requested","requested","requested","requested_aspect","texture","texture","texture_format","total","total","view","view","clear_view","clear_views","is_color","block_height","block_width","dim","format","format","format","format","given","height","height","limit","multiple","multiple","width","width","Storage","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","diff_id","downcast","drop","fmt","from","from_subset","index","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","BadStorageFormat","Binding","BindingError","BindingLayoutSource","Derived","Filtering","FilteringError","Float","InconsistentlyDerivedType","Input","InputError","InputNotConsumed","Integer","Interface","InterfaceVar","InterpolationMismatch","InvalidModule","InvalidWorkgroupSize","Invisible","Missing","Missing","MissingBufferUsageError","MissingEntryPoint","MissingTextureUsageError","NumericType","Provided","SamplingMismatch","StageError","StageIo","TooManyVaryings","UnsupportedTextureStorageAccess","WrongAddressSpace","WrongBufferSize","WrongSamplerComparison","WrongTextureClass","WrongTextureViewDimension","WrongType","WrongType","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_buffer_usage","check_stage","check_texture_format","check_texture_usage","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragment_uses_dual_source_blending","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","new_derived","source","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vertex_attribute","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","binding","binding","binding","dim","is_array","shader","shader","current","current_total","error","error","limit","limit","location","location","sampler","texture","total","used","var","AABBs","ACCELERATION_STRUCTURE_SCRATCH","ALLOW_COMPACTION","ALLOW_UPDATE","AccelerationStructure","AccelerationStructureAABBs","AccelerationStructureBarrier","AccelerationStructureBuildFlags","AccelerationStructureBuildMode","AccelerationStructureBuildSizes","AccelerationStructureDescriptor","AccelerationStructureEntries","AccelerationStructureFormat","AccelerationStructureGeometryFlags","AccelerationStructureInstances","AccelerationStructureTriangleIndices","AccelerationStructureTriangleTransform","AccelerationStructureTriangles","AccelerationStructureUses","AcquiredSurfaceTexture","Adapter","Adapter","Alignments","Api","Attachment","AttachmentOps","BOTTOM_LEVEL_ACCELERATION_STRUCTURE_INPUT","BUILD_INPUT","BUILD_OUTPUT","BindGroup","BindGroupDescriptor","BindGroupEntry","BindGroupLayout","BindGroupLayoutDescriptor","BindGroupLayoutFlags","BottomLevel","Buffer","BufferBarrier","BufferBinding","BufferCopy","BufferDescriptor","BufferMapping","BufferTextureCopy","BufferUses","Build","BuildAccelerationStructureDescriptor","COLOR","COLOR_ATTACHMENT","COLOR_ATTACHMENT_BLEND","COLOR_TARGET","COMPLEX","COPY_DST","COPY_DST","COPY_DST","COPY_SRC","COPY_SRC","COPY_SRC","Capabilities","ColorAttachment","CommandBuffer","CommandEncoder","CommandEncoder","CommandEncoderDescriptor","Compilation","ComputePassDescriptor","ComputePassTimestampWrites","ComputePipeline","ComputePipelineDescriptor","CopyExtent","DEPTH","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","DEPTH_STENCIL_READ","DEPTH_STENCIL_WRITE","DebugSource","DepthStencilAttachment","Device","Device","Device","Device","Device","DeviceError","DropGuard","EXCLUSIVE","EXCLUSIVE","EntryPoint","ExposedAdapter","FIRST_VERTEX_INSTANCE","Fence","FenceValue","FormatAspects","GetAccelerationStructureBuildSizesDescriptor","INCLUSIVE","INCLUSIVE","INDEX","INDIRECT","Instance","Instance","InstanceDescriptor","InstanceError","Instances","LOAD","LOW_MEMORY","Label","Linkage","Lost","Lost","MAP_READ","MAP_WRITE","MAX_ANISOTROPY","MAX_BIND_GROUPS","MAX_COLOR_ATTACHMENTS","MAX_CONCURRENT_SHADER_STAGES","MAX_MIP_LEVELS","MAX_VERTEX_BUFFERS","MULTISAMPLE_RESOLVE","MULTISAMPLE_X16","MULTISAMPLE_X2","MULTISAMPLE_X4","MULTISAMPLE_X8","MemoryFlags","MemoryRange","NO_DUPLICATE_ANY_HIT_INVOCATION","NUM_WORK_GROUPS","Naga","NagaShader","None","OPAQUE","ORDERED","ORDERED","OpenDevice","Other","OutOfMemory","Outdated","PARTIALLY_BOUND","PLANE_0","PLANE_1","PLANE_2","PREFER_COHERENT","PREFER_FAST_BUILD","PREFER_FAST_TRACE","PRESENT","PipelineError","PipelineLayout","PipelineLayoutDescriptor","PipelineLayoutFlags","ProgrammableStage","QUERY_RESOLVE","QUERY_SIZE","QuerySet","Queue","Queue","RESOURCE","Rect","RenderPassDescriptor","RenderPassTimestampWrites","RenderPipeline","RenderPipelineDescriptor","ResourceCreationFailed","SAMPLED","SAMPLED_LINEAR","SAMPLED_MINMAX","SHADER_INPUT","STENCIL","STORAGE","STORAGE_ATOMIC","STORAGE_READ","STORAGE_READ","STORAGE_READ_WRITE","STORAGE_READ_WRITE","STORAGE_READ_WRITE","STORE","Sampler","SamplerDescriptor","ShaderError","ShaderInput","ShaderModule","ShaderModuleDescriptor","Some","SpirV","Surface","Surface","SurfaceCapabilities","SurfaceConfiguration","SurfaceError","SurfaceTexture","TOP_LEVEL_ACCELERATION_STRUCTURE_INPUT","TRANSIENT","Texture","TextureBarrier","TextureBinding","TextureCopy","TextureCopyBase","TextureDescriptor","TextureFormatCapabilities","TextureUses","TextureView","TextureViewDescriptor","TopLevel","Triangles","UNIFORM","UNINITIALIZED","UNKNOWN","Update","VALIDATION_CANARY","VERTEX","ValidationCanary","VertexBufferLayout","acceleration_structure_size","acceleration_structures","acquire_texture","adapter","address_modes","alignments","all","all","all","all","all","all","all","all","all","all","all","anisotropy_clamp","array_layer","array_layer_count","array_stride","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","aspect","at_mip_level","attributes","auxil","begin_compute_pass","begin_debug_marker","begin_encoding","begin_query","begin_render_pass","beginning_of_pass_write_index","beginning_of_pass_write_index","bind_group_layouts","binding","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","border_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer","buffer","buffer","buffer","buffer","buffer_copy_offset","buffer_copy_pitch","buffer_layout","buffers","build_acceleration_structures","build_scratch_size","capabilities","clamp_size_to_virtual","clamp_size_to_virtual","clear_buffer","clear_value","clear_value","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","color_attachments","color_targets","compare","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","composite_alpha_mode","composite_alpha_modes","configure","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains_invalid_bits","contains_invalid_bits","copy_buffer_to_buffer","copy_buffer_to_texture","copy_extent","copy_query_results","copy_texture_to_buffer","copy_texture_to_texture","count","count","count","count","create_acceleration_structure","create_bind_group","create_bind_group_layout","create_buffer","create_command_encoder","create_compute_pipeline","create_fence","create_pipeline_layout","create_query_set","create_render_pipeline","create_sampler","create_shader_module","create_surface","create_texture","create_texture_view","current_extent","debug_source","default","depth","depth_ops","depth_stencil","depth_stencil_attachment","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","destination_acceleration_structure","destroy_acceleration_structure","destroy_bind_group","destroy_bind_group_layout","destroy_buffer","destroy_command_encoder","destroy_compute_pipeline","destroy_fence","destroy_pipeline_layout","destroy_query_set","destroy_render_pipeline","destroy_sampler","destroy_shader_module","destroy_surface","destroy_texture","destroy_texture_view","device","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","dimension","dimension","discard_encoding","discard_texture","dispatch","dispatch_indirect","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downlevel","draw","draw_indexed","draw_indexed_indirect","draw_indexed_indirect_count","draw_indirect","draw_indirect_count","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dst_base","dst_offset","dx12_shader_compiler","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","end","end_compute_pass","end_debug_marker","end_encoding","end_of_pass_write_index","end_of_pass_write_index","end_query","end_render_pass","entries","entries","entries","entries","entry_point","enumerate_adapters","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exit","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extent","extent","features","file_name","first_vertex","flags","flags","flags","flags","flags","flags","flags","flush_mapped_ranges","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","format","format","format","formats","fragment_stage","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","get_acceleration_structure_build_sizes","get_acceleration_structure_device_address","get_and_reset","get_fence_value","get_presentation_timestamp","get_timestamp_period","gles","gles_minor_version","h","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","indices","info","info","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert_debug_marker","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","invalidate_mapped_ranges","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_coherent","is_cube_compatible","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_one","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","label","label","label","label","label","label","label","label","label","label","label","label","label","label","layout","layout","layout","limits","lod_clamp","mag_filter","map","map_buffer","map_extent_to_copy_size","max_copy_size","maximum_frame_latency","maximum_frame_latency","memory_flags","memory_flags","min","min_filter","mip_level","mip_level_count","mipmap_filter","mode","module","module","multisample","multiview","multiview","name","new","not","not","not","not","not","not","not","not","not","not","not","occlusion_query_set","offset","offset","offset","offset","offset","open","ops","origin","place_acceleration_structure_barrier","present","present_mode","present_modes","primitive","ptr","push_constant_ranges","query_set","query_set","queue","queue","range","range","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","reset_all","reset_queries","resolve_target","resource_index","runtime_checks","sample_count","sample_count","samplers","scratch_buffer","scratch_buffer_offset","set","set","set","set","set","set","set","set","set","set","set","set_bind_group","set_blend_constants","set_compute_pipeline","set_index_buffer","set_push_constants","set_render_pipeline","set_scissor_rect","set_stencil_reference","set_vertex_buffer","set_viewport","size","size","size","size","size","size","size","source","source","source","source","source_acceleration_structure","source_code","src_base","src_offset","stage","start","start_capture","stencil_ops","step_mode","stop_capture","stride","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","submit","suboptimal","surface_capabilities","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","target","target","texture","texture","texture_base","texture_format_capabilities","textures","timestamp_writes","timestamp_writes","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","transform","transition_buffers","transition_textures","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unconfigure","union","union","union","union","union","union","union","union","union","union","union","unmap_buffer","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_scratch_size","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","vertex_buffer","vertex_buffers","vertex_count","vertex_format","vertex_stage","vertex_stride","view","view","view_formats","view_formats","vulkan","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","w","wait","width","write_timestamp","x","y","MAX_I32_BINDING_SIZE","db","map_naga_stage","amd","apple","arm","broadcom","imgtec","intel","mesa","nvidia","qualcomm","VENDOR","VENDOR","VENDOR","VENDOR","VENDOR","DEVICE_KABY_LAKE_MASK","DEVICE_SKY_LAKE_MASK","VENDOR","VENDOR","VENDOR","VENDOR","Api","Context","Encoder","Resource","acquire_texture","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","begin_compute_pass","begin_debug_marker","begin_encoding","begin_query","begin_render_pass","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_acceleration_structures","clear_buffer","clone","clone_into","clone_type_data","configure","copy_buffer_to_buffer","copy_buffer_to_texture","copy_query_results","copy_texture_to_buffer","copy_texture_to_texture","create_acceleration_structure","create_bind_group","create_bind_group_layout","create_buffer","create_command_encoder","create_compute_pipeline","create_fence","create_instance_from_hal","create_pipeline_layout","create_query_set","create_render_pipeline","create_sampler","create_shader_module","create_surface","create_texture","create_texture_view","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","destroy_acceleration_structure","destroy_bind_group","destroy_bind_group_layout","destroy_buffer","destroy_command_encoder","destroy_compute_pipeline","destroy_fence","destroy_pipeline_layout","destroy_query_set","destroy_render_pipeline","destroy_sampler","destroy_shader_module","destroy_surface","destroy_texture","destroy_texture_view","diff_id","diff_id","diff_id","diff_id","discard_encoding","discard_texture","dispatch","dispatch_indirect","downcast","downcast","downcast","downcast","draw","draw_indexed","draw_indexed_indirect","draw_indexed_indirect_count","draw_indirect","draw_indirect_count","drop","drop","drop","drop","end_compute_pass","end_debug_marker","end_encoding","end_query","end_render_pass","enumerate_adapters","exit","flush_mapped_ranges","fmt","fmt","fmt","from","from","from","from","from_subset","from_subset","from_subset","from_subset","get_acceleration_structure_build_sizes","get_acceleration_structure_device_address","get_fence_value","get_presentation_timestamp","get_surface","get_timestamp_period","hub","init","init","init","init","init","insert_debug_marker","instance_as_hal","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","invalidate_mapped_ranges","is_in_subset","is_in_subset","is_in_subset","is_in_subset","map_buffer","open","place_acceleration_structure_barrier","present","reset_all","reset_queries","set_bind_group","set_blend_constants","set_compute_pipeline","set_index_buffer","set_push_constants","set_render_pipeline","set_scissor_rect","set_stencil_reference","set_vertex_buffer","set_viewport","start_capture","stop_capture","submit","surface_capabilities","texture_format_capabilities","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","transition_buffers","transition_textures","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unconfigure","unmap_buffer","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","wait","write_timestamp","Adapter","AdapterContext","AdapterContextLock","Api","BindGroup","BindGroupLayout","Buffer","CommandBuffer","CommandEncoder","ComputePipeline","DefaultRenderbuffer","Device","Fence","PipelineLayout","QuerySet","Queue","RenderPipeline","Renderbuffer","Sampler","ShaderModule","Texture","Texture","TextureFormatDesc","TextureInner","TextureView","adapter_context","array_layer_count","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","begin_compute_pass","begin_debug_marker","begin_encoding","begin_query","begin_render_pass","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_acceleration_structures","clear_buffer","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","context","copy_buffer_to_buffer","copy_buffer_to_texture","copy_query_results","copy_size","copy_texture_to_buffer","copy_texture_to_texture","create_acceleration_structure","create_bind_group","create_bind_group_layout","create_buffer","create_command_encoder","create_compute_pipeline","create_fence","create_instance_from_hal","create_pipeline_layout","create_query_set","create_render_pipeline","create_sampler","create_shader_module","create_texture","create_texture_view","data_type","default","default_framebuffer","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","destroy_acceleration_structure","destroy_bind_group","destroy_bind_group_layout","destroy_buffer","destroy_command_encoder","destroy_compute_pipeline","destroy_fence","destroy_pipeline_layout","destroy_query_set","destroy_render_pipeline","destroy_sampler","destroy_shader_module","destroy_texture","destroy_texture_view","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","discard_encoding","dispatch","dispatch_indirect","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","draw_indexed","draw_indexed_indirect","draw_indexed_indirect_count","draw_indirect","draw_indirect_count","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_guard","egl_instance","egl_version","end_compute_pass","end_debug_marker","end_encoding","end_query","end_render_pass","exit","external","flush_mapped_ranges","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format_desc","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","get_acceleration_structure_build_sizes","get_acceleration_structure_device_address","get_fence_value","get_presentation_timestamp","get_surface","get_timestamp_period","get_without_egl_lock","hub","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","insert_debug_marker","instance_as_hal","internal","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","invalidate_mapped_ranges","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_owned","lock","map_buffer","mip_level_count","new_external","open","place_acceleration_structure_barrier","present","raw_context","raw_display","reset_all","reset_queries","set_bind_group","set_blend_constants","set_compute_pipeline","set_index_buffer","set_push_constants","set_render_pipeline","set_scissor_rect","set_stencil_reference","set_vertex_buffer","set_viewport","start_capture","stop_capture","submit","surface_capabilities","texture_format_capabilities","texture_from_raw","texture_from_raw_renderbuffer","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","transition_buffers","transition_textures","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unmap_buffer","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait","write_timestamp","raw","raw","target","AccelerationStructure","Adapter","Api","BindGroup","BindGroupLayout","Buffer","CommandBuffer","CommandEncoder","ComputePipeline","DebugUtilsCreateInfo","DebugUtilsMessengerUserData","Device","EMPTY_RESOLVE_ATTACHMENT_LISTS","FORCE_FILL_BUFFER_WITH_SIZE_GREATER_4096_ALIGNED_OFFSET_16","Fence","FencePool","Instance","InstanceShared","Intermediate","PipelineLayout","QuerySet","Queue","Raw","RenderPipeline","SEPARATE_ENTRY_POINTS","Sampler","ShaderModule","Surface","SurfaceTexture","Texture","TextureView","TimelineSemaphore","Workarounds","acquire_texture","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","begin_compute_pass","begin_debug_marker","begin_encoding","begin_query","begin_render_pass","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_from_raw","build_acceleration_structures","clear_buffer","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","complement","configure","contains","copy_buffer_to_buffer","copy_buffer_to_texture","copy_query_results","copy_texture_to_buffer","copy_texture_to_texture","create_acceleration_structure","create_bind_group","create_bind_group_layout","create_buffer","create_command_encoder","create_compute_pipeline","create_fence","create_instance_from_hal","create_pipeline_layout","create_query_set","create_render_pipeline","create_sampler","create_shader_module","create_surface","create_texture","create_texture_view","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","desired_extensions","destroy_acceleration_structure","destroy_bind_group","destroy_bind_group_layout","destroy_buffer","destroy_command_encoder","destroy_compute_pipeline","destroy_fence","destroy_pipeline_layout","destroy_query_set","destroy_render_pipeline","destroy_sampler","destroy_shader_module","destroy_surface","destroy_texture","destroy_texture_view","device_from_raw","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","difference","discard_encoding","discard_texture","dispatch","dispatch_indirect","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","draw_indexed","draw_indexed_indirect","draw_indexed_indirect_count","draw_indirect","draw_indirect_count","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","empty","enabled_device_extensions","end_compute_pass","end_debug_marker","end_encoding","end_query","end_render_pass","entry","enumerate_adapters","eq","equivalent","equivalent","equivalent","exit","expose_adapter","extend","extensions","flush_mapped_ranges","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","from_raw","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_acceleration_structure_build_sizes","get_acceleration_structure_device_address","get_fence_value","get_presentation_timestamp","get_surface","get_timestamp_period","hash","hub","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert","insert_debug_marker","instance_api_version","instance_as_hal","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","invalidate_mapped_ranges","is_all","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","iter_names","map_buffer","not","open","physical_device_capabilities","physical_device_features","place_acceleration_structure_barrier","present","queue_family_index","queue_index","raw_device","raw_handle","raw_instance","raw_physical_device","raw_physical_device","raw_queue","remove","required_device_extensions","reset_all","reset_queries","set","set_bind_group","set_blend_constants","set_compute_pipeline","set_index_buffer","set_push_constants","set_render_pipeline","set_scissor_rect","set_stencil_reference","set_vertex_buffer","set_viewport","shared_instance","shared_instance","shared_instance","start_capture","stop_capture","sub","sub_assign","submit","surface_capabilities","symmetric_difference","texture_format_capabilities","texture_from_raw","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","toggle","transition_buffers","transition_textures","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unconfigure","union","unmap_buffer","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait","write_timestamp","active","free","last_completed","naga_shader","runtime_checks","Android","AndroidDisplayHandle","AndroidNdk","AndroidNdkWindowHandle","AppKit","AppKit","AppKitDisplayHandle","AppKitWindowHandle","DisplayHandle","Drm","Drm","DrmDisplayHandle","DrmWindowHandle","Gbm","Gbm","GbmDisplayHandle","GbmWindowHandle","Haiku","Haiku","HaikuDisplayHandle","HaikuWindowHandle","HandleError","HasDisplayHandle","HasRawDisplayHandle","HasRawWindowHandle","HasWindowHandle","NotSupported","Orbital","Orbital","OrbitalDisplayHandle","OrbitalWindowHandle","RawDisplayHandle","RawWindowHandle","UiKit","UiKit","UiKitDisplayHandle","UiKitWindowHandle","Unavailable","Wayland","Wayland","WaylandDisplayHandle","WaylandWindowHandle","Web","Web","WebCanvas","WebCanvasWindowHandle","WebDisplayHandle","WebOffscreenCanvas","WebOffscreenCanvasWindowHandle","WebWindowHandle","Win32","Win32WindowHandle","WinRt","WinRtWindowHandle","WindowHandle","Windows","WindowsDisplayHandle","Xcb","Xcb","XcbDisplayHandle","XcbWindowHandle","Xlib","Xlib","XlibDisplayHandle","XlibWindowHandle","a_native_window","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_raw","as_raw","as_ref","as_ref","b_direct_window","b_window","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_raw","borrow_raw","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","connection","core_window","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","display","display","display_handle","display_handle","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fd","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","gbm_device","gbm_surface","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hinstance","hwnd","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","ns_view","obj","obj","plane","raw_display_handle","raw_display_handle","raw_window_handle","raw_window_handle","screen","screen","surface","to_compact_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ui_view","ui_view_controller","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","visual_id","visual_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","window","window","window","window_handle","window_handle","BufferInitDescriptor","DeviceExt","DispatchIndirectArgs","DownloadBuffer","DrawIndexedIndirectArgs","DrawIndirectArgs","LayerMajor","MipMajor","RenderEncoder","StagingBelt","TextureDataOrder","align_to","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bytes","as_bytes","as_bytes","as_dyn_eq","as_dyn_eq","backend_bits_from_env","base_vertex","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","contents","create_buffer_init","create_texture_with_data","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","diff_id","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","draw_indexed","draw_indexed_indirect","draw_indirect","drop","drop","drop","drop","drop","drop","drop","dx12_shader_compiler_from_env","dyn_eq","dyn_eq","dyn_hash","dyn_hash","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","first_index","first_instance","first_instance","first_vertex","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","gles_minor_version_from_env","hash","hash","index_count","init","init","init","init","init","init","init","initialize_adapter_from_env","initialize_adapter_from_env_or_default","instance_count","instance_count","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","label","make_spirv_raw","new","parse_backends_from_comma_list","power_preference_from_env","read_buffer","recall","set_bind_group","set_index_buffer","set_pipeline","set_push_constants","set_vertex_buffer","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","usage","vertex_count","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_buffer","x","y","z","ScaleFactor","WindowDescriptor","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","default","deref","deref","deref_mut","deref_mut","diff_id","diff_id","downcast","downcast","drop","drop","factor","from","from","from_subset","from_subset","from_world","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","new","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","with_desktop_dimensions","with_resizable","with_title","Action","Action","EngenHandle","Response","Response","SingleThreadedWorkflow","Workflow","WorkflowConnection","WorkflowConnectionBase","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","diff_id","downcast","drop","from","from_subset","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","process","process","react","react","send","start_web_worker","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip"],"q":[[0,"foliage"],[444,"foliage::ash"],[450,"foliage::ash::identification"],[498,"foliage::ash::instruction"],[577,"foliage::ash::render"],[621,"foliage::ash::render_packet"],[696,"foliage::ash::renderer"],[722,"foliage::asset"],[789,"foliage::bevy_ecs"],[804,"foliage::bevy_ecs::archetype"],[1092,"foliage::bevy_ecs::bundle"],[1195,"foliage::bevy_ecs::change_detection"],[1250,"foliage::bevy_ecs::component"],[1646,"foliage::bevy_ecs::entity"],[1785,"foliage::bevy_ecs::event"],[1946,"foliage::bevy_ecs::prelude"],[4204,"foliage::bevy_ecs::ptr"],[4404,"foliage::bevy_ecs::query"],[4879,"foliage::bevy_ecs::reflect"],[5068,"foliage::bevy_ecs::removal_detection"],[5165,"foliage::bevy_ecs::schedule"],[5810,"foliage::bevy_ecs::schedule::NodeConfigs"],[5813,"foliage::bevy_ecs::schedule::SystemConfigs"],[5816,"foliage::bevy_ecs::schedule::SystemSetConfigs"],[5819,"foliage::bevy_ecs::schedule::common_conditions"],[5836,"foliage::bevy_ecs::storage"],[6221,"foliage::bevy_ecs::system"],[7186,"foliage::bevy_ecs::system::adapter"],[7193,"foliage::bevy_ecs::system::lifetimeless"],[7199,"foliage::bevy_ecs::world"],[7373,"foliage::bevy_ecs::world::error"],[7403,"foliage::bevy_ecs::world::unsafe_world_cell"],[7498,"foliage::circle"],[7661,"foliage::clipboard"],[7690,"foliage::color"],[7816,"foliage::compositor"],[7985,"foliage::compositor::layout"],[8219,"foliage::compositor::segment"],[8694,"foliage::coordinate"],[8886,"foliage::coordinate::area"],[8993,"foliage::coordinate::layer"],[9042,"foliage::coordinate::location"],[9083,"foliage::coordinate::position"],[9183,"foliage::coordinate::section"],[9244,"foliage::differential"],[9462,"foliage::elm"],[9683,"foliage::elm::config"],[9809,"foliage::elm::leaf"],[9895,"foliage::ginkgo"],[9984,"foliage::ginkgo::msaa"],[10009,"foliage::ginkgo::uniform"],[10071,"foliage::ginkgo::viewport"],[10137,"foliage::icon"],[10641,"foliage::image"],[10805,"foliage::instance"],[10872,"foliage::interaction"],[11279,"foliage::job"],[11464,"foliage::media"],[11566,"foliage::panel"],[11729,"foliage::rectangle"],[11769,"foliage::scene"],[12049,"foliage::scene::align"],[12244,"foliage::text"],[12519,"foliage::text::font"],[12549,"foliage::texture"],[12691,"foliage::texture::coord"],[12762,"foliage::texture::factors"],[12852,"foliage::texture::fixed"],[12881,"foliage::time"],[12916,"foliage::time::timer"],[12970,"foliage::virtual_keyboard"],[13035,"foliage::wgpu"],[19454,"foliage::wgpu::BindingType"],[19463,"foliage::wgpu::BufferBindingType"],[19464,"foliage::wgpu::Dx12Compiler"],[19466,"foliage::wgpu::Error"],[19469,"foliage::wgpu::SurfaceTargetUnsafe"],[19471,"foliage::wgpu::TextureFormat"],[19473,"foliage::wgpu::TextureSampleType"],[19474,"foliage::wgpu::core"],[19511,"foliage::wgpu::core::any_surface"],[19541,"foliage::wgpu::core::api"],[19544,"foliage::wgpu::core::binding_model"],[20345,"foliage::wgpu::core::binding_model::BindError"],[20361,"foliage::wgpu::core::binding_model::CreateBindGroupError"],[20399,"foliage::wgpu::core::binding_model::CreateBindGroupLayoutError"],[20403,"foliage::wgpu::core::binding_model::CreatePipelineLayoutError"],[20413,"foliage::wgpu::core::binding_model::PushConstantUploadError"],[20425,"foliage::wgpu::core::command"],[22157,"foliage::wgpu::core::command::AttachmentErrorLocation"],[22159,"foliage::wgpu::core::command::ClearError"],[22170,"foliage::wgpu::core::command::ColorAttachmentError"],[22172,"foliage::wgpu::core::command::ComputePassErrorInner"],[22177,"foliage::wgpu::core::command::DispatchError"],[22181,"foliage::wgpu::core::command::DrawError"],[22194,"foliage::wgpu::core::command::PassErrorScope"],[22199,"foliage::wgpu::core::command::QueryUseError"],[22206,"foliage::wgpu::core::command::RenderCommandError"],[22212,"foliage::wgpu::core::command::RenderPassErrorInner"],[22241,"foliage::wgpu::core::command::ResolveError"],[22250,"foliage::wgpu::core::command::TransferError"],[22272,"foliage::wgpu::core::command::bundle_ffi"],[22284,"foliage::wgpu::core::command::compute_ffi"],[22295,"foliage::wgpu::core::command::render_ffi"],[22321,"foliage::wgpu::core::device"],[22844,"foliage::wgpu::core::device::RenderPassCompatibilityError"],[22857,"foliage::wgpu::core::device::any_device"],[22886,"foliage::wgpu::core::device::queue"],[23152,"foliage::wgpu::core::device::resource"],[23191,"foliage::wgpu::core::error"],[23270,"foliage::wgpu::core::global"],[23455,"foliage::wgpu::core::hal_api"],[23461,"foliage::wgpu::core::hub"],[23578,"foliage::wgpu::core::id"],[23653,"foliage::wgpu::core::identity"],[23718,"foliage::wgpu::core::instance"],[24089,"foliage::wgpu::core::naga"],[26753,"foliage::wgpu::core::naga::AddressSpace"],[26754,"foliage::wgpu::core::naga::AtomicFunction"],[26755,"foliage::wgpu::core::naga::Binding"],[26759,"foliage::wgpu::core::naga::BuiltIn"],[26760,"foliage::wgpu::core::naga::Expression"],[26813,"foliage::wgpu::core::naga::ImageClass"],[26818,"foliage::wgpu::core::naga::ImageQuery"],[26819,"foliage::wgpu::core::naga::PredeclaredType"],[26823,"foliage::wgpu::core::naga::RayQueryFunction"],[26826,"foliage::wgpu::core::naga::SampleLevel"],[26828,"foliage::wgpu::core::naga::Statement"],[26854,"foliage::wgpu::core::naga::TypeInner"],[26875,"foliage::wgpu::core::naga::back"],[26966,"foliage::wgpu::core::naga::back::glsl"],[27457,"foliage::wgpu::core::naga::back::glsl::Version"],[27459,"foliage::wgpu::core::naga::back::msl"],[27828,"foliage::wgpu::core::naga::back::msl::sampler"],[28108,"foliage::wgpu::core::naga::back::spv"],[28830,"foliage::wgpu::core::naga::compact"],[28831,"foliage::wgpu::core::naga::front"],[28900,"foliage::wgpu::core::naga::front::wgsl"],[28970,"foliage::wgpu::core::naga::keywords"],[28971,"foliage::wgpu::core::naga::keywords::wgsl"],[28972,"foliage::wgpu::core::naga::proc"],[29724,"foliage::wgpu::core::naga::proc::ConstantEvaluatorError"],[29729,"foliage::wgpu::core::naga::proc::ResolveError"],[29736,"foliage::wgpu::core::naga::proc::index"],[29786,"foliage::wgpu::core::naga::valid"],[31123,"foliage::wgpu::core::naga::valid::CallError"],[31130,"foliage::wgpu::core::naga::valid::ComposeError"],[31133,"foliage::wgpu::core::naga::valid::Disalignment"],[31144,"foliage::wgpu::core::naga::valid::EntryPointError"],[31146,"foliage::wgpu::core::naga::valid::ExpressionError"],[31149,"foliage::wgpu::core::naga::valid::FunctionError"],[31164,"foliage::wgpu::core::naga::valid::GlobalVariableError"],[31166,"foliage::wgpu::core::naga::valid::TypeError"],[31176,"foliage::wgpu::core::naga::valid::ValidationError"],[31193,"foliage::wgpu::core::naga::valid::VaryingError"],[31196,"foliage::wgpu::core::pipeline"],[31971,"foliage::wgpu::core::pipeline::ColorStateError"],[31973,"foliage::wgpu::core::pipeline::CreateRenderPipelineError"],[31995,"foliage::wgpu::core::pipeline::CreateShaderModuleError"],[31998,"foliage::wgpu::core::present"],[32118,"foliage::wgpu::core::present::ConfigureSurfaceError"],[32127,"foliage::wgpu::core::registry"],[32201,"foliage::wgpu::core::resource"],[33220,"foliage::wgpu::core::resource::BufferAccessError"],[33228,"foliage::wgpu::core::resource::CreateBufferError"],[33230,"foliage::wgpu::core::resource::CreateQuerySetError"],[33232,"foliage::wgpu::core::resource::CreateSamplerError"],[33237,"foliage::wgpu::core::resource::CreateTextureError"],[33239,"foliage::wgpu::core::resource::CreateTextureViewError"],[33253,"foliage::wgpu::core::resource::TextureClearMode"],[33256,"foliage::wgpu::core::resource::TextureDimensionError"],[33271,"foliage::wgpu::core::storage"],[33298,"foliage::wgpu::core::validation"],[33659,"foliage::wgpu::core::validation::BindingError"],[33666,"foliage::wgpu::core::validation::StageError"],[33679,"foliage::wgpu::hal"],[36897,"foliage::wgpu::hal::auxil"],[36900,"foliage::wgpu::hal::auxil::db"],[36909,"foliage::wgpu::hal::auxil::db::amd"],[36910,"foliage::wgpu::hal::auxil::db::apple"],[36911,"foliage::wgpu::hal::auxil::db::arm"],[36912,"foliage::wgpu::hal::auxil::db::broadcom"],[36913,"foliage::wgpu::hal::auxil::db::imgtec"],[36914,"foliage::wgpu::hal::auxil::db::intel"],[36917,"foliage::wgpu::hal::auxil::db::mesa"],[36918,"foliage::wgpu::hal::auxil::db::nvidia"],[36919,"foliage::wgpu::hal::auxil::db::qualcomm"],[36920,"foliage::wgpu::hal::empty"],[37128,"foliage::wgpu::hal::gles"],[37837,"foliage::wgpu::hal::gles::TextureInner"],[37840,"foliage::wgpu::hal::vulkan"],[38700,"foliage::wgpu::hal::vulkan::Fence"],[38703,"foliage::wgpu::hal::vulkan::ShaderModule"],[38705,"foliage::wgpu::rwh"],[40044,"foliage::wgpu::util"],[40319,"foliage::window"],[40380,"foliage::workflow"],[40419,"core::any"],[40420,"bevy_reflect::type_registry"],[40421,"alloc::boxed"],[40422,"core::cmp"],[40423,"core::hash"],[40424,"core::fmt"],[40425,"core::fmt"],[40426,"alloc::sync"],[40427,"alloc::rc"],[40428,"core::option"],[40429,"core::any"],[40430,"core::convert"],[40431,"core::ops::function"],[40432,"serde::de"],[40433,"erased_serde::ser"],[40434,"erased_serde::ser"],[40435,"core::clone"],[40436,"serde::ser"],[40437,"serde::de"],[40438,"core::iter::traits::iterator"],[40439,"core::ops::range"],[40440,"core::ops::function"],[40441,"core::alloc::layout"],[40442,"alloc::borrow"],[40443,"hashbrown::map"],[40444,"bevy_ecs::event"],[40445,"core::fmt"],[40446,"smol_str"],[40447,"bevy_utils::intern"],[40448,"bevy_ecs::schedule::condition"],[40449,"bevy_reflect::reflect"],[40450,"bevy_reflect::from_reflect"],[40451,"bevy_reflect::type_path"],[40452,"core::ops::deref"],[40453,"bevy_reflect::tuple_struct"],[40454,"core::default"],[40455,"core::marker"],[40456,"bevy_reflect::type_info"],[40457,"bevy_reflect::type_registry"],[40458,"core::marker"],[40459,"core::option"],[40460,"core::iter::adapters::map"],[40461,"core::iter::traits::exact_size"],[40462,"bevy_reflect::tuple_struct"],[40463,"bevy_ecs::schedule::condition"],[40464,"bevy_reflect::reflect"],[40465,"core::ptr::non_null"],[40466,"core::marker"],[40467,"petgraph"],[40468,"petgraph::graphmap"],[40469,"core::cell"],[40470,"core::slice::iter"],[40471,"core::cmp"],[40472,"bytemuck::zeroable"],[40473,"std::path"],[40474,"core::cmp"],[40475,"winit::event"],[40476,"winit::event"],[40477,"std::collections::hash::set"],[40478,"std::collections::hash::map"],[40479,"core::time"],[40480,"std::time"],[40481,"wgpu_types"],[40482,"wgpu_types"],[40483,"bitflags::iter"],[40484,"core::ops::range"],[40485,"core::num::nonzero"],[40486,"wgpu_core::command::draw"],[40487,"wgpu_core::command"],[40488,"core::fmt"],[40489,"naga::arena"],[40490,"naga::arena"],[40491,"alloc::string"],[40492,"core::hash"],[40493,"std::collections::hash::map"],[40494,"naga::valid::type"],[40495,"naga::valid::function"],[40496,"naga::valid::handles"],[40497,"naga::valid::handles"],[40498,"gpu_descriptor::allocator"],[40499,"gpu_alloc::error"],[40500,"gpu_alloc::error"],[40501,"libloading::safe"],[40502,"khronos_egl"],[40503,"khronos_egl"],[40504,"glow::native"],[40505,"lock_api::mutex"],[40506,"wgpu_hal::gles::egl"],[40507,"core::ffi"],[40508,"khronos_egl::egl1_0"],[40509,"core::num::nonzero"],[40510,"ash::entry"],[40511,"core::ffi::c_str"],[40512,"ash::device"],[40513,"ash::vk::definitions"],[40514,"wgpu_hal::vulkan::adapter"],[40515,"wgpu_hal::vulkan::adapter"],[40516,"core::ops::arith"]],"d":["Switch the input mode on an external AVR (audio/video …","Toggle the power on an external AVR (audio/video …","The Accept (Commit, OK) key. Accept current option or …","Redo or repeat an action.","Initate the multi-candidate mode.","","The <code>Alt</code> (Alternative) key.","The Alternate Graphics (AltGr or AltGraph) key.","","The Application switch key, which provides a list of …","Navigate or traverse downward. (<code>KEYCODE_DPAD_DOWN</code>)","Navigate or traverse leftward. (<code>KEYCODE_DPAD_LEFT</code>)","Navigate or traverse rightward. (<code>KEYCODE_DPAD_RIGHT</code>)","Navigate or traverse upward. (<code>KEYCODE_DPAD_UP</code>)","The Attention (Attn) key.","Adjust audio balance leftward. (<code>VK_AUDIO_BALANCE_LEFT</code>)","Adjust audio balance rightward. (<code>VK_AUDIO_BALANCE_RIGHT</code>)","Decrease audio bass boost or cycle down through bass boost …","Toggle bass boost on/off. (<code>APPCOMMAND_BASS_BOOST</code>)","Increase audio bass boost or cycle up through bass boost …","Adjust audio fader towards front. (<code>VK_FADER_FRONT</code>)","Adjust audio fader towards rear. (<code>VK_FADER_REAR</code>)","Advance surround audio mode to next available mode. (…","Decrease treble. (<code>APPCOMMAND_TREBLE_DOWN</code>)","Increase treble. (<code>APPCOMMAND_TREBLE_UP</code>)","Decrease audio volume. (<code>APPCOMMAND_VOLUME_DOWN</code>, …","Toggle between muted state and prior volume level. (…","Increase audio volume. (<code>APPCOMMAND_VOLUME_UP</code>, …","Used to remove the character to the left of the cursor. …","The Brightness Down key. Typically controls the display …","The Brightness Up key. Typically controls the display …","Navigate to previous content or page in current history. (…","Open the list of browser favorites. (…","Navigate to next content or page in current history. (…","Go to the user’s preferred home page. (…","Refresh the current page or content. (…","Call up the user’s preferred search page. (…","Stop loading the current page or content. (…","The Call key. (<code>KEYCODE_CALL</code>)","The Camera key. (<code>KEYCODE_CAMERA</code>)","The Camera focus key. (<code>KEYCODE_FOCUS</code>)","","The <code>Caps Lock</code> (Capital) key.","Select next (numerically or logically) lower channel. (…","Select next (numerically or logically) higher channel. (…","Remove the currently selected input.","Close the current document or message (Note: This …","Toggle the display of Closed Captions. (<code>VK_CC</code>, …","Initiate the Code Input mode to allow characters to be …","General purpose color-coded media function key, as index 0 …","General purpose color-coded media function key, as index 1 …","General purpose color-coded media function key, as index 2 …","General purpose color-coded media function key, as index 3 …","General purpose color-coded media function key, as index 4 …","General purpose color-coded media function key, as index 5 …","The Compose key, also known as “Multi_key” on the X …","Show the application’s context menu. This key is …","The <code>Control</code> or <code>Ctrl</code> key.","Convert the current input method sequence.","Copy the current selection. (<code>APPCOMMAND_COPY</code>)","The Cursor Select key.","Cut the current selection. (<code>APPCOMMAND_CUT</code>)","Select Digital Video Rrecorder. (<code>KEYCODE_DVR</code>)","Used to delete the character to the right of the cursor. …","Adjust brightness of device, by toggling between or …","Swap video sources. (<code>VK_DISPLAY_SWAP</code>)","The Eisu key. This key may close the IME, but its purpose …","Toggle removable media to eject (open) and insert (close) …","The End key, used with keyboard entry to go to the end of …","The End Call key. (<code>KEYCODE_ENDCALL</code>)","The <code>Enter</code> or <code>↵</code> key. Used to activate current selection …","The Erase to End of Field key. This key deletes all …","The <code>Esc</code> key. This key was originally used to initiate an …","The Extend Selection (Exsel) key.","","Exit the current application. (<code>VK_EXIT</code>)","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key. Usually found at the top of …","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","Clear program or content stored as favorite 0. (…","Clear program or content stored as favorite 1. (…","Clear program or content stored as favorite 2. (…","Clear program or content stored as favorite 3. (…","Select (recall) program or content stored as favorite 0. (…","Select (recall) program or content stored as favorite 1. (…","Select (recall) program or content stored as favorite 2. (…","Select (recall) program or content stored as favorite 3. (…","Store current program or content as favorite 0. (…","Store current program or content as favorite 1. (…","Store current program or content as favorite 2. (…","Store current program or content as favorite 3. (…","The Final Mode <code>Final</code> key used on some Asian keyboards, to …","Open the Find dialog. (<code>APPCOMMAND_FIND</code>)","The Function switch <code>Fn</code> key. Activating this key …","The Function-Lock (<code>FnLock</code> or <code>F-Lock</code>) key. Activating this …","","The Back key. (<code>KEYCODE_BACK</code>)","The Home key, which goes to the phone’s main screen. (…","Switch to the first character group. (ISO/IEC 9995)","Switch to the last character group. (ISO/IEC 9995)","Switch to the next character group. (ISO/IEC 9995)","Switch to the previous character group. (ISO/IEC 9995)","Toggle display of program or content guide. (<code>VK_GUIDE</code>, …","If guide is active and displayed, then display next …","If guide is active and displayed, then display previous …","Toggle between Hangul and English modes.","","The (Half-Width) Characters key.","The Headset Hook key. (<code>KEYCODE_HEADSETHOOK</code>)","Open a help dialog or toggle display of help information. (…","The Hibernate key. This key saves the current state of the …","The Hiragana (Japanese Kana characters) key.","The Hiragana/Katakana toggle key. (…","The Home key, used with keyboard entry, to go to start of …","","Toggle display of information about currently selected …","Toggle between text modes for insertion or overtyping. (…","Toggle instant replay. (<code>VK_INSTANT_REPLAY</code>)","","The Kana Mode (Kana Lock) key. This key is used to enter …","The Kanji (Japanese name for ideographic characters of …","The Katakana (Japanese Kana characters) key.","The <code>11</code> key found on media numpads that have buttons from <code>1</code> …","The <code>12</code> key found on media numpads that have buttons from <code>1</code> …","","The first generic “LaunchApplication” key. This is …","The second generic “LaunchApplication” key. This is …","The “Calendar” key. (<code>KEYCODE_CALENDAR</code>)","The “Contacts” key. (<code>KEYCODE_CONTACTS</code>)","The “Mail” key. (<code>APPCOMMAND_LAUNCH_MAIL</code>)","The “Media Player” key. (<code>APPCOMMAND_LAUNCH_MEDIA_SELECT</code>…","","","","","","","","Launch linked content, if available and appropriate. (…","List the current program. (<code>VK_LIST</code>)","Toggle display listing of currently available live content …","Lock or unlock current content or program. (<code>VK_LOCK</code>)","","Open an editor to forward the current message. (…","Open an editor to reply to the current message. (…","Send the current message. (<code>APPCOMMAND_SEND_MAIL</code>)","Toggle between manner mode state: silent, vibrate, ring, …","Show a list of media applications: audio/video players and …","Audio track key. (<code>KEYCODE_MEDIA_AUDIO_TRACK</code>)","Close the current media, for example to close a CD or DVD …","Initiate or continue forward playback at faster than …","Select previously selected channel or media. (<code>VK_LAST</code>, …","Pause the currently playing media. (<code>APPCOMMAND_MEDIA_PAUSE</code>…","Initiate or continue media playback at normal speed, if …","Toggle media between play and pause states. (…","Initiate or resume recording of currently selected media. (…","Initiate or continue reverse playback at faster than …","Skip backward to next content or program. (…","Skip forward to next content or program. (<code>VK_SKIP</code>, …","Step backward to next content or program. (…","Step forward to next content or program. (…","Stop media playing, pausing, forwarding, rewinding, or …","Media top menu. (<code>KEYCODE_MEDIA_TOP_MENU</code>)","Seek to next media or program track. (…","Seek to previous media or program track. (…","","Toggle the microphone on/off. (<code>APPCOMMAND_MIC_ON_OFF_TOGGLE</code>…","Decrease microphone volume. (…","Mute the microphone. (<code>APPCOMMAND_MICROPHONE_VOLUME_MUTE</code>, …","Increase microphone volume. (…","Toggle between or cycle through input modes of IMEs.","A <code>Key::Named</code> value","Navigate in. (<code>KEYCODE_NAVIGATE_IN</code>)","Navigate to next key. (<code>KEYCODE_NAVIGATE_NEXT</code>)","Navigate out. (<code>KEYCODE_NAVIGATE_OUT</code>)","Navigate to previous key. (<code>KEYCODE_NAVIGATE_PREVIOUS</code>)","Open a new document or message. (<code>APPCOMMAND_NEW</code>)","","Cycle to next favorite channel (in favorites list). (…","Cycle to next user profile (if there are multiple user …","Accept current input method sequence without conversion in …","The Notification key. (<code>KEYCODE_NOTIFICATION</code>)","The <code>NumLock</code> or Number Lock key. Used to toggle numpad mode …","Access on-demand content or programs. (<code>VK_ON_DEMAND</code>)","Open an existing document or message. (<code>APPCOMMAND_OPEN</code>)","Scroll down or display next page of content.","Scroll up or display previous page of content.","Pairing key to pair devices. (<code>KEYCODE_PAIRING</code>)","The Paste key. (<code>APPCOMMAND_PASTE</code>)","Pause the current state or application (as appropriate).","Move picture-in-picture window down. (<code>VK_PINP_DOWN</code>)","Move picture-in-picture window. (<code>VK_PINP_MOVE</code>)","Toggle display of picture-in-picture window. (…","Move picture-in-picture window up. (<code>VK_PINP_UP</code>)","Play or resume the current state or application (as …","Decrease media playback speed. (<code>VK_PLAY_SPEED_DOWN</code>)","Reset playback to normal speed. (<code>VK_PLAY_SPEED_RESET</code>)","Increase media playback speed. (<code>VK_PLAY_SPEED_UP</code>)","Toggle power state. (<code>KEYCODE_POWER</code>) Note: Note: Some …","The <code>PowerOff</code> key. Sometime called <code>PowerDown</code>.","","Print the current document or message. (<code>APPCOMMAND_PRINT</code>)","Initiate print-screen function.","","The properties (Props) key.","Toggle random media or content shuffle mode. (…","Not a physical key, but this key code is sent when the …","Toggle or cycle between media recording speeds. (…","Redo the last action. (<code>APPCOMMAND_REDO</code>)","Toggle RF (radio frequency) input bypass mode (pass RF …","The Roman characters function key.","Switch the input mode on an external STB (set top box). (…","Toggle the power on an external STB (set top box). (…","Save the current document or message. (<code>APPCOMMAND_SAVE</code>)","Toggle scan channels mode. (<code>VK_SCAN_CHANNELS_TOGGLE</code>)","Advance display screen mode to next available mode. (…","Toggle between scrolling and cursor movement modes.","","Toggle display of device settings screen. (<code>VK_SETTINGS</code>, …","Used to enable shift modifier function for interpreting …","","General purpose virtual function key, as index 1.","General purpose virtual function key, as index 2.","General purpose virtual function key, as index 3.","General purpose virtual function key, as index 4.","Used in text to insert a space between words. Usually …","Show correction list when a word is incorrectly …","Toggle between dictation mode and command/control mode. (…","Spellcheck the current document or selection. (…","Toggle split screen mode. (<code>VK_SPLIT_SCREEN_TOGGLE</code>)","The Standby key. This key turns off the display and places …","Toggle display of subtitles, if available. (<code>VK_SUBTITLE</code>)","Used to enable “super” modifier function for …","The Symbol modifier key (used on some virtual keyboards).","","Switch to viewing TV. (<code>KEYCODE_TV</code>)","TV 3D Mode. (<code>KEYCODE_3D_MODE</code>)","Toggle between antenna and cable input. (…","Audio description. (<code>KEYCODE_TV_AUDIO_DESCRIPTION</code>)","Audio description mixing volume down. (…","Audio description mixing volume up. (…","Contents menu. (<code>KEYCODE_TV_CONTENTS_MENU</code>)","Contents menu. (<code>KEYCODE_TV_DATA_SERVICE</code>)","Switch the input mode on an external TV. (<code>KEYCODE_TV_INPUT</code>)","Switch to component input #1. (<code>KEYCODE_TV_INPUT_COMPONENT_1</code>…","Switch to component input #2. (<code>KEYCODE_TV_INPUT_COMPONENT_2</code>…","Switch to composite input #1. (<code>KEYCODE_TV_INPUT_COMPOSITE_1</code>…","Switch to composite input #2. (<code>KEYCODE_TV_INPUT_COMPOSITE_2</code>…","Switch to HDMI input #1. (<code>KEYCODE_TV_INPUT_HDMI_1</code>)","Switch to HDMI input #2. (<code>KEYCODE_TV_INPUT_HDMI_2</code>)","Switch to HDMI input #3. (<code>KEYCODE_TV_INPUT_HDMI_3</code>)","Switch to HDMI input #4. (<code>KEYCODE_TV_INPUT_HDMI_4</code>)","Switch to VGA input #1. (<code>KEYCODE_TV_INPUT_VGA_1</code>)","Media context menu. (<code>KEYCODE_TV_MEDIA_CONTEXT_MENU</code>)","Toggle network. (<code>KEYCODE_TV_NETWORK</code>)","Number entry. (<code>KEYCODE_TV_NUMBER_ENTRY</code>)","Toggle the power on an external TV. (<code>KEYCODE_TV_POWER</code>)","Radio. (<code>KEYCODE_TV_RADIO_SERVICE</code>)","Satellite. (<code>KEYCODE_TV_SATELLITE</code>)","Broadcast Satellite. (<code>KEYCODE_TV_SATELLITE_BS</code>)","Communication Satellite. (<code>KEYCODE_TV_SATELLITE_CS</code>)","Toggle between available satellites. (…","Analog Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_ANALOG</code>)","Digital Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_DIGITAL</code>)","Timer programming. (<code>KEYCODE_TV_TIMER_PROGRAMMING</code>)","The Horizontal Tabulation <code>Tab</code> key.","Toggle display of teletext, if available (<code>VK_TELETEXT</code>, …","Undo the last action. (<code>APPCOMMAND_UNDO</code>)","Advance video mode to next available mode. (…","","The WakeUp key. (<code>KEYCODE_WAKEUP</code>)","Cause device to identify itself in some manner, e.g., …","The Zenkaku (Full-Width) Characters key.","The Zenkaku/Hankaku (full-width/half-width) toggle key. (…","The ZoomIn key. (<code>KEYCODE_ZOOM_IN</code>)","The ZoomOut key. (<code>KEYCODE_ZOOM_OUT</code>)","Toggle between full-screen and scaled content, or alter …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert an action to its approximate textual equivalent.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","No value.","","","","Some value of type <code>T</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Helper macro to generate tuple pyramids. Useful to …","Types for defining <code>Archetype</code>s, collections of entities …","Types for handling <code>Bundle</code>s.","Types that detect when their internal data mutate.","Types for declaring and storing <code>Component</code>s.","Entity handling types.","Event handling types.","Most commonly used re-exported types.","Contains APIs for retrieving component data from the world.","Types that enable reflection support.","Alerting events when a component is removed from an entity.","Contains APIs for ordering systems and executing them on a …","Storage layouts for ECS data.","Tools for controlling behavior in an ECS application.","Defines the <code>World</code> and APIs for accessing it directly.","Metadata for a single archetype within a <code>World</code>.","An opaque unique joint ID for a <code>Component</code> in an <code>Archetype</code> …","Metadata about an <code>Entity</code> in a <code>Archetype</code>.","The next <code>ArchetypeId</code> in an <code>Archetypes</code> collection.","An opaque unique ID for a single <code>Archetype</code> within a <code>World</code>.","An opaque location within a <code>Archetype</code>.","The backing store of all <code>Archetype</code>s within a <code>World</code>.","The ID for the <code>Archetype</code> without any components.","Archetypes and bundles form a graph. Adding or removing a …","Index indicating an invalid archetype row. This is meant …","Safety:","Returns the number of components that are stored in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets an iterator of all of the components in the archetype.","Checks if the archetype contains a specific component. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fetches a immutable reference to the archetype’s <code>Edges</code>, …","Fetches an immutable reference to the archetype without …","Fetches the entities contained in this archetype.","The ID of the entity.","Fetches the row in the <code>Table</code> where the components for the …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Returns the “generation”, a handle to the current …","Fetches an immutable reference to an <code>Archetype</code> using its …","Checks the cache for the target archetype when adding a …","Fetches the corresponding <code>ArchetypeComponentId</code> for a …","","Checks the cache for the target archetype when removing a …","","Gets the type of storage where a component in the …","Checks the cache for the target archetype when removing a …","","","Fetches the ID for the archetype.","","","Gets the index of the row.","The plain value of this <code>ArchetypeId</code>.","","","","","","","","","","","The first archetype.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Checks if the archetype has any entities.","","","","","","","","","Returns a read-only iterator over all archetypes.","Gets the total number of entities that belong to the …","Fetches the total number of <code>Archetype</code>s within the world.","Creates a <code>ArchetypeRow</code>.","Create an <code>ArchetypeId</code> from a plain value.","","Gets an iterator of all of the components stored in …","","Gets an iterator of all of the components stored in <code>Table</code>s.","Fetches the archetype’s <code>Table</code> ID.","The row in the <code>Table</code> where the entity’s components are …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Bundle</code> trait enables insertion and removal of <code>Component</code>…","","For a specific <code>World</code>, this stores a unique value …","Stores metadata associated with a specific type of <code>Bundle</code> …","Metadata for bundles. Stores a <code>BundleInfo</code> for each type of …","The parts from <code>Bundle</code> that don’t require statically …","","","","","","","","","","","","","","","","","","Returns the ID of each component stored in this bundle.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Gets the metadata associated with a specific type of …","Gets the value identifying a specific type of bundle. …","","","","Returns a value identifying the associated <code>Bundle</code> type.","Returns the index of the associated <code>Bundle</code> type.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The (arbitrarily chosen) minimum number of world tick …","Types that can read change detection information. This …","Types that implement reliable change detection.","The type contained within this smart pointer","The maximum change tick difference that won’t overflow …","Unique mutable borrow of an entity’s component","Unique mutable borrow of resources or an entity’s …","Unique borrow of a non-<code>Send</code> resource.","Shared borrow of an entity’s component with access to …","Shared borrow of a <code>Resource</code>.","Unique mutable borrow of a <code>Resource</code>.","","","Returns a pointer to the value without taking ownership of …","Returns an immutable pointer to the value without taking …","","","Manually bypasses change detection, allowing you to mutate …","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Returns the pointer to the value, marking it as changed.","Returns <code>true</code> if this value was added after the system last …","","Returns <code>true</code> if this value was added or mutably …","","","Returns the change tick recording the time this data was …","","Turn this <code>MutUntyped</code> into a <code>Mut</code> by mapping the inner <code>PtrMut</code>…","Returns a <code>MutUntyped</code> with a smaller lifetime. This is …","Overwrites this smart pointer with the given value, if and …","Flags this value as having been changed.","","Overwrites this smart pointer with the given value, if and …","Manually sets the change tick recording the time when this …","","","","","","","","","Transforms this <code>MutUntyped</code> into a <code>Mut&lt;T&gt;</code> with the same …","A data type that can be used to store data for an entity.","","A value describing a component or resource, which may or …","A value which uniquely identifies the type of a <code>Component</code> …","A <code>SystemParam</code> that provides access to the <code>ComponentId</code> for …","Stores metadata for a type of component or resource stored …","Types used to specify the storage strategy for a component.","Records when a component was added and when it was last …","Stores metadata associated with each kind of <code>Component</code> in …","The maximum relative age for a change tick. The value of …","A value indicating the storage strategy specified by this …","Provides fast addition and removal of components, but …","Marker type for components stored in a <code>ComponentSparseSet</code>.","A marker type indicating the storage type used for this …","The storage used for a specific component type.","Provides fast and cache-friendly iteration, but slower …","Marker type for components stored in a <code>Table</code>.","A value that tracks when a system ran relative to other …","Interior-mutable access to the <code>Tick</code>s for a single …","The tick indicating when the value was added to the world.","Returns the tick recording the time this component was …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The tick indicating the last time the value was modified.","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>ComponentId</code> of the given <code>Component</code> type <code>T</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the function which should be called to clean up values …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Gets the value of this change tick.","Gets the <code>ComponentId</code> for the type <code>T</code>.","Type-erased equivalent of <code>Components::component_id()</code>.","Gets the metadata associated with the given component.","Gets the metadata associated with the given component.","Returns the name associated with the given component.","","","Type-erased equivalent of <code>Components::resource_id()</code>.","","","Returns a value uniquely identifying the current component.","Returns the index of the current component.","","","","","","","","","","","","Initializes a component of type <code>T</code> with this instance. If a …","Initializes a component described by <code>descriptor</code>.","Initializes a non-send resource of type <code>T</code> with this …","Initializes a <code>Resource</code> of type <code>T</code> with this instance. If a …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the component was added after the system …","Returns <code>true</code> if the component was added or mutably …","Returns <code>true</code> if there are no components registered with …","","","","","","","","","","","","Returns <code>true</code> if this <code>Tick</code> occurred since the system’s …","Returns <code>true</code> if the underlying component type can be …","Gets an iterator over all components registered with this …","Returns the tick recording the time this component was …","Returns the layout used to store values of this component …","Returns the number of components registered with this …","Returns the name of the current component.","Returns the name of the current component.","Creates a new <code>ComponentId</code>.","Create a new <code>ComponentDescriptor</code> for the type <code>T</code>.","Creates a new <code>Tick</code> wrapping the given value.","","Create a new <code>ComponentDescriptor</code> for a resource.","Create a new <code>ComponentDescriptor</code>.","","Returns the <code>ComponentId</code> of the given <code>Resource</code> type <code>T</code>.","Sets the value of this change tick.","Manually sets the change tick.","","Returns a value indicating the storage strategy for the …","Returns a value indicating the storage strategy for the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>TypeId</code> of the underlying component type. …","","","Returns the <code>TypeId</code> of the underlying component type. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A <code>World</code>’s internal metadata store on all of its entities.","Lightweight identifier of an entity.","A location of an entity in an archetype.","A wrapper for <code>HashMap&lt;Entity, Entity&gt;</code>, augmenting it with …","Operation to map all contained <code>Entity</code> fields in a type to …","An <code>Iterator</code> returning a sequence of <code>Entity</code> values from …","Allocate an entity ID directly.","Allocate a specific entity ID, overwriting its generation.","The ID of the <code>Archetype</code> the <code>Entity</code> belongs to.","The index of the <code>Entity</code> within its <code>Archetype</code>.","","","","","","","","","","","","","","","","","Clears all <code>Entity</code> from the World.","","","","Returns true if the <code>Entities</code> contains <code>entity</code>.","","","","","","","","","","","","","","","","","","","","","","Allocates space for entities previously reserved with …","Safety","Flushes all reserved entities to an “invalid” state. …","","","Destroy an entity, allowing it to be reused.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the location of an <code>Entity</code>. Note: for pending …","Gets a reference to the underlying <code>HashMap&lt;Entity, Entity&gt;</code>.","Gets a mutable reference to the underlying …","Returns the corresponding mapped entity or reserves a new …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Checks if any entity is currently active.","","","","","The count of currently allocated entities.","Updates all <code>Entity</code> references stored inside using …","","Ensure at least <code>n</code> allocations can succeed without …","Reserve entity IDs concurrently.","Reserve one entity ID concurrently.","Get the <code>Entity</code> with a given id, if it exists in this …","","The ID of the <code>Table</code> the <code>Entity</code> belongs to.","The index of the <code>Entity</code> within its <code>Table</code>.","","","","","","","","","","The count of all entities in the <code>World</code> that have ever been …","","","","","","","","","","","","","","","","","","","","","Creates an <code>EntityMapper</code> from a provided <code>World</code> and …","A type that can be stored in an <code>Events&lt;E&gt;</code> resource You can …","","An <code>EventId</code> uniquely identifies an event stored in a …","An iterator that yields any unread events from an …","An iterator that yields any unread events (and their IDs) …","Reads events of type <code>T</code> in order and tracks which events …","Sends events of type <code>T</code>.","An event collection that represents the events that …","An iterator that yields any unread events from an …","An iterator that yields any unread events (and their IDs) …","Stores the state for an <code>EventReader</code>. Access to the …","","","","","","","","","","","","","","","","","","","See <code>EventReader::clear()</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A system that queues a call to <code>Events::update</code>.","A run condition that checks if the event’s …","A system that calls <code>Events::update</code>.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Uniquely identifies the event associated with this ID.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","See <code>EventReader::is_empty()</code>","","","","","See <code>EventReader::iter</code>","See <code>EventReader::iter_with_id</code>","","","See <code>EventReader::len</code>","","","Amount of events we missed.","Creates a new iterator that yields any <code>events</code> that have …","","","","","","See <code>EventReader::read</code>","See <code>EventReader::read_with_id</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterate over only the events.","A filter on a component that only retains results added …","The <code>AnyOf</code> query parameter fetches entities with any of the …","A <code>Resource</code> storing <code>TypeRegistry</code> for type registrations …","The <code>Bundle</code> trait enables insertion and removal of <code>Component</code>…","","A filter on a component that only retains results added or …","A <code>Command</code> queue to perform impactful changes to the <code>World</code>.","A data type that can be used to store data for an entity.","","A system that determines if one or more scheduled systems …","A <code>SystemParam</code> that stores a buffer which gets applied to …","Types that can read change detection information. This …","Types that implement reliable change detection.","Lightweight identifier of an entity.","Provides mutable access to a single entity and all of its …","A read-only reference to a particular <code>Entity</code> and all of …","A mutable reference to a particular <code>Entity</code>, and the entire …","A type that can be stored in an <code>Events&lt;E&gt;</code> resource You can …","","Reads events of type <code>T</code> in order and tracks which events …","Sends events of type <code>T</code>.","An event collection that represents the events that …","Creates an instance of the type this trait is implemented …","Returns a bool that describes if an entity has the …","Wrapper type to mark a <code>SystemParam</code> as an input.","The input type to this system. See <code>System::In</code>.","The system’s input. See <code>In</code> for <code>FunctionSystem</code>s.","The type contained within this smart pointer","Conversion trait to turn something into a <code>System</code>.","Types that can convert into a <code>SystemConfigs</code>.","Types that can be converted into a <code>SystemSet</code>.","Types that can convert into a <code>SystemSetConfigs</code>.","A system local <code>SystemParam</code>.","Unique mutable borrow of an entity’s component","The next state of <code>State&lt;S&gt;</code>.","Shared borrow of a non-<code>Send</code> resource.","Unique borrow of a non-<code>Send</code> resource.","The label of a <code>Schedule</code> that runs whenever <code>State&lt;S&gt;</code> enters …","The label of a <code>Schedule</code> that runs whenever <code>State&lt;S&gt;</code> exits …","The label of a <code>Schedule</code> that <strong>only</strong> runs whenever <code>State&lt;S&gt;</code> …","A filter that tests if any of the given filters apply.","The return type of this system. See <code>System::Out</code>.","The system’s output.","An entity ID with a placeholder value. This may or may not …","An alternative to <code>Commands</code> that can be used in parallel …","The <code>SystemParam</code>/s used by this system to access the <code>World</code>.","A collection of potentially conflicting <code>SystemParam</code>s …","System parameter that provides selective access to the …","Provides scoped access to a <code>World</code> state according to a …","<code>System</code> types that do not modify the <code>World</code> when run. This …","Shared borrow of an entity’s component with access to …","A struct used to operate on reflected <code>Component</code> of a type.","A struct used to operate on reflected <code>Resource</code> of a type.","A <code>SystemParam</code> that grants access to the entities that had …","Shared borrow of a <code>Resource</code>.","Unique mutable borrow of a <code>Resource</code>.","A type that can be inserted into a <code>World</code> as a singleton.","","A collection of systems, and the metadata and executor …","Resource that stores <code>Schedule</code>s mapped to <code>ScheduleLabel</code>s.","The type of <code>SystemSet</code> this instance converts into.","A finite-state machine whose transitions have associated …","Types that can define world-wide states in a finite-state …","","A marker type indicating the storage type used for this …","An ECS system that can be added to a <code>Schedule</code>","The type of <code>System</code> that this instance converts into.","A trait implemented for all functions that can be used as …","Types that identify logical groups of systems.","Derive macro generating an impl of the trait <code>SystemSet</code>.","Filter that selects entities with a component <code>T</code>.","Filter that selects entities without a component <code>T</code>.","Stores and exposes operations on entities, components, …","Pushes a generic <code>Command</code> to the command queue.","Adds the specified <code>Schedule</code> to the world. The schedule can …","Add a collection of systems to the schedule.","Run after all systems in <code>set</code>.","Run after all systems in <code>set</code>.","Ignore system order ambiguities caused by conflicts on …","Ignore system order ambiguities caused by conflicts on …","Ignore system order ambiguities caused by conflicts on …","Ignore system order ambiguities caused by conflicts on …","Suppress warnings and errors that would result from these …","Suppress warnings and errors that would result from …","Suppress warnings and errors that would result from these …","Suppress warnings and errors that would result from …","Returns a new run condition that only returns <code>true</code> if both …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","","","","","","","","","","","","","Uses reflection to set the value of this <code>Component</code> type in …","Uses reflection to set the value of this <code>Resource</code> type in …","","","","","","Instructs the executor to call <code>System::apply_deferred</code> on …","Applies any <code>Deferred</code> system parameters (or other system …","Directly applies any accumulated <code>Deferred</code> system …","Uses reflection to set the value of this <code>Component</code> type in …","Uses reflection to set the value of this <code>Resource</code> type in …","If a new state is queued in <code>NextState&lt;S&gt;</code>, this system:","Returns the archetype that the current entity belongs to.","Returns the archetype that the current entity belongs to.","Returns the archetype that the current entity belongs to.","Returns the system’s archetype component <code>Access</code>.","Retrieves this world’s <code>Archetypes</code> collection.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allows you access to the dereferenced value of this …","Allows you access to the dereferenced value of this …","Allows you access to the dereferenced value of this …","Casts this value to a form where it can be compared with …","","","","","","","","","","","Converts this <code>QueryState</code> reference to a <code>QueryState</code> that …","Converts this <code>QueryState</code> reference to a <code>QueryState</code> that …","Gets read-only access to all of the entity’s components.","","","","","","","","","","","","Creates a new <code>UnsafeWorldCell</code> view with complete …","Creates a new <code>UnsafeWorldCell</code> view with only read access …","Run before all systems in <code>set</code>.","Run before all systems in <code>set</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves this world’s <code>Bundles</code> collection.","Manually bypasses change detection, allowing you to mutate …","","","","Retrieves a <code>WorldCell</code>, which safely enables multiple …","Treat this collection as a sequence of systems.","Treat this collection as a sequence of system sets.","Reads the current change tick of this world.","Checks any <code>Tick</code>s stored on this system and wraps their …","Iterates all component change ticks and clamps any older …","Removes all events.","Consumes all available events.","Consumes all available events.","Runs both <code>clear_entities</code> and <code>clear_resources</code>, invalidating …","Despawns all entities in this <code>World</code>.","Clears all resources in this <code>World</code>.","Clears the internal component tracker state.","Copies a reference to a resource.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Temporarily provides access to the <code>Commands</code> for the …","","Returns a shared reference to the component <code>T</code> of the given …","Returns the system’s component <code>Access</code>.","Returns the <code>ComponentId</code> of the given <code>Component</code> type <code>T</code>.","Returns a mutable reference to the component <code>T</code> of the …","Retrieves this world’s <code>Components</code> collection.","","","","","","","Applies the provided <code>ScheduleBuildSettings</code> to all …","Configures a system set in this schedule, adding it if it …","Configures a collection of system sets in this schedule, …","Returns <code>true</code> if the given <code>Entity</code> matches the query.","Returns <code>true</code> if the current entity has a component of type …","Returns <code>true</code> if the current entity has a component of type …","Returns whether entity contains this <code>Component</code>","Does a schedule with the provided label already exist?","Returns <code>true</code> if the current entity has a component of type …","Returns <code>true</code> if the current entity has a component …","Returns <code>true</code> if the current entity has a component …","Returns <code>true</code> if the current entity has a component …","Returns <code>true</code> if a resource of type <code>R</code> exists. Otherwise …","Returns <code>true</code> if a resource of type <code>R</code> exists. Otherwise …","Returns <code>true</code> if the current entity has a component with …","Returns <code>true</code> if the current entity has a component with …","Returns <code>true</code> if the current entity has a component with …","Gets the value of this <code>Component</code> type from entity from …","Gets the value of this <code>Resource</code> type from <code>source_world</code> and …","","","","System adapter that utilizes the …","Creates a schedule with a default label. Only use in …","","","","","","","Returns the system’s default system sets.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Despawns the current entity.","Despawns the given <code>entity</code>, if it exists. This will also …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add a run condition to each contained system.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a draining iterator that removes all events.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clones this <code>SystemSet</code>.","","","","","","","","Feeds this value into the given <code>Hasher</code>.","","","","","","","","Retrieves this world’s <code>Entities</code> collection.","Retrieves this world’s <code>Entities</code> collection mutably.","Retrieves an <code>EntityRef</code> that exposes read-only operations …","Returns the <code>EntityCommands</code> for the requested <code>Entity</code>.","Retrieves an <code>EntityWorldMut</code> that exposes read and write …","","","","","","","","","","","","","","","","","","","","System adapter that utilizes the …","Fetch underlying <code>Events</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The underlying function pointers implementing methods on …","The underlying function pointers implementing methods on …","Runs <code>func</code> on each query result for the given <code>World</code>. This …","Runs <code>f</code> on each read-only query item.","Runs <code>func</code> on each query result for the given <code>World</code>. This …","Runs <code>f</code> on each query item.","Runs <code>func</code> on each query result for the given <code>World</code>. This …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert this <code>ResMut</code> into a <code>Mut</code>. This allows keeping the …","Convert this <code>NonSendMut</code> into a <code>Mut</code>. This allows keeping …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","The state being exited.","Reconstruct an <code>Entity</code> previously destructured with …","Creates a new entity ID with the specified <code>index</code> and a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates <code>Self</code> using data from the given <code>World</code>.","","","","","Constructs default reflected <code>Component</code> from world using …","","","","","Returns the generation of this Entity’s index. The …","Gets the query result for the given <code>World</code> and <code>Entity</code>.","Returns the read-only query item for the given <code>Entity</code>.","Gets access to the component of type <code>T</code> for the current …","Gets access to the component of type <code>T</code> for the current …","Retrieves a reference to the given <code>entity</code>’s <code>Component</code> of …","Returns a reference to the schedule associated with <code>label</code>, …","Get the current state.","Gets access to the component of type <code>T</code> for the current …","Returns the schedule’s current <code>ScheduleBuildSettings</code>.","Gets the component of the given <code>ComponentId</code> from the …","Gets the component of the given <code>ComponentId</code> from the …","Retrieves an immutable untyped reference to the given …","Gets the component of the given <code>ComponentId</code> from the …","Retrieves the change ticks for the given component. This …","Retrieves the change ticks for the given component. This …","Retrieves the change ticks for the given component. This …","Retrieves the change ticks for the given <code>ComponentId</code>. This …","Retrieves the change ticks for the given <code>ComponentId</code>. This …","Retrieves the change ticks for the given <code>ComponentId</code>. This …","Returns a shared reference to the component <code>T</code> of the given …","Returns a mutable reference to the component <code>T</code> of the …","Returns a mutable reference to the component <code>T</code> of the …","Returns a mutable reference to the component <code>T</code> of the …","Retrieves an <code>EntityRef</code> that exposes read-only operations …","Returns the <code>EntityCommands</code> for the requested <code>Entity</code>, if it …","Retrieves an <code>EntityWorldMut</code> that exposes read and write …","Get a specific event by id if it still exists in the …","Returns the schedule’s current execution strategy.","","","","","Returns the query item for the given <code>Entity</code>, with the …","Gets the tick indicating the last time this system ran.","Gets the query result for the given <code>World</code> and <code>Entity</code>.","Returns the read-only query results for the given array of …","Returns the read-only query items for the given array of …","Gets an <code>EntityRef</code> for multiple entities at once.","Gets mutable access to multiple entities.","Returns the query results for the given array of <code>Entity</code>.","Returns the query items for the given array of <code>Entity</code>.","Gets the query result for the given <code>World</code> and <code>Entity</code>.","Returns the query item for the given <code>Entity</code>.","Gets mutable access to the component of type <code>T</code> for the …","Gets mutable access to the component of type <code>T</code> for the …","Retrieves a mutable reference to the given <code>entity</code>’s …","Returns a mutable reference to the schedule associated …","Gets a <code>MutUntyped</code> of the component of the given <code>ComponentId</code>…","Gets a <code>MutUntyped</code> of the component of the given <code>ComponentId</code>…","Retrieves a mutable untyped reference to the given <code>entity</code>…","Gets a <code>!Send</code> resource to the resource with the id …","Gets a <code>!Send</code> resource to the resource with the id …","Gets a reference to the non-send resource of the given …","Gets a mutable reference to the non-send resource of the …","Returns an <code>EntityWorldMut</code> for the given <code>entity</code> (if it …","Pushes a <code>Command</code> to the queue for creating a new <code>Entity</code> if …","","","","","","","","","","","","","","","","","","","","","","","","Gets a new <code>ManualEventReader</code>. This will include all events …","Gets a new <code>ManualEventReader</code>. This will ignore all events …","Gets access to the component of type <code>T</code> for the current …","Gets access to the component of type <code>T</code> for the current …","Gets access to the component of type <code>T</code> for the current …","","","","Gets a reference to the resource of the given type if it …","Gets a pointer to the resource with the id <code>ComponentId</code> if …","Gets a mutable reference to the resource of the given type …","Gets a pointer to the resource with the id <code>ComponentId</code> if …","Gets a mutable reference to the resource of type <code>T</code> if it …","Returns a single immutable query result when there is …","Returns a single read-only query item when there is …","Returns a single mutable query result when there is …","Returns a single query item when there is exactly one …","Returns a query result when there is exactly one entity …","Returns a query result when there is exactly one entity …","","","","","Gets the query result for the given <code>World</code> and <code>Entity</code>.","Returns the query item for the given <code>Entity</code>.","Returns the <code>ScheduleGraph</code>.","Returns a mutable reference to the <code>ScheduleGraph</code>.","","","","","","Returns the ID of the current entity.","Returns the ID of the current entity.","Retrieves this <code>World</code>’s unique ID","Returns the ID of the current entity.","System adapter that ignores the output of the previous …","List of <code>ComponentId</code>s to ignore when reporting system order …","Add these systems to the provided <code>set</code>.","Add these system sets to the provided <code>set</code>.","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Increments the world’s current change tick and returns …","Return a transiently unique identifier.","System adapter that utilizes the <code>bevy_utils::tracing::info!</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initializes a new <code>Component</code> type and returns the …","Initializes a new <code>Component</code> type and returns the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initializes a new non-send resource and returns the …","Initializes a new resource and returns the <code>ComponentId</code> …","Pushes a <code>Command</code> to the queue for inserting a <code>Resource</code> in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initialize the system.","Initializes any newly-added systems and conditions, …","Adds a <code>Bundle</code> of components to the entity.","Insert a reflected <code>Component</code> into the entity like <code>insert()</code>.","Insert a reflected <code>Resource</code> into the world like <code>insert()</code>.","Inserts a labeled schedule into the map.","Inserts a dynamic <code>Component</code> into the entity.","Inserts a dynamic <code>Bundle</code> into the entity.","Inserts a new <code>!Send</code> resource with the given <code>value</code>. Will …","Inserts a new non-send resource with the given <code>value</code>.","For a given batch of (<code>Entity</code>, <code>Bundle</code>) pairs, either spawns …","Pushes a <code>Command</code> to the queue for creating entities, if …","Inserts a new resource with the given <code>value</code>.","Pushes a <code>Command</code> to the queue for inserting a <code>Resource</code> in …","Inserts a new resource with the given <code>value</code>. Will replace …","Returns the components of an <code>Entity</code> through <code>ComponentInfo</code>.","Returns an <code>Interned</code> value corresponding to <code>self</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Due to lifetime limitations of the <code>Deref</code> trait, this …","Consume <code>self</code> and return a mutable reference to the …","Consume <code>self</code> and return a mutable reference to the …","Returns the reference wrapped by this type. The reference …","Consume <code>self</code> and return a mutable reference to the …","","","","","","","","","","","","","","Turns this value into its corresponding <code>System</code>.","Converts this instance to its associated <code>SystemSet</code> type.","Returns this entity’s <code>World</code>, consuming itself.","Returns <code>true</code> if this value was added after the system last …","","","","","","Returns <code>true</code> if the resource was added after the system …","Returns <code>true</code> if this system set is an <code>AnonymousSet</code>.","Returns <code>true</code> if this value was added or mutably …","","","","","","Returns <code>true</code> if the resource was added or mutably …","Checks if the query is empty for the given <code>World</code>, where …","Returns <code>true</code> if there are no query items.","Returns true if there are no events currently stored in …","Returns <code>true</code> if there are no events available to read.","Returns <code>true</code> if there are no events available to read.","Returns true if the system must be run exclusively.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return’s <code>true</code> if a resource of type <code>R</code> exists and was …","Return’s <code>true</code> if a resource of type <code>R</code> exists and was …","Returns true if the system is <code>Send</code>.","Returns an <code>Iterator</code> over the query results for the given …","Returns an <code>Iterator</code> over the read-only query items.","Iterates over the events this <code>EventReader</code> has not seen …","Iterates over the events this <code>RemovedComponents</code> has not …","Returns an iterator over all schedules. Iteration order is …","Returns an <code>Iterator</code> over all possible combinations of <code>K</code> …","Returns a <code>QueryCombinationIter</code> over all combinations of <code>K</code> …","Returns an <code>Iterator</code> over all possible combinations of <code>K</code> …","Returns a <code>QueryCombinationIter</code> over all combinations of <code>K</code> …","Returns an <code>Iterator</code> over all possible combinations of <code>K</code> …","Iterates over all possible combinations of <code>K</code> query items …","Iterates over events that happened since the last “update…","Returns an <code>Entity</code> iterator of current entities.","Returns a mutable iterator over all entities in the <code>World</code>.","","","Iterate through the <code>ComponentId</code>’s that will be ignored.","Returns an <code>Iterator</code> over the query items, with the actual …","Returns an <code>Iterator</code> over the query results for the given …","Returns an <code>Iterator</code> over the read-only query items …","Returns an <code>Iterator</code> over the read-only query items …","Returns an <code>Iterator</code> over the read-only query items …","Returns an iterator over the query items generated from an …","Returns an iterator over the query items generated from an …","Returns an <code>Iterator</code> over the query items generated from an …","Returns an <code>Iterator</code> over the query results for the given …","Returns an <code>Iterator</code> over the query items.","Returns an iterator over mutable references to all …","Returns an <code>Iterator</code> over the query results for the given …","Returns an <code>Iterator</code> over the query items.","Like <code>iter</code>, except also returning the <code>EventId</code> of the events.","Like <code>iter</code>, except also returning the <code>EventId</code> of the events.","","","","","","","When called from within an exclusive system (a <code>System</code> that …","Returns the change tick recording the time this data was …","","","","","","","Returns the number of events currently stored in the event …","Determines the number of events available to be read from …","Determines the number of removal events available to be …","Gets metadata indicating the location where the current …","Gets metadata indicating the location where the current …","Gets metadata indicating the location where the current …","Returns the read-only query items for the given array of …","Gets an <code>EntityRef</code> for multiple entities at once.","Gets mutable access to multiple entities at once.","Returns the query items for the given array of <code>Entity</code>.","Map <code>Ref</code> to a different type using <code>f</code>.","Pass the output of this system into the passed function <code>f</code>, …","Maps to an inner value by applying a function to the …","Maps to an inner value by applying a function to the …","Maps to an inner value by applying a function to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the system’s name.","Create a new <code>Ref</code> using provided values.","Creates a new change-detection enabled smart pointer. In …","Creates a new <code>QueryState</code> from a given <code>World</code> and inherits …","Constructs an empty <code>Schedule</code>.","Creates a new empty <code>World</code>.","Create a custom implementation of <code>ReflectComponent</code>.","Create a custom implementation of <code>ReflectResource</code>.","Constructs an empty <code>Schedules</code> with zero initial capacity.","Creates a new state with a specific value.","Returns a new <code>Commands</code> instance from a <code>CommandQueue</code> and a …","Update the current <code>QueryState</code> with information from the …","","","","","","","","","","","","","","","Returns a new <code>Commands</code> instance from a <code>CommandQueue</code> and an …","Gets an immutable reference to the non-send resource of …","Gets a mutable reference to the non-send resource of the …","Generates a <code>Condition</code> that inverses the result of passed …","Returns the index of the oldest event stored in the event …","Oldest id still in the events buffer.","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","","Returns a new run condition that returns <code>true</code> if either …","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 2nd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 2nd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 2nd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 2nd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 2nd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 2nd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 3rd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 3rd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 3rd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 3rd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 3rd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 4th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 4th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 4th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 4th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 5th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 5th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 5th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 6th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 6th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 7th parameter in this <code>ParamSet</code>…","Returns a parallel iterator over the query results for the …","Returns a parallel iterator over the query results for the …","Returns a parallel iterator over the query results for the …","Returns a parallel iterator over the query results for the …","","Pass the output of this system <code>A</code> into a second system <code>B</code>, …","Prints the names of the components and resources with <code>info</code>","Returns <code>QueryState</code> for the given <code>WorldQuery</code>, which is used …","Returns <code>QueryState</code> for the given filtered <code>WorldQuery</code>, …","Iterates over the events this <code>EventReader</code> has not seen …","Iterates over the events this <code>RemovedComponents</code> has not …","Reads the current change tick of this world.","Like <code>read</code>, except also returning the <code>EventId</code> of the events.","Like <code>read</code>, except also returning the <code>EventId</code> of the events.","Fetch underlying <code>ManualEventReader</code>.","Fetch underlying <code>ManualEventReader</code> mutably.","Destructures to get a mutable reference to the …","Returns a <code>Mut&lt;&gt;</code> with a smaller lifetime. This is useful if …","Returns a <code>Mut&lt;&gt;</code> with a smaller lifetime. This is useful if …","Returns a <code>Mut&lt;&gt;</code> with a smaller lifetime. This is useful if …","Returns a new instance with a shorter lifetime. This is …","","","Gets the value of this <code>Component</code> type from the entity as a …","Gets the value of this <code>Resource</code> type from the world as a …","","","","","","","","","Gets the value of this <code>Component</code> type from the entity as a …","Gets the value of this <code>Resource</code> type from the world as a …","","","","","","","","","","","","","","","","","","","","","Safety","Safety","Similar to <code>Self::register_system</code>, but allows passing in a …","Registers a system and returns a <code>SystemId</code> so it can later …","Removes any components in the <code>Bundle</code> from the entity.","Removes this <code>Component</code> type from the entity. Does nothing …","Removes this <code>Resource</code> type from the world. Does nothing if …","Removes the schedule corresponding to the <code>label</code> from the …","Removes the (schedule, label) pair corresponding to the …","Removes the resource of a given type, if it exists. …","Removes a <code>!Send</code> resource from the world and returns it, if …","Removes the resource of a given type and returns it, if it …","Pushes a <code>Command</code> to the queue for removing a <code>Resource</code> from …","Removes the resource of a given type, if it exists. …","Removes a registered system and returns the system, if it …","Returns an iterator of entities that had components of …","Retrieves this world’s <code>RemovedComponentEvents</code> collection","Returns an iterator of entities that had components with …","Overwrites this smart pointer with the given value, if and …","Gets a reference to the resource of the given type","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Gets a mutable reference to the resource of the given type","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Temporarily removes the requested resource from this <code>World</code>…","Executes this system once. See <code>System::run</code> or …","Runs all systems in this schedule on the <code>world</code>, using its …","Runs the system with the given input in the world.","Run the systems only if the <code>Condition</code> is <code>true</code>.","Run the systems in this set(s) only if the <code>Condition</code> is …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Runs this system with the given input in the world.","Runs the <code>Schedule</code> associated with the <code>label</code> a single time.","Run stored systems by their <code>SystemId</code>. Before running a …","Runs the system corresponding to the given <code>SystemId</code>. …","","Runs the system with the given input in the world. Unlike …","Temporarily removes the schedule associated with <code>label</code> …","“Sends” an <code>event</code> by writing it to the current event …","Sends an <code>event</code>, which can later be read by <code>EventReader</code>s.","Sends a list of <code>events</code> all at once, which can later be …","Sends the default value of the event. Useful when the …","Sends the default value of the event. Useful when the …","Sends an <code>Event</code>.","Sends a batch of <code>Event</code>s from an iterator.","Sends the default value of the <code>Event</code> of type <code>E</code>.","","","","Tentatively set a planned state transition to <code>Some(state)</code>.","","Set whether the schedule applies deferred system buffers …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Changes miscellaneous build settings.","Flags this value as having been changed.","","","","Sets the schedule’s execution strategy.","Overwrites this smart pointer with the given value, if and …","Manually sets the change tick recording the time when this …","","","","Overwrites the tick indicating the last time this system …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a single immutable query result when there is …","Returns a single read-only query item when there is …","Returns a single mutable query result when there is …","Returns a single query item when there is exactly one …","","Spawns a new <code>Entity</code> with a given <code>Bundle</code> of components and …","Pushes a <code>Command</code> to the queue for creating a new entity …","Spawns a batch of entities with the same component <code>Bundle</code> …","Pushes a <code>Command</code> to the queue for creating entities with a …","Spawns a new <code>Entity</code> and returns a corresponding …","Pushes a <code>Command</code> to the queue for creating a new empty …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Retrieves this world’s <code>Storages</code> collection.","Returns <code>Some</code> if this system set is a <code>SystemTypeSet</code>.","Removes all components in the <code>Bundle</code> from the entity and …","The state being entered.","Convert to a form convenient for passing outside of rust.","","","","","","","","","Returns another <code>Query</code> from this that fetches the read-only …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to run the <code>Schedule</code> associated with the <code>label</code> a …","Temporarily removes the schedule associated with <code>label</code> …","Returns the <code>TypeId</code> of the underlying system type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","System adapter that unwraps the <code>Ok</code> variant of a <code>Result</code>. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Swaps the event buffers and clears the oldest event …","Update the system’s archetype component <code>Access</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the state’s internal view of the <code>World</code>’s …","Updates the state’s internal view of the <code>world</code>’s …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Swaps the event buffers and drains the oldest event …","Updates the internal entity location to match the current …","Panics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","System adapter that utilizes the <code>bevy_utils::tracing::warn!</code>…","Gets read-only access to the world that the current entity …","Returns this entity’s world.","Gives mutable access to this entity’s <code>World</code> in a …","Used as a type argument to <code>Ptr</code>, <code>PtrMut</code> and <code>OwningPtr</code> to …","Trait that is only implemented for <code>Aligned</code> and <code>Unaligned</code> …","Type-erased Box-like pointer to some unknown type chosen …","Type-erased borrow of some unknown type chosen when …","Type-erased mutable borrow of some unknown type chosen …","Conceptually equivalent to <code>&amp;&#39;a [T]</code> but with length …","Used as a type argument to <code>Ptr</code>, <code>PtrMut</code> and <code>OwningPtr</code> to …","Extension trait for helper methods on <code>UnsafeCell</code>","","","","","","","","","","","","","Gets a mutable pointer from this owned pointer.","Gets the underlying pointer, erasing the associated …","Gets the underlying pointer, erasing the associated …","Gets the underlying pointer, erasing the associated …","Gets an immutable reference from this mutable reference","Gets an immutable pointer from this owned pointer.","Transforms this <code>Ptr</code> into an <code>PtrMut</code>","","","","","","","","","","","","","Calculates the offset from a pointer (convenience for …","Calculates the offset from a pointer (convenience for …","Calculates the offset from a pointer (convenience for …","Calculates the offset from a pointer. As the pointer is …","Calculates the offset from a pointer. As the pointer is …","Calculates the offset from a pointer. As the pointer is …","","","","","","","","","","","Creates a dangling pointer with specified alignment. See …","Safety","","","","","","Transforms this <code>Ptr&lt;T&gt;</code> into a <code>&amp;T</code> with the same lifetime","","Safety","Transforms this <code>PtrMut&lt;T&gt;</code> into a <code>&amp;mut T</code> with the same …","","","","","","","","","","","","","","","","","","","","","","","","","Consumes the <code>OwningPtr</code> to drop the underlying data of type …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Indexes the slice without doing bounds checks","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Consumes a value and creates an <code>OwningPtr</code> to it while …","Creates a new instance from a raw pointer.","Creates a new instance from a raw pointer.","Creates a new instance from a raw pointer.","Transforms this <code>PtrMut</code> into an <code>OwningPtr</code>","Returns a copy of the contained value.","Consumes the <code>OwningPtr</code> to obtain ownership of the …","Consumes the <code>OwningPtr</code> to obtain ownership of the …","Gets a <code>PtrMut</code> from this with a smaller lifetime.","","","","","","","","","","","","","","","","","Removes the alignment requirement of this pointer","Removes the alignment requirement of this pointer","Removes the alignment requirement of this pointer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tracks read and write access to specific elements in a …","A filter on a component that only retains results added …","The <code>Entity</code> was requested mutably more than once.","The <code>AnyOf</code> query parameter fetches entities with any of the …","A marker trait to indicate that the filter works at an …","Dictates how a parallel query chunks up large …","A filter on a component that only retains results added or …","Per archetype/table state used by this <code>WorldQuery</code> to fetch …","An <code>Access</code> that has been filtered to include and exclude …","A collection of <code>FilteredAccess</code> instances.","Returns a bool that describes if an entity has the …","Returns true if (and only if) this Fetch relies strictly …","Returns true if (and only if) every table of every …","The item returned by this <code>WorldQuery</code>","The given <code>Entity</code> does not have the requested component.","The <code>Query</code> does not have read access to the requested …","The <code>Query</code> does not have write access to the requested …","Multiple entities fit the query.","No entity fits the query.","The given <code>Entity</code> does not exist.","The requested <code>Entity</code> does not exist.","<code>WorldQuery</code> used to nullify queries by turning <code>Query&lt;Q&gt;</code> …","A filter that tests if any of the given filters apply.","An iterator over <code>K</code>-sized combinations of query items …","An error that occurs when retrieving a specific <code>Entity</code>’s …","The given <code>Entity</code>’s components do not match the query.","An error that occurs when retrieving a specific <code>Entity</code>’s …","The item type returned when a <code>WorldQuery</code> is iterated over","An <code>Iterator</code> over query results of a <code>Query</code>.","An <code>Iterator</code> over the query items generated from an …","A parallel iterator over query results of a <code>Query</code>.","An error that occurs when evaluating a <code>Query</code> or <code>QueryState</code> …","Provides scoped access to a <code>World</code> state according to a …","The read-only variant of the item type returned when a …","The read-only variant of this <code>WorldQuery</code>, which satisfies …","A world query that is read only.","State used to construct a <code>Self::Fetch</code>. This will be cached …","Filter that selects entities with a component <code>T</code>.","Filter that selects entities without a component <code>T</code>.","Types that can be fetched from a <code>World</code> using a <code>Query</code>.","Implement <code>WorldQuery</code> to use a struct as a parameter in a …","Returns a reference to the underlying unfiltered access.","Returns a mutable reference to the underlying unfiltered …","Adds the filtered access to the set.","Adds access to the element given by <code>index</code>.","Adds access to the element given by <code>index</code>.","Adds exclusive access to the element given by <code>index</code>.","Adds exclusive access to the element given by <code>index</code>.","Adds a <code>With</code> filter: corresponds to a conjunction (AND) …","Adds a <code>Without</code> filter: corresponds to a conjunction (AND) …","Appends an array of filters: corresponds to a disjunction …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The upper and lower limits for how large a batch of …","Configures the number of batches to assign to each thread …","The number of batches per thread in the <code>ComputeTaskPool</code>. …","Changes the batching strategy used when iterating.","","","","","","","","","","","","","","","","","","","","","","","","","Removes all accesses.","Removes all accesses stored in this set.","","","","","","","","","","","","","","","","Returns a reference to the unfiltered access of the entire …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds all access from <code>other</code>.","Adds all access and filters from <code>other</code>.","Adds all of the accesses from the passed set to <code>self</code>.","Adds all of the accesses from <code>other</code> to <code>self</code>.","Fetch <code>Self::Item</code> for either the given <code>entity</code> in the …","","Get next result from the query","Get next combination of queried components","Safety","Declares a batching strategy with a fixed batch size.","","","","","","","","","","Runs <code>func</code> on each query result in parallel.","Runs <code>func</code> on each query result in parallel.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Returns a vector of elements that the access and <code>other</code> …","Returns a vector of elements that this and <code>other</code> cannot …","Returns a vector of elements that this set and <code>other</code> …","Returns a vector of elements that this set and <code>other</code> …","Increases the set capacity to the specified amount.","Returns <code>true</code> if this can access anything.","Returns <code>true</code> if this accesses anything mutably.","Returns <code>true</code> if this can access the element given by <code>index</code>.","Returns <code>true</code> if this has access to all indexed elements …","Returns <code>true</code> if this can exclusively access the element …","Returns <code>true</code> if this has write access to all indexed …","","","","","","","","","","","","","Creates a new instance of this fetch.","","Creates and initializes a <code>State</code> for this <code>WorldQuery</code> type.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the access and <code>other</code> can be active at the …","Returns <code>true</code> if this and <code>other</code> can be active at the same …","Returns <code>true</code> if this and <code>other</code> can be active at the same …","","","","","","","","","","","","","","Returns <code>true</code> if this query matches a set of components. …","","Configures the maximum allowed batch size of this instance.","Configures the minimum allowed batch size of this instance.","Creates an empty <code>Access</code> collection.","Creates a new unconstrained default batching strategy.","","","","Sets this as having access to all indexed elements (i.e. …","Sets the underlying unfiltered access as having access to …","Returns the indices of the elements this has non-exclusive …","Returns the indices of the elements this has access to.","Adjusts internal state to account for the next <code>Archetype</code>. …","","Adjusts internal state to account for the next <code>Table</code>. This …","","This function manually implements subtyping for the query …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","For the given <code>archetype</code>, adds any component accessed used …","","Adds any component accesses used by this <code>WorldQuery</code> to …","","","","","","","","","","","","","","Sets this as having mutable access to all indexed elements …","Sets the underlying unfiltered access as having mutable …","Returns the indices of the elements this has exclusive …","A <code>Resource</code> storing <code>TypeRegistry</code> for type registrations …","A struct used to operate on reflected <code>Bundle</code> of a type.","The raw function pointers needed to make up a <code>ReflectBundle</code>…","An extension trait for <code>EntityCommands</code> for reflection …","A struct used to operate on reflected <code>Component</code> of a type.","The raw function pointers needed to make up a …","For a specific type of component, this maps any fields …","A struct used to operate on reflected <code>Resource</code> of a type.","The raw function pointers needed to make up a …","Uses reflection to set the value of this <code>Bundle</code> type in …","Function pointer implementing <code>ReflectBundle::apply()</code>.","Function pointer implementing <code>ReflectComponent::apply()</code>.","Function pointer implementing <code>ReflectResource::apply()</code>.","Uses reflection to set the value of this <code>Bundle</code> type in …","Function pointer implementing …","Function pointer implementing …","Function pointer implementing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Function pointer implementing <code>ReflectComponent::contains()</code>.","Function pointer implementing <code>ReflectComponent::copy()</code>.","Function pointer implementing <code>ReflectResource::copy()</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","The underlying function pointers implementing methods on …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Constructs default reflected <code>Bundle</code> from world using …","Function pointer implementing <code>ReflectBundle::from_world()</code>.","Function pointer implementing …","","","","","","Insert a reflected <code>Bundle</code> into the entity like <code>insert()</code>.","Function pointer implementing <code>ReflectBundle::insert()</code>.","Function pointer implementing <code>ReflectComponent::insert()</code>.","Function pointer implementing <code>ReflectResource::insert()</code>.","Adds the given boxed reflect component to the entity using …","Same as <code>insert_reflect</code>, but using the <code>T</code> resource as type …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","A general method for applying <code>MapEntities</code> behavior to all …","A general method for applying <code>MapEntities</code> behavior to …","Create a custom implementation of <code>ReflectBundle</code>.","Get the default set of <code>ReflectBundleFns</code> for a specific …","Get the default set of <code>ReflectComponentFns</code> for a specific …","Get the default set of <code>ReflectResourceFns</code> for a specific …","Function pointer implementing <code>ReflectComponent::reflect()</code>.","Function pointer implementing <code>ReflectResource::reflect()</code>.","Function pointer implementing …","Function pointer implementing …","Function pointer implementing …","Removes this <code>Bundle</code> type from the entity. Does nothing if …","Function pointer implementing <code>ReflectBundle::remove()</code>.","Function pointer implementing <code>ReflectComponent::remove()</code>.","Function pointer implementing <code>ReflectResource::remove()</code>.","Removes from the entity the component with the given type …","Same as <code>remove_reflect</code>, but using the <code>T</code> resource as type …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrapper around <code>Entity</code> for <code>RemovedComponents</code>. Internally, …","Stores the <code>RemovedComponents</code> event buffers for all types …","Wrapper around a <code>ManualEventReader&lt;RemovedComponentEntity&gt;</code> …","A <code>SystemParam</code> that grants access to the entities that had …","Iterator over entities that had a specific component …","Iterator over entities that had a specific component …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Gets the event storage for a given component.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Creates an empty storage buffer for component removal …","Sends a removal event for the specified component.","","","","","","","","","","","","","","","","","","","","For each type of component, swaps the event buffers and …","","","","Systems with conflicting access have indeterminate run …","Combines the outputs of two systems using the <code>&amp;&amp;</code> operator.","A <code>SystemSet</code> implicitly created when using …","A type-erased run condition stored in a <code>Box</code>.","A system that determines if one or more scheduled systems …","Configuration for a tuple of nested <code>Configs</code> instances.","Configuration for a tuple of nested <code>Configs</code> instances.","Configuration for a tuple of nested <code>Configs</code> instances.","Tried to order a system (set) relative to a system set it …","A directed acyclic graph structure.","The dependency graph contains a cycle.","A system (set) has been told to run before itself.","An object safe version of <code>Eq</code>. This trait is automatically …","Occurrences are logged and result in errors.","Specifies how a <code>Schedule</code> will be run.","The hierarchy of system sets contains a cycle.","A system set contains itself.","The hierarchy of system sets contains redundant edges.","Occurrences are completely ignored.","A shorthand for <code>Interned&lt;dyn ScheduleLabel&gt;</code>.","A shorthand for <code>Interned&lt;dyn SystemSet&gt;</code>.","Types that can convert into a <code>SystemConfigs</code>.","Types that can be converted into a <code>SystemSet</code>.","Types that can convert into a <code>SystemSetConfigs</code>.","Specifies how schedule construction should respond to …","New-typed <code>ThreadExecutor</code> <code>Resource</code> that is used to run …","Runs the schedule using a thread pool. Non-conflicting …","Runs the schedule using a thread pool. Non-conflicting …","The next state of <code>State&lt;S&gt;</code>.","Stores configuration for a single generic node.","Configuration for a single node.","Configuration for a single node.","Configuration for a single node.","A collections of generic <code>NodeConfig</code>s.","Unique identifier for a system or system set stored in a …","Invokes <code>Not</code> with the output of another system.","The label of a <code>Schedule</code> that runs whenever <code>State&lt;S&gt;</code> enters …","The label of a <code>Schedule</code> that runs whenever <code>State&lt;S&gt;</code> exits …","The label of a <code>Schedule</code> that <strong>only</strong> runs whenever <code>State&lt;S&gt;</code> …","Combines the outputs of two systems using the <code>||</code> operator.","A collection of systems, and the metadata and executor …","Category of errors encountered during schedule …","Specifies miscellaneous settings for schedule construction.","Metadata for a <code>Schedule</code>.","A strongly-typed class of labels used to identify an […","Derive macro generating an impl of the trait <code>ScheduleLabel</code>.","Resource that stores <code>Schedule</code>s mapped to <code>ScheduleLabel</code>s.","Identifier for a system set.","The type of <code>SystemSet</code> this instance converts into.","Tried to order system sets that share systems.","Like <code>SingleThreaded</code> but calls <code>apply_deferred</code> immediately …","A variant of <code>SingleThreadedExecutor</code> that calls …","Runs the schedule using a single thread.","Runs the schedule using a single thread.","A finite-state machine whose transitions have associated …","Types that can define world-wide states in a finite-state …","","Identifier for a system.","Stores configuration for a single system.","A collection of <code>SystemConfig</code>.","Holds systems and conditions of a <code>Schedule</code> sorted in …","Types that identify logical groups of systems.","Derive macro generating an impl of the trait <code>SystemSet</code>.","A <code>SystemSet</code> with scheduling metadata.","A collection of <code>SystemSetConfig</code>.","A <code>SystemSet</code> grouping instances of the same function.","Tried to order a system (set) relative to all instances of …","Tried to run a schedule before all of its systems have …","Occurrences are logged only.","","","Run after all systems in <code>set</code>.","Run after all systems in <code>set</code>.","Determines whether the presence of ambiguities (systems …","","","Suppress warnings and errors that would result from these …","Suppress warnings and errors that would result from …","","","Suppress warnings and errors that would result from these …","Suppress warnings and errors that would result from …","Returns a new run condition that only returns <code>true</code> if both …","Instructs the executor to call <code>System::apply_deferred</code> on …","If a new state is queued in <code>NextState&lt;S&gt;</code>, this system:","Casts the type to <code>dyn Any</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts this value to a form where it can be compared with …","Casts this value to a form where it can be compared with …","","","","","","","","Run before all systems in <code>set</code>.","Run before all systems in <code>set</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build a <code>SystemSchedule</code> optimized for scheduler access from …","A cached topological ordering of the graph.","","","Treat this collection as a sequence of systems.","Treat this collection as a sequence of system sets.","","","","","","","","","","","","","","","","","","","","","","","A collection of run conditions that may be useful in any …","","Returns the list of systems that conflict with each other, …","convert conflicts to human readable format","","","","","","","","","","Returns the <code>Dag</code> of the dependencies in the schedule.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add a run condition to each contained system.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clones this <code>ScheduleLabel</code>.","Clones this <code>SystemSet</code>.","","","This method tests for <code>self</code> and <code>other</code> values to be equal.","","","","","Feeds this value into the given <code>Hasher</code>.","Feeds this value into the given <code>Hasher</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The state being exited.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set at the given <code>NodeId</code>, if it exists.","Returns the system at the given <code>NodeId</code>, if it exists.","The directed graph of the stored systems, connected by …","","","","","Returns the <code>Dag</code> of the hierarchy.","Determines whether the presence of redundant edges in the …","List of <code>ComponentId</code>s to ignore when reporting system order …","","","Add these systems to the provided <code>set</code>.","Add these system sets to the provided <code>set</code>.","Adds a new boxed system set to the systems.","","","","","","","","","","","","","","","","","Initializes any newly-added systems and conditions by …","Returns an <code>Interned</code> value corresponding to <code>self</code>.","Returns an <code>Interned</code> value corresponding to <code>self</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts this instance to its associated <code>SystemSet</code> type.","","","Returns <code>true</code> if this system set is an <code>AnonymousSet</code>.","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the identified node is a system set.","Returns <code>true</code> if the identified node is a system.","","Creates a new multi-threaded executor for use with a …","Creates a new executor that can be used to run systems on …","Creates a new simple executor for use in a <code>Schedule</code>. This …","Creates a new single-threaded executor for use in a …","Creates an empty <code>SystemSchedule</code>.","Creates an empty <code>ScheduleGraph</code> with default settings.","Default build settings. See the field-level documentation …","Returns a new run condition that returns <code>true</code> if either …","","","","If set to true, report all system sets the conflicting …","Run the enter schedule (if it exists) for the current …","","","Run the systems only if the <code>Condition</code> is <code>true</code>.","Run the systems in this set(s) only if the <code>Condition</code> is …","Adds a new boxed run condition to the systems.","Returns the set at the given <code>NodeId</code>.","Returns the system at the given <code>NodeId</code>.","Returns an iterator over all system sets in this schedule.","","Returns <code>Some</code> if this system set is a <code>SystemTypeSet</code>.","Returns an iterator over all systems in this schedule.","The state being entered.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If set to true, node names will be shortened instead of …","","","","","","","","","","","","","","","","","If <code>true</code>, adds <code>before -&gt; after</code> ordering constraints between …","Run conditions applied to everything in the tuple.","Configuration for each element of the tuple.","If <code>true</code>, adds <code>before -&gt; after</code> ordering constraints between …","Run conditions applied to everything in the tuple.","Configuration for each element of the tuple.","If <code>true</code>, adds <code>before -&gt; after</code> ordering constraints between …","Run conditions applied to everything in the tuple.","Configuration for each element of the tuple.","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code> that inverses the result of passed …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","A type-erased contiguous container for data of a …","A sparse data structure of <code>Component</code>s.","The type-erased backing storage and metadata for a single …","The backing store for all <code>Resource</code>s stored in the <code>World</code>.","A data structure that blends dense and sparse storage","Represents something that can be stored in a <code>SparseSet</code> as …","A collection of <code>ComponentSparseSet</code> storages, indexed by …","The raw data stores of a <code>World</code>","A column-oriented structure-of-arrays based storage for …","An opaque unique ID for a <code>Table</code> within a <code>World</code>.","A opaque newtype for rows in <code>Table</code>s. Specifies a single …","A collection of <code>Table</code> storages, indexed by <code>TableId</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the total number of elements the <code>SparseSet</code> can …","Clears all resources.","Clears all of the elements from the sparse set.","Clears the column, removing all values.","","","","","","","Gets the number of components being stored in the table.","Returns <code>true</code> if the sparse set has a component value for …","Returns <code>true</code> if the sparse set contains a value for <code>index</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>TableId</code> of the <code>Table</code> without any components.","Fetches a read-only slice of the entities stored within …","Gets the maximum number of entities the table can …","Gets the number of entities currently being stored in the …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Fetches a <code>Table</code> by its <code>TableId</code>.","Gets read-only access to a resource, if it exists.","Returns a reference to the entity’s component value.","Returns a reference to the value for <code>index</code>.","Gets a reference to the <code>ComponentSparseSet</code> of a <code>ComponentId</code>…","Fetches a reference to the data and change detection ticks …","Returns a reference to the “added” tick of the entity…","Fetches the “added” change detection tick for the …","Fetches the “added” change detection tick for the …","Fetches the slice to the <code>Column</code>’s “added” change …","Returns a reference to the “changed” tick of the entity…","Fetches the “changed” change detection tick for the …","Fetches the “changed” change detection tick for the …","Fetches the slice to the <code>Column</code>’s “changed” change …","Fetches a read-only reference to the <code>Column</code> for a given …","Returns a reference to the resource, if it exists.","Fetches a read-only reference to the data at <code>row</code>.","Fetches a mutable reference to the data at <code>row</code>.","Fetches the data pointer to the first element of the <code>Column</code>…","Fetches the slice to the <code>Column</code>’s data cast to a given …","Fetches a read-only reference to the data at <code>row</code>. Unlike …","Returns a mutable reference to the value for <code>index</code>.","Returns a reference to the value for <code>index</code>, inserting one …","Creates a new instance of this type with the specified …","Returns a reference to the resource’s change ticks, if …","Returns a reference to the “added” and “changed” …","Fetches the change detection ticks for the value at <code>row</code>.","Fetches the change detection ticks for the value at <code>row</code>. …","Returns references to the entity’s component value and …","Checks if the table contains a <code>Column</code> for a given <code>Component</code>…","Gets the <code>ArchetypeComponentId</code> for the resource.","","Gets the underlying table index from the ID.","Gets the index of the row.","","Returns an iterator visiting all keys (indices) in …","","","","","","","","","","","","Inserts <code>value</code> at <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Checks if the <code>Table</code> is empty or not.","Returns true if this collection contains no <code>Table</code>s","Returns true if there are no resources stored in the <code>World</code>,","Returns <code>true</code> if the sparse set contains no component …","Returns <code>true</code> if the sparse set contains no elements.","Returns true if this collection contains no …","Checks if the column is empty. Returns <code>true</code> if there are …","","","","","","","","","","","","Returns true if the resource is populated.","Fetches the <code>Layout</code> for the underlying type.","Iterates over the <code>Column</code>s of the <code>Table</code>.","Iterates through all of the tables stored within in <code>TableId</code>…","Iterate over all resources that have been initialized, …","Returns an iterator visiting all key-value pairs in …","An Iterator visiting all (<code>ComponentId</code>, <code>ComponentSparseSet</code>) …","Returns an iterator visiting all key-value pairs in …","Returns the number of <code>Table</code>s this collection contains","The total number of resources stored in the <code>World</code>","Returns the number of component values in the sparse set.","Returns the number of elements in the sparse set.","Returns the number of <code>ComponentSparseSet</code>s this collection …","Gets the current number of elements stored in the column.","Creates a new <code>SparseSet</code>.","Creates a new <code>TableId</code>.","Creates a <code>TableRow</code>.","Backing storage for <code>!Send</code> resources.","Removes and returns the value for <code>index</code>.","Backing storage for resources.","Gets the sparse set index corresponding to this instance.","Backing storage for <code>SparseSet</code> components.","Backing storage for <code>Table</code> components.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator visiting all values in arbitrary order.","Returns an iterator visiting all values mutably in …","","","","","","","","","","","","Creates a new <code>SparseSet</code> with a specified initial capacity.","Customizes the behavior of an <code>AdapterSystem</code>","A <code>System</code> that takes the output of <code>S</code> and transforms it by …","A convenience type alias for a boxed <code>System</code> trait object.","A <code>System</code> defined by combining two other systems. The …","Customizes the behavior of a <code>CombinatorSystem</code>.","A <code>World</code> mutation.","Densely and efficiently stores a queue of heterogenous …","A <code>Command</code> queue to perform impactful changes to the <code>World</code>.","A <code>SystemParam</code> that stores a buffer which gets applied to …","A <code>Command</code> that despawns a specific entity. This will emit …","A <code>Command</code> which gets executed for a given <code>Entity</code>.","A list of commands that will be run to modify an entity.","A function system that runs with exclusive <code>World</code> access.","A parameter that can be used in an exclusive system (a …","A trait implemented for all exclusive system functions …","Shorthand way of accessing the associated type …","The <code>System</code> counter part of an ordinary function.","Wrapper type to mark a <code>SystemParam</code> as an input.","The input type for an <code>AdapterSystem</code>.","The input type for a <code>CombinatorSystem</code>.","The input type to this system. See <code>System::In</code>.","The input type to this system. See <code>System::In</code>.","The system’s input. See <code>In</code> for <code>FunctionSystem</code>s.","A <code>Command</code> that inserts a <code>Resource</code> into the world using a …","A <code>Command</code> that adds the components in a <code>Bundle</code> to an …","A <code>Command</code> that consumes an iterator to add a series of …","A <code>Command</code> that inserts a <code>Resource</code> into the world.","Conversion trait to turn something into a <code>System</code>.","The item type returned when constructing this system param.","The item type returned when constructing this system param.","A system local <code>SystemParam</code>.","<code>Command</code> to log the components of a given entity. See …","Shared borrow of a non-<code>Send</code> resource.","Unique borrow of a non-<code>Send</code> resource.","The output type for an <code>AdapterSystem</code>.","The output type for a <code>CombinatorSystem</code>.","The return type of this system. See <code>System::Out</code>.","The return type of this system. See <code>System::Out</code>.","The system’s output.","An alternative to <code>Commands</code> that can be used in parallel …","The <code>ExclusiveSystemParam</code>/s defined by this system’s <code>fn</code> …","The <code>SystemParam</code>/s used by this system to access the <code>World</code>.","A collection of potentially conflicting <code>SystemParam</code>s …","A <code>System</code> created by piping the output of the first system …","System parameter that provides selective access to the …","<code>System</code> types that do not modify the <code>World</code> when run. This …","A <code>SystemParam</code> that only reads a given <code>World</code>.","A system tried to run itself recursively.","An operation with stored systems failed.","A <code>Command</code> that removes components from an entity. For a …","A <code>Command</code> that removes the resource <code>R</code> from the world.","A system that has been removed from the registry. It …","Shared borrow of a <code>Resource</code>.","Unique mutable borrow of a <code>Resource</code>.","A type that can be inserted into a <code>World</code> as a singleton.","","The <code>Command</code> type for <code>World::run_system</code>.","Trait used to run a system immediately on a <code>World</code>.","A system tried to remove itself.","A <code>Command</code> that spawns a new entity and adds the components …","A <code>Command</code> that consumes an iterator of <code>Bundle</code>s to spawn a …","Used to store data which persists across invocations of a …","Used to store data which persists across invocations of a …","A helper for using system parameters in generic contexts","An ECS system that can be added to a <code>Schedule</code>","The type of <code>System</code> that this instance converts into.","Types that can be used with <code>Deferred&lt;T&gt;</code> in systems. This …","A <code>SystemParam</code> that reads the previous and current change …","An identifier for a registered system.","A system was run by id, but no system with that id was …","The metadata of a <code>System</code>.","Name of the system that corresponds to this …","A parameter that can be used in a <code>System</code>.","Implement <code>SystemParam</code> to use a struct as a parameter in a …","A trait implemented for all functions that can be used as …","Shorthand way of accessing the associated type …","Holds on to persistent state required to drive <code>SystemParam</code> …","A <code>Command</code> that attempts to add the components in a <code>Bundle</code> …","Turns an <code>EntityCommand</code> type into a <code>Command</code> type.","When used in an <code>AdapterSystem</code>, this function customizes …","A collection of common adapters for piping the result of a …","Pushes an <code>EntityCommand</code> to the queue, which will get …","Applies this command, causing it to mutate the provided …","Executes this command for the given <code>Entity</code>.","Applies any deferred mutations to the <code>World</code>.","","","","","","","","","","Applies all state queued up for <code>SystemParam</code> values. For …","Applies any deferred mutations stored in this <code>SystemParam</code>…","","Execute the queued <code>Command</code>s in the world. This clears the …","","","","","","Applies any <code>Deferred</code> system parameters (or other system …","","","","","Returns the system’s archetype component <code>Access</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ensure that a given function is a read-only system.","Ensure that a given function is a system.","Ensures that the provided system doesn’t with itself.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Bundle</code> containing the components that will be added to …","The <code>Bundle</code> containing the components that will be added to …","The <code>Bundle</code> of components that will be added to the …","The iterator that returns the <code>Bundle</code>s which will be added …","The iterator that returns each entity ID and corresponding …","Checks any <code>Tick</code>s stored on this system and wraps their …","","","","","Clone the combined system. The cloned instance must be …","","","","","","","","","","","","","","","","","","When used in a <code>CombinatorSystem</code>, this function customizes …","Returns the underlying <code>Commands</code>.","Returns the system’s component <code>Access</code>.","","","","","","","","","Returns the system’s default system sets.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Despawns the entity.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The entity to which the components will be added.","The entity to which the components will be added.","The entity that will be despawned.","The entity from which the components will be removed.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieve the <code>SystemParam</code> values. This can only be called …","Gets the tick indicating the last time this system ran.","","","","","Retrieve the <code>SystemParam</code> values. This can only be called …","Retrieve the mutable <code>SystemParam</code> values.  This will not …","Retrieve the mutable <code>SystemParam</code> values.","Creates a parameter to be passed into an …","Creates a parameter to be passed into a <code>SystemParamFunction</code>…","","","","","Retrieve the <code>SystemParam</code> values. This will not update …","","Returns the <code>Entity</code> id of the entity.","Creates a new instance of this param’s <code>State</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Registers any <code>World</code> access used by this <code>SystemParam</code> and …","","","","Initialize the system.","","","","","Is the system initialized? A system is initialized the …","Adds a <code>Bundle</code> of components to the entity.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the value of the parameter","Turns this value into its corresponding <code>System</code>.","","","","","Returns true if the system must be run exclusively.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the system is <code>Send</code>.","","","","","Returns true if the system is <code>Send</code>.","Returns the <code>World</code> change tick seen by the system the …","Contains type aliases for built-in <code>SystemParam</code>s with …","Logs the components of the entity at the info level.","Pass the output of this system into the passed function <code>f</code>, …","Returns <code>true</code> if <code>world_id</code> matches the <code>World</code> that was used …","Gets the metadata for this instance.","Returns the system’s name.","","","","","Returns the system’s name","Gets the name of the system.","Creates a new system that combines two inner systems.","Creates a <code>Command</code> which will insert a default created …","Creates a <code>Command</code> which will remove a <code>Resource</code> from the …","Creates a new <code>SystemState</code> with default state.","Creates a new <code>System</code> that uses <code>func</code> to adapt <code>system</code>, via …","Creates a <code>Command</code> which will remove the specified <code>Entity</code> …","Creates a new <code>Command</code> struct, which can be added to …","For the specified <code>Archetype</code>, registers the components …","","Pass the output of this system <code>A</code> into a second system <code>B</code>, …","Push a <code>Command</code> onto the queue.","Removes a <code>Bundle</code> of components from the entity.","","","The resource that will be added to the world.","Executes this system once. See <code>System::run</code>.","Executes this system once. See <code>System::run</code> or …","","","Runs the system with the given input in the world.","","Runs this system with the given input in the world.","Runs a system and applies its deferred parameters.","Runs a system with given input and applies its deferred …","Runs the system with the given input in the world. Unlike …","","","","","Overwrites the tick indicating the last time this system …","","","","","Sets the system to be not <code>Send</code>.","The system removed from the storage.","Returns the current <code>World</code> change tick seen by the system.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to add a <code>Bundle</code> of components to the entity.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>TypeId</code> of the underlying system type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the system’s archetype component <code>Access</code>.","","","","","Updates the state’s internal view of the <code>World</code>’s …","Updates the state’s internal view of the <code>world</code>’s …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a <code>Command</code> which executes this <code>EntityCommand</code> for …","System adapter that utilizes the …","System adapter that utilizes the …","System adapter that ignores the output of the previous …","System adapter that utilizes the <code>bevy_utils::tracing::info!</code>…","Converts a regular function into a system adapter.","System adapter that unwraps the <code>Ok</code> variant of a <code>Result</code>. …","System adapter that utilizes the <code>bevy_utils::tracing::warn!</code>…","A shorthand for writing <code>&amp;&#39;static T</code>.","<code>Commands</code> with <code>&#39;static</code> lifetimes.","A <code>Query</code> with <code>&#39;static</code> lifetimes.","A <code>Res</code> with <code>&#39;static</code> lifetimes.","A <code>ResMut</code> with <code>&#39;static</code> lifetimes.","A shorthand for writing <code>&amp;&#39;static mut T</code>.","The (arbitrarily chosen) minimum number of world tick …","Provides mutable access to a single entity and all of its …","A read-only reference to a particular <code>Entity</code> and all of …","A mutable reference to a particular <code>Entity</code>, and the entire …","Creates an instance of the type this trait is implemented …","Unique mutable borrow of an entity’s component","Shared borrow of an entity’s component with access to …","An iterator that spawns a series of entities and returns …","Stores and exposes operations on entities, components, …","A read-only borrow of some data stored in a <code>World</code>. This …","A mutable borrow of some data stored in a <code>World</code>. This type …","Exposes safe mutable access to multiple resources at a …","A unique identifier for a <code>World</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains error types returned by bevy’s schedule.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates <code>Self</code> using data from the given <code>World</code>.","","Gets an immutable reference to the non-send resource of …","Gets a mutable reference to the non-send resource of the …","","Gets a reference to the resource of the given type","Gets a mutable reference to the resource of the given type","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Create a new, unique <code>WorldId</code>. Returns <code>None</code> if the supply …","","Gets an immutable reference to the non-send resource of …","Gets a mutable reference to the non-send resource of the …","Gets a reference to the resource of the given type","Gets a mutable reference to the resource of the given type","Sends an <code>Event</code>.","Sends a batch of <code>Event</code>s from an iterator.","Sends the default value of the <code>Event</code> of type <code>E</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains types that allow disjoint mutable access to a …","","","","","","","","","","","The error type returned by <code>World::try_run_schedule</code> if the …","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","A interior-mutable reference to a particular <code>Entity</code> and …","Variant of the <code>World</code> where resource and component accesses …","Returns the archetype that the current entity belongs to.","Retrieves this world’s <code>Archetypes</code> collection.","","","","","","","","","Retrieves this world’s <code>Bundles</code> collection.","Gets the current change tick of this world.","","","","","","","Retrieves this world’s <code>Components</code> collection.","Returns <code>true</code> if the current entity has a component of type …","Returns <code>true</code> if the current entity has a component …","Returns <code>true</code> if the current entity has a component with …","","","","","","","","","","","Retrieves this world’s <code>Entities</code> collection.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Safety","Gets the component of the given <code>ComponentId</code> from the …","Retrieves the change ticks for the given component. This …","Retrieves the change ticks for the given <code>ComponentId</code>. This …","Retrieves an <code>UnsafeEntityCell</code> that exposes read and write …","Safety","Retrieves a mutable untyped reference to the given <code>entity</code>…","Gets a reference to the non-send resource of the given …","Gets a <code>!Send</code> resource to the resource with the id …","Gets a mutable reference to the non-send resource of the …","Gets a <code>!Send</code> resource to the resource with the id …","Safety","Gets a reference to the resource of the given type if it …","Gets a pointer to the resource with the id <code>ComponentId</code> if …","Gets a mutable reference to the resource of the given type …","Gets a pointer to the resource with the id <code>ComponentId</code> if …","Retrieves this world’s unique ID.","Returns the ID of the current entity.","Increments the world’s current change tick and returns …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns the <code>Tick</code> indicating the last time that …","Gets metadata indicating the location where the current …","Retrieves this world’s collection of removed components.","Provides unchecked access to the internal data stores of …","","","","","","","","","","","","","","","","","Gets a reference to the <code>&amp;World</code> this <code>UnsafeWorldCell</code> …","Gets the world that the current entity belongs to.","Gets a reference to the <code>World</code> this <code>UnsafeWorldCell</code> belong …","Gets a mutable reference to the <code>World</code> this <code>UnsafeWorldCell</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","RGBA colors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","return a copy as raw struct for gpu interactions","accounts for scale factor to convert this to device area","accounts for scale factor to convert this to interface area","","","","","","","","","","","","","","","","","","","","Layer represents what plane this entity resides on. Used …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Raw position for interacting with C","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","returns a copy as a raw position","useful for converting to a device position accounting for …","converts to interface context accounting for scale factor","returns a copy as just a number.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","returns true if the position resides in the section","","","","","","","","","","","","Returns the argument unchanged.","","Can be instantiated with specific points","","","","","returns an Option of the overlap between the sections","Calls <code>U::from(self)</code>.","","","","","returns true if section overlaps the other","returns if any port of this section is touching the other","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A key string that corresponds to the character typed by …","","Contains the text representation of the dead-key when …","","","","","","","","","","","","","","","A simple (unparameterised) action","","","","","","","This variant is used when the key cannot be translated to …eturns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrapper around a bevy_ecs::World","State of a Job","Exit hook","Idle hook","","Extensible container + task runner","SyncPoint for Job Idle behaviour","","Wrapper around a bevy_ecs::Schedule","","","","","","","","","","","","","","System for attempting to idle at the beginning of each loop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","how long it has been since the last frame","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","get the current time as a marker to now","","return the time since a marker","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adapter to interface with soft-input (VirtualKeyboard)","VirtualKeyboard Type for opening different pads on …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Allows the use of <code>AddressMode::ClampToBorder</code> with a border …","Allows the use of <code>AddressMode::ClampToBorder</code> with a border …","Enable writes to all channels.","Whether wgpu should expose adapters that run on top of …","Enable alpha channel writes","Blend mode that does standard alpha blending with …","Supports samplers with anisotropic filtering. Note this isn…","A ray-tracing acceleration structure binding.","Handle to a physical graphics and/or compute device.","Information about an adapter.","Src + Dst","How edges should be handled in texture addressing.","Depth, Stencil, and Color.","Function always passes","block compressed texture. 16 bytes per block.","ASTC block dimensions","ASTC RGBA channel","Chooses either <code>Opaque</code> or <code>Inherit</code> automatically，depending …","Chooses Immediate -&gt; Mailbox -&gt; Fifo (on web) based on …","Chooses FifoRelaxed -&gt; Fifo based on availability.","No explicit minor version is requested, the driver …","10x10 block compressed texture. 16 bytes per block (1.28 …","10x5 block compressed texture. 16 bytes per block (2.56 …","10x6 block compressed texture. 16 bytes per block (2.13 …","10x8 block compressed texture. 16 bytes per block (1.6 …","12x10 block compressed texture. 16 bytes per block (1.07 …","12x12 block compressed texture. 16 bytes per block (0.89 …","4x4 block compressed texture. 16 bytes per block (8 …","5x4 block compressed texture. 16 bytes per block (6.4 …","5x5 block compressed texture. 16 bytes per block (5.12 …","6x5 block compressed texture. 16 bytes per block (4.27 …","6x6 block compressed texture. 16 bytes per block (3.56 …","8x5 block compressed texture. 16 bytes per block (3.2 …","8x6 block compressed texture. 16 bytes per block (2.67 …","8x8 block compressed texture. 16 bytes per block (2 …","Supports non-zero <code>base_vertex</code> parameter to direct indexed …","Allows the [<code>wgpu::TextureUsages::STORAGE_BINDING</code>] usage on …","","If not present, the texture can’t be blended into the …","Enable blue channel writes","","Supported when targeting the web through webassembly with …","Supports buffer bindings with sizes that aren’t a …","Allows the user to create arrays of buffers in shaders:","Back face","Backends supported by wgpu.","Represents the backends that wgpu will use.","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Blue, green, red, and alpha channels. 8 bit integer per …","Blue, green, red, and alpha channels. 8 bit integer per …","Handle to a binding group.","Describes a group of bindings and the resources to be …","An element of a <code>BindGroupDescriptor</code>, consisting of a …","Handle to a binding group layout.","Describes a <code>BindGroupLayout</code>.","Describes a single binding inside a bind group.","Resource that can be bound to a pipeline.","Specific type of a binding.","Describes a blend component of a <code>BlendState</code>.","Alpha blend factor.","Alpha blend operation.","Describe the blend state of a render pipeline, within …","WebGPU in the browser","Handle to a GPU-accessible buffer.","Binding is backed by a buffer.","A buffer binding.","Integral type used for buffer offsets.","Binding is backed by an array of buffers.","Error occurred when trying to async map a buffer.","Describes the segment of a buffer to bind.","Specific type of a buffer binding.","Describes a <code>Buffer</code>.","Integral type used for buffer slice sizes.","Slice into a <code>Buffer</code>.","Different ways that you can use a buffer.","Read only view into a mapped buffer.","Write only view into mapped buffer.","Enables clear to zero for textures.","Amount of times the clipper is invoked. This is also the …","Amount of primitives that are not culled by the clipper. …","Enable red, green, and blue channel writes","Supports comparison samplers.","Binding is visible from the compute shader of a compute …","The device supports compiling and using compute shaders.","Amount of times a compute shader is invoked. This will be …","Allows the user to set a …","Buffer to buffer copy as well as buffer clear offsets and …","Buffer-Texture copies must have <code>bytes_per_row</code> aligned to …","Allow a buffer to be the destination buffer for a […","Allows a texture to be the destination in a  […","Allow a buffer to be the source buffer for a […","Allows a texture to be the source in a […","Supports textures that are cube arrays.","Triangles with vertices in counter clockwise order are …","Clamp the value to the border of the texture Requires …","Clamp the value to the edge of the texture","Loads the specified value for this attachment into the …","RGBA double precision color.","Describes the color state of a render pipeline.","Color write mask. Disabled color channels will not be …","Handle to a command buffer on the GPU.","Describes a <code>CommandBuffer</code>.","Encodes a series of GPU operations.","Describes a <code>CommandEncoder</code>.","Comparison function used for depth and stencil operations.","Use as a comparison sampler instead of a normal sampler. …","Specifies how the alpha channel of the textures should be …","In-progress recording of a compute pass.","Describes the attachments of a compute pass.","Describes the timestamp writes of a compute pass.","Handle to a compute pipeline.","Describes a compute pipeline.","Constant","Cpu / Software Rendering.","<code>Instance::create_surface()</code> or a related function failed.","A cubemap texture. <code>texture_cube</code> in WGSL and <code>textureCube</code> in …","A cubemap array texture. <code>texture_cube_array</code> in WGSL and …","Triangles with vertices in clockwise order are considered …","A one dimensional texture. <code>texture_1d</code> in WGSL and <code>texture1D</code>…","1D texture","A two dimensional texture. <code>texture_2d</code> in WGSL and <code>texture2D</code>…","2D texture","A two dimensional array texture. <code>texture_2d_array</code> in WGSL …","A three dimensional texture. <code>texture_3d</code> in WGSL and …","3D texture","Generate debug information in shaders and objects.","Allows for explicit creation of textures of format …","Supports depth bias clamping","By default, polygon depth is clipped to 0-1 range …","Supports copies between depth textures and buffers.","Don’t pass labels to wgpu-hal.","Allows two outputs from a shader to be used for blending. …","Supported on Windows 10","Decrements stencil value by one, clamping on underflow.","Decrements stencil value by one, wrapping on underflow.","Sampling does the depth reference comparison.","Special depth format with 16 bit integer depth.","Special depth format with at least 24 bit integer depth.","Special depth/stencil format with at least 24 bit integer …","Special depth format with 32 bit floating point depth.","Special depth/stencil format with 32 bit floating point …","Describes the biasing setting for the depth target.","Depth.","Describes the depth/stencil state in a render pipeline.","After Device::destroy","Open connection to a graphics and/or compute device.","Describes a <code>Device</code>.","Reason for “lose the device”.","Supported physical device types.","Discards the resulting value of the render pass for this …","Discrete GPU with separate CPU/GPU memory.","Display-P3 color space","Lists various ways the underlying platform does not …","Binary flags listing features that may or may not be …","D.component","D.alpha","Direct3D-12 (Windows)","Selects which DX12 shader compiler to use.","The Dxc compiler is new, fast and maintained.","Integral type used for dynamic bind group offsets.","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Dummy backend, used for testing.","Function passes if new value is equal to existing value. …","Error type","Filter for error scopes.","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Extent of a texture related operation.","If not present, the texture can’t be sampled with a …","Allows textures with formats “r32float”, “rg32float…","Binding is visible from the fragment shader of a render …","Amount of times the fragment shader is ran. Accounts for …","Supports storage buffers in fragment shaders.","Supports binding storage buffers and textures to fragment …","Supports full 32-bit range indices (2^32-1 as opposed to …","Face of a vertex.","Features that are not guaranteed to be supported.","Presentation frames are kept in a First-In-First-Out queue …","Presentation frames are kept in a First-In-First-Out queue …","Polygons are filled","Texel mixing mode when sampling between texels.","The sampling result is produced based on more than a …","Sampling returns floats.","Two half-precision floats (no Rust equiv). <code>vec2&lt;f32&gt;</code> in …","Four half-precision floats (no Rust equiv). <code>vec4&lt;f32&gt;</code> in …","One single-precision float (f32). <code>f32</code> in shaders.","Two single-precision floats (f32). <code>vec2&lt;f32&gt;</code> in shaders.","Three single-precision floats (f32). <code>vec3&lt;f32&gt;</code> in shaders.","Four single-precision floats (f32). <code>vec4&lt;f32&gt;</code> in shaders.","One double-precision float (f64). <code>f32</code> in shaders. Requires …","Two double-precision floats (f64). <code>vec2&lt;f32&gt;</code> in shaders. …","Three double-precision floats (f64). <code>vec3&lt;f32&gt;</code> in shaders. …","Four double-precision floats (f64). <code>vec4&lt;f32&gt;</code> in shaders. …","Describes the fragment processing in a render pipeline.","Front face","Vertex winding order which classifies the “front” face …","The Fxc compiler (default) is old, slow and unmaintained.","Supported on Linux/Android, the web through webassembly …","Enable green channel writes","","OpenGL ES-3 (Linux, Android)","Selects which OpenGL ES 3 minor version to request.","No issues.","Function passes if new value is greater than existing value","Function passes if new value is greater than or equal to …","floating-point RGBA, linear-color float can be outside of …","Adapter that has the highest performance. This is often a …","Ignore the stencil state for the face.","Supports different blend operations per color attachment.","Allow a buffer to be the index buffer in a draw operation.","Allow a buffer to be the indirect buffer in an indirect …","Supports indirect drawing and dispatching.","Allows non-zero value for the <code>first_instance</code> member in …","A timestamp that is invalid due to the platform not having …","Opaque globally-unique identifier","View of a buffer which can be used to copy to/from a …","View of a buffer which can be used to copy to/from a …","View of a texture which can be used to copy to/from a …","View of a texture which can be used to copy to/from a …","View of a texture which can be used to copy to a texture, …","View of a texture which can be used to copy to a texture, …","Layout of a texture in a buffer’s memory.","Subresource range within an image","Presentation frames are not queued at all. The moment a …","Increments stencil value by one, clamping on overflow.","Increments stencil value by one, wrapping on overflow.","Format of indices used with pipeline.","The alpha channel, if it exists, of the textures is …","Context for all other wgpu objects. Instance of wgpu.","Vertex data is advanced every instance.","Options for creating an instance.","Instance debugging flags.","Integrated GPU with shared CPU/GPU memory.","Bitwise inverts stencil value.","Keep stencil value unchanged.","Object debugging label.","Function passes if new value less than existing value","Function passes if new value is less than or equal to …","Represents the sets of limits an adapter/device supports.","Polygons are drawn as line segments","Vertex data is a list of lines. Each pair of vertices …","Vertex data is a strip of lines. Each set of two adjacent …","Linear Interpolation","Loads the existing value for this attachment into the …","Operation to perform to the output attachment at the start …","The swap chain has been lost and needs to be recreated.","The surface under the swap chain is lost.","Adapter that uses the least possible power. This is often …","Webgpu only allows the MAP_READ and MAP_WRITE buffer usage …","Size to align mappings.","Allow a buffer to be mapped for reading using […","Allow a buffer to be mapped for writing using […","Supported on macOS/iOS","Supports sample-rate shading.","Allows a texture of this format to back a view passed as …","Allows <code>TextureDescriptor::sample_count</code> to be <code>16</code>.","Allows <code>TextureDescriptor::sample_count</code> to be <code>2</code>.","Allows <code>TextureDescriptor::sample_count</code> to be <code>4</code>.","Allows <code>TextureDescriptor::sample_count</code> to be <code>8</code>.","Enables multiview render passes and <code>builtin(view_index)</code> in …","Allows the user to call <code>RenderPass::multi_draw_indirect</code> …","Allows the user to call …","Presentation frames are kept in a single-frame queue. …","Passed to <code>Device::poll</code> to control how and if it should …","Passed to <code>Device::poll</code> to control how and if it should …","Result of a maintain operation.","Type of buffer mapping.","max(Src, Dst)","Metal API (Apple platforms)","min(Src, Dst)","Repeat the texture, mirroring it every repeat","Describes the multi-sampling state of a render pipeline.","If this is true, calls to <code>CommandEncoder::resolve_query_set</code>…","Binding is not visible from any shader stage.","Supports textures with mipmaps which have a non power of …","YUV 4:2:0 chroma subsampled format.","Nearest neighbor sampling.","Function never passes","The sampling result is produced based on a single color …","Power usage is not considered when choosing an adapter.","No value.","Function passes if new value is not equal to existing …","Blend state of (1 * src) + ((1 - src_alpha) * dst)","Query returns a single 64-bit number, serving as an …","More information coming soon …","1.0","1.0 - Constant","1.0 - D.component","1.0 - D.alpha","1.0 - S.component","1.0 - S1.component","1.0 - S1.alpha","1.0 - S.alpha","The alpha channel, if it exists, of the textures is …","[0, 0, 0, 1]","[1, 1, 1, 1]","Pair of load and store operations for an attachment aspect.","Origin of a copy from a 2D image.","Origin of a copy to/from a texture.","Other or Unknown.","Catch only out-of-memory errors.","There is no more memory left to allocate a new frame.","Out of memory error","The underlying surface has changed, and therefore the swap …","The surface under the swap chain has changed.","Allows the user to create bind groups containing arrays …","Enables use of Pipeline Statistics Queries. These queries …","Allows the user to set <code>PolygonMode::Line</code> in …","Allows the user to set <code>PolygonMode::Point</code> in …","Blend mode that does standard alpha blending with …","All the apis that wgpu offers first tier of support for.","Allows the use of push constants: small, fast bits of …","Alignment all push constants need","Handle to a pipeline layout.","Describes a <code>PipelineLayout</code>.","Query returns up to 5 64-bit numbers based on the given …","Flags for which pipeline data should be recorded.","Plane 0.","Plane 1.","Plane 2.","Polygons are drawn as points","Vertex data is a list of points. Each vertex is a new …","Check the device for a single time without blocking.","Check the device for a single time without blocking.","Type of drawing mode for polygons","The alpha channel, if it exists, of the textures is …","Power Preference when choosing a physical adapter.","The alpha channel, if it exists, of the textures is …","Color spaces supported on the web.","Behavior of the presentation engine based on frame rate.","Nanosecond timestamp used by the presentation engine.","Describes the state of primitive assembly and …","Primitive type the input mesh is composed of.","A range of push constant memory to pass to a shader stage.","Allow a buffer to be the destination buffer for a […","An offset into the query resolve buffer has to be aligned …","Maximum queries in a query set","Size of a single piece of query data.","Handle to a query set.","Describes a <code>QuerySet</code>.","Type of query contained in a QuerySet.","Handle to a command queue on a device.","A write-only view into a staging buffer.","Red channel only. 16 bit float per channel. Float in …","Red channel only. 16 bit integer per channel. Signed in …","Red channel only. 16 bit integer per channel. [0, 65535] …","Red channel only. 16 bit integer per channel. Unsigned in …","Red channel only. 16 bit integer per channel. [0, 65535] …","Red channel only. 32 bit float per channel. Float in …","Red channel only. 32 bit integer per channel. Signed in …","Red channel only. 32 bit integer per channel. Unsigned in …","Red channel only. 8 bit integer per channel. Signed in …","Red channel only. 8 bit integer per channel. [-127, 127] …","Red channel only. 8 bit integer per channel. Unsigned in …","Red channel only. 8 bit integer per channel. [0, 255] …","Allows for the creation of ray-tracing queries within …","Allows for the creation of ray-tracing acceleration …","Supports reading from a depth/stencil texture while using …","Enable red channel writes","","Allows a texture to be an output attachment of a render …","Default blending state that replaces destination with the …","Blend mode that does no color blending, just overwrites …","Allows for usage of textures of format …","Raw window &amp; display handle.","Map only for reading","The texture can only be read in the shader and it must be …","The texture can be both read and written in the shader and …","Pre-prepared reusable bundle of GPU operations.","Describes the depth/stencil attachment for render bundles.","Describes a <code>RenderBundle</code>.","Encodes a series of GPU operations into a reusable “…","Describes a <code>RenderBundleEncoder</code>.","In-progress recording of a render pass: a list of render …","Describes a color attachment to a <code>RenderPass</code>.","Describes a depth/stencil attachment to a <code>RenderPass</code>.","Describes the attachments of a render pass.","Describes the timestamp writes of a render pass.","Handle to a rendering (graphics) pipeline.","Describes a render (graphics) pipeline.","Repeat the texture in a tiling fashion","Replace stencil value with value provided in most recent …","Additional information required when requesting an adapter.","Options for requesting adapter.","Requesting a device from an <code>Adapter</code> failed.","Dst - Src","Red, green, and blue channels. 11 bit float with no sign …","Red and green channels. 16 bit float per channel. Float in …","Red and green channels. 16 bit integer per channel. Signed …","Red and green channels. 16 bit integer per channel. [0, …","Red and green channels. 16 bit integer per channel. …","Red and green channels. 16 bit integer per channel. [0, …","Red and green channels. 32 bit float per channel. Float in …","Red and green channels. 32 bit integer per channel. Signed …","Red and green channels. 32 bit integer per channel. …","Red and green channels. 8 bit integer per channel. Signed …","Red and green channels. 8 bit integer per channel. [-127, …","Red and green channels. 8 bit integer per channel. …","Red and green channels. 8 bit integer per channel. [0, 255]…","Red, green, blue, and alpha channels. 10 bit integer for …","Red, green, blue, and alpha channels. 10 bit integer for …","Packed unsigned float with 9 bits mantisa for each RGB …","Red, green, blue, and alpha channels. 16 bit float per …","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha. 16 bit integer per channel. […","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha channels. 32 bit float per …","Red, green, blue, and alpha channels. 32 bit integer per …","Red, green, blue, and alpha channels. 32 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Allows shaders to index sampled texture and storage buffer …","All the apis that wgpu offers second tier of support for. …","Allows shaders to use the <code>early_depth_test</code> attribute.","Allows shaders to acquire the FP16 ability","Enables 64-bit floating point types in SPIR-V shaders.","Allows shaders to use i16. Not currently supported in <code>naga</code>…","Enables <code>builtin(primitive_index)</code> in fragment shaders.","Allows vertex shaders to have outputs which are not …","Enables creating shader modules from SPIR-V binary data …","Allow a buffer to be a <code>BufferBindingType::Storage</code> inside a …","Allows a texture to be a <code>BindingType::StorageTexture</code> in a …","When used as a STORAGE texture, then a texture with this …","Allows the user to create uniform arrays of storage …","Supports specifying which view formats are allowed when …","Handle to a sampler.","Binding is a sampler.","A sampler that can be used to sample a texture.","Binding is backed by an array of samplers.","Specific type of a sampler binding.","Color variation to use when sampler addressing mode is …","Describes a <code>Sampler</code>.","Integral type used for binding locations in shaders.","Collections of shader features a device supports if they …","Handle to a compiled shader module.","Descriptor for use with <code>Device::create_shader_module</code>.","Descriptor for a shader module given by SPIR-V binary, for …","Source of a shader module.","Describes the shader stages that a binding will be visible …","Sampling returns signed integers.","Two signed shorts (i16). <code>vec2&lt;i32&gt;</code> in shaders.","Four signed shorts (i16). <code>vec4&lt;i32&gt;</code> in shaders.","One signed int (i32). <code>i32</code> in shaders.","Two signed ints (i32). <code>vec2&lt;i32&gt;</code> in shaders.","Three signed ints (i32). <code>vec3&lt;i32&gt;</code> in shaders.","Four signed ints (i32). <code>vec4&lt;i32&gt;</code> in shaders.","Two signed bytes (i8). <code>vec2&lt;i32&gt;</code> in shaders.","Four signed bytes (i8). <code>vec4&lt;i32&gt;</code> in shaders.","Extremely limited shaders, including a total instruction …","Missing minor features and storage images.","WebGPU supports shader module 5.","Two signed shorts (i16). [-32767, 32767] converted to …","Four signed shorts (i16). [-32767, 32767] converted to …","Two signed bytes (i8). [-127, 127] converted to float [-1, …","Four signed bytes (i8). [-127, 127] converted to float […","Some value of type <code>T</code>.","S.component","S1.component","S1.alpha","S.alpha","min(S.alpha, 1.0 - D.alpha)","sRGB color space","Stencil format with 8 bit integer stencil.","Describes stencil state in a render pipeline.","Stencil.","Operation to perform on the stencil value.","State of the stencil operation (fixed-pipeline stage).","A storage buffer.","A storage texture.","Specific type of a sample in a texture binding.","Stores the resulting value of the render pass for this …","Operation to perform to the output attachment at the end …","Identifier for a particular call to <code>Queue::submit</code>. Can be …","There are no active submissions in flight as of the …","The swap chain is operational, but it does no longer …","Src - Dst","Handle to a presentable surface.","Defines the capabilities of a given surface and adapter.","Describes a <code>Surface</code>.","Result of an unsuccessful call to …","Status of the received surface image.","The window/canvas/surface/swap-chain/etc. a surface is …","The window/canvas/surface/swap-chain/etc. a surface is …","Surface texture that can be rendered to. Result of a …","Enables device specific texture format features.","Allows a texture to be a <code>BindingType::Texture</code> in a bind …","Allows the user to create uniform arrays of textures in …","Enables ASTC family of compressed textures. ASTC textures …","Enables ASTC HDR family of compressed textures.","Enables BCn family of compressed textures. All BCn …","Enables ETC family of compressed textures. All ETC …","Enables normalized <code>16-bit</code> texture formats.","Allows for creation of textures of format …","Enables use of Timestamp Queries. These queries tell the …","Allows for timestamp queries inside render passes.","","Handle to a texture on the GPU.","A texture binding.","Kind of data the texture holds.","Describes a <code>Texture</code>.","Dimensionality of a texture.","Underlying texture data format.","Feature flags for a texture format.","Features supported by a given texture format","Specific type of a sample in a texture binding.","Different ways that you can use a texture.","Handle to a texture view.","Binding is backed by a texture.","Binding is backed by an array of textures.","Describes a <code>TextureView</code>.","Dimensions of a particular texture view.","A timeout was encountered while trying to acquire the next …","Unable to get the next frame, timed out.","Query returns a 64-bit number indicating the GPU-timestamp …","[0, 0, 0, 0]","Vertex data is a list of triangles. Each set of 3 vertices …","Vertex data is a triangle strip. Each set of three …","Allow a buffer to be a <code>BufferBindingType::Uniform</code> inside a …","Allows shaders to index uniform buffer and storage texture …","With this feature not present, there are the following …","Supports buffers to combine <code>BufferUsages::INDEX</code> with …","Sampling returns unsigned integers.","Indices are 16 bit unsigned integers.","Two unsigned shorts (u16). <code>vec2&lt;u32&gt;</code> in shaders.","Four unsigned shorts (u16). <code>vec4&lt;u32&gt;</code> in shaders.","Indices are 32 bit unsigned integers.","One unsigned int (u32). <code>u32</code> in shaders.","Two unsigned ints (u32). <code>vec2&lt;u32&gt;</code> in shaders.","Three unsigned ints (u32). <code>vec3&lt;u32&gt;</code> in shaders.","Four unsigned ints (u32). <code>vec4&lt;u32&gt;</code> in shaders.","Two unsigned bytes (u8). <code>vec2&lt;u32&gt;</code> in shaders.","Four unsigned bytes (u8). <code>vec4&lt;u32&gt;</code> in shaders.","Type for the callback of uncaptured error handler","A buffer for uniform values.","Triggered by driver","8 bit integer RGBA, [0, 255] converted to/from …","Two unsigned shorts (u16). [0, 65535] converted to float […","Four unsigned shorts (u16). [0, 65535] converted to float […","Two unsigned bytes (u8). [0, 255] converted to float [0, 1]…","Four unsigned bytes (u8). [0, 255] converted to float [0, 1…","8 bit integer RGBA, Srgb-color [0, 255] converted to/from …","Enable validation, if possible.","Binding is visible from the vertex shader of a render …","Allow a buffer to be the vertex buffer in a draw operation.","If this is true, use of <code>@builtin(vertex_index)</code> and …","Enables using 64-bit types for vertex attributes.","Binding is visible from the vertex and fragment shaders of …","Amount of times the vertex shader is ran. Accounts for the …","Supports storage buffers in vertex shaders.","Vertex buffer strides have to be aligned to this number.","Enables bindings of writable storage buffers and textures …","Supports specifying which view format values are allowed …","Supported on Windows, Linux/Android, and macOS/iOS via …","Catch only validation errors.","Validation error, signifying a bug in code or data","Request an ES 3.0 context.","Request an ES 3.1 context.","Request an ES 3.2 context.","Vertex data is advanced every vertex.","Vertex inputs (attributes) to shaders.","Describes how the vertex buffer is interpreted.","Vertex Format for a <code>VertexAttribute</code> (input).","Describes the vertex processing in a render pipeline.","Whether a vertex buffer is indexed by vertex or by …","Virtual / Hosted.","Vulkan API","Supports all the texture usages described in WebGPU. If …","","Same as WaitForSubmissionIndex but waits for the most …","Same as WaitForSubmissionIndex but waits for the most …","On wgpu-core based backends, block until the given …","On wgpu-core based backends, block until the given …","","","","WGSL module as a string slice.","Window handle producer.","Super trait for window handles as used in <code>SurfaceTarget</code>.","Map only for writing","The texture can only be written in the shader and it:","Zero origin.","Zero origin.","0.0","Set stencil value to zero.","On the Metal backend, this is equivalent to …","Alpha component of the color","Adds an <code>Srgb</code> suffix to the given texture format, if the …","How to deal with out of bounds accesses in the u (i.e. x) …","How to deal with out of bounds accesses in the v (i.e. y) …","How to deal with out of bounds accesses in the w (i.e. z) …","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Mask of all features that are only available when …","Mask of all features which are part of the upstream WebGPU …","Valid bits for <code>TextureDescriptor::Usage</code> provided for …","Alpha equation.","Specifies how the alpha channel of the textures should be …","List of supported alpha modes to use with the given …","When enabled, produces another sample mask per pixel based …","Must be at least 1. If this is not 1, all filter modes …","Returns <code>true</code> if any backend feature is enabled for the …","Layer count. If <code>Some(count)</code>, <code>base_array_layer + count</code> must …","Layer count. If <code>Some(count)</code>, <code>base_array_layer + count</code> must …","The stride, in bytes, between elements of this buffereturn the binding view of the entire buffer.","Return the binding view of the entire buffer.","Returns the inner hal Surface using a callback. The hal …","Return a reference to a specific backend instance, if …","Apply a callback to this <code>Adapter</code>’s underlying backend …","Apply a callback to this <code>Device</code>’s underlying backend …","Returns the inner hal Texture using a callback. The hal …","Make an <code>ImageCopyTexture</code> representing the whole texture.","","","","The copy aspect.","The copy aspect.","Aspect of the texture. Color textures must be …","The copy aspect.","The copy aspect.","Aspect of the texture. Color textures must be …","Returns the aspect-specific format of the original format","The list of attributes which comprise a single vertex.","Blue component of the color","Back face mode.","Backend used for device","Which <code>Backends</code> to enable.","Base array layer.","Base array layer.","Base mip level.","Base mip level.","Begins recording of a compute pass.","Start a occlusion query on this render pass. It can be …","Start a pipeline statistics query on this render pass. It …","Start a pipeline statistics query on this render pass. It …","Begins recording of a render pass.","The index of the query set at which a start timestamp of …","The index of the query set at which a start timestamp of …","Depth bias state.","Bind groups that this pipeline uses. The first entry will …","Slot for which binding provides resource. Corresponds to …","Binding index. Must match shader index and be unique …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","","Get the underlying bits value.","Get the underlying bits value.","","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The blending that is used for this pipeline.","The number of bytes one texel block occupies during an …","Returns the dimension of a block of texels.","The number of bytes one texel block occupies during an …","Border color to use when address_mode is …he buffer to be copied to/from.","The buffer to bind.","The buffer to be copied to/from.","The format of any vertex buffers used with this pipeline.","Bytes per “row” in an image.","Compares every limits within self is within the limits …","Compares every limits within self is within the limits …","Depth bias clamp value (absolute).","Clears buffer to zero.","Clears texture to zeroolor equation.","The color attachments of the render pass.","The formats of the color attachments that this render …","The color space of this texture.","The color space of this texture.","","","","","If this is enabled, this is a comparison sampler using the …","Comparison function that determines if the fail_op or …","Surface that is required to be presentable with the …","Surface that is required to be presentable with the …","Get the texture dimension required of this texture view …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","All flags that indicate if the backend is WebGPU compliant","Returns the number of components this format has.","Returns the number of components this format has taking …","Initializes <code>Surface</code> for presentation.","If set to true, the primitives are rendered with …","Constant depth biasing factor, in basic units of the depth …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Copy data from one buffer to another.","Copy data from a buffer to a texture.","Copy data from a texture to a buffer.","Copy data from one texture to another.","Total count of queries the set contains. Must not be zero. …","The number of samples calculated per pixel (for MSAA). For …","If this value is Some, indicates this entry is an array. …","Converts a wgpu-hal <code>ExposedAdapter</code> to a wgpu <code>Adapter</code>.","Creates a new <code>BindGroup</code>.","Creates a <code>BindGroupLayout</code>.","Creates a <code>Buffer</code>.","Creates a <code>Buffer</code> from a wgpu-hal Buffer.","","Creates an empty <code>CommandEncoder</code>.","Creates a <code>ComputePipeline</code>.","Create a wgpu <code>Device</code> and <code>Queue</code> from a wgpu-hal <code>OpenDevice</code>","Creates a <code>PipelineLayout</code>.","Creates a new <code>QuerySet</code>.","Creates an empty <code>RenderBundleEncoder</code>.","Creates a <code>RenderPipeline</code>.","Creates a new <code>Sampler</code>.","Creates a shader module from either SPIR-V or WGSL source …","Creates a shader module from SPIR-V binary directly.","Creates a shader module from either SPIR-V or WGSL source …","Creates a new surface targeting a given …","Creates a new surface targeting a given …","Creates a new <code>Texture</code>.","Creates a <code>Texture</code> from a wgpu-hal Texture.","","Creates a view of this texture.","The face culling mode.","Enable debugging and validation flags.","","","","","","","","","","","","","","Creates a new instance of wgpu with default options.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Comparison function used to compare depth values in the …","Operation that is performed when depth test fails but …","What operations will be performed on the depth part of the …","Returns the depth or layer count of this <code>Texture</code>.","The depth of the extent or the number of array layers","If the depth aspect of the depth stencil attachment is …","The effect of draw calls on the depth and stencil aspects …","Information about the depth attachment that this render …","The depth and stencil attachment of the render pass, if …","If disabled, depth will not be written to.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Desired maximum number of frames that the presentation …","Destroy this device.","Destroy the associated native resources as soon as …","Destroy the associated native resources as soon as …","<code>Backend</code>-specific device ID of the adapter","Type of device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Returns the dimension of this <code>Texture</code>.","Dimensions of the texture.","The dimension of the texture view. For 1D textures, this …","Dispatches compute work operations.","Dispatches compute work operations, based on the contents …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","These default limits are guaranteed to be compatible with …","These default limits are guaranteed to be compatible with …","Draws primitives from the active vertex buffer(s).","","Draws primitives from the active vertex buffer(s).","","Draws indexed primitives using the active index buffer and …","","Draws indexed primitives using the active index buffer and …","","Draws indexed primitives using the active index buffer and …","","Draws indexed primitives using the active index buffer and …","","Draws primitives from the active vertex buffer(s) based on …","","Draws primitives from the active vertex buffer(s) based on …","","Driver name","Driver infoultiplier for the destination, which is stored in the …","Which DX12 shader compiler to use.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","End the occlusion query on this render pass. It can be …","The index of the query set at which an end timestamp of …","The index of the query set at which an end timestamp of …","End the pipeline statistics query on this render pass. It …","End the pipeline statistics query on this render pass. It …","The resources to bind to this bind group.","Array of entries in this BindGroupLayout","The name of the entry point in the compiled shader. There …","The name of the entry point in the compiled shader. There …","The name of the entry point in the compiled shader. There …","Retrieves all available <code>Adapter</code>s that match the given …xecute a render bundle, which is a set of pre-recorded …","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Operation that is preformed when stencil test fails.","The features which can be used to create devices on this …","The features which can be used on this device.","Finishes recording and returns a <code>CommandBuffer</code> that can be …","Finishes recording and returns a <code>RenderBundle</code> that can be …","Combined boolean flags.","Additional property flags for the format.","Flags to tune the behavior of the instance.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates that only a fallback adapter can be returned. …","Indicates that only a fallback adapter can be returned. …","Returns the format of this <code>Texture</code>.","The texture format of the swap chain. The only formats …","Format of the texture.","The <code>TextureFormat</code> of the image that this pipeline will …","Format of the texture view. Either must be the same as the …","Format of the depth/stencil buffer, must be special depth …","Format of the input","Format of the attachment.","List of supported formats to use with the given adapter. …","The compiled fragment stage, its entry point, and the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Infer good defaults from the build type","Create an new instance of wgpu from a wgpu-core instance.","Create an new instance of wgpu from a wgpu-hal instance.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Returns the texture aspect for a given plane.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>SurfaceTargetUnsafe::RawHandle</code> from a window.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Front face mode.","The face to consider the front for the purpose of culling …","Green component of the color","Generates memory report.","Get an object representing the bind group layout at a …","Get an object representing the bind group layout at a …","Returns the capabilities of the surface when used with the …","Returns the next texture to be presented by the swapchain …","Return a default <code>SurfaceConfiguration</code> from width and …","Get info about the adapter itself.","Get info about the adapter itself.","Synchronously and immediately map a buffer for reading. If …","Synchronously and immediately map a buffer for writing. If …","Generates a timestamp using the clock used by the …","Returns the features supported for a given texture format …","Gets the amount of nanoseconds each tick of a timestamp …","Which OpenGL ES 3 minor version to request.","Returns a globally-unique identifier for this <code>Surface</code>.","Returns a globally-unique identifier for this <code>Adapter</code>.","Returns a globally-unique identifier for this <code>Device</code>.","Returns a globally-unique identifier for this <code>Buffer</code>.","Returns a globally-unique identifier for this <code>Texture</code>.","Returns a globally-unique identifier for this <code>TextureView</code>.","Returns a globally-unique identifier for this <code>Sampler</code>.","Returns a globally-unique identifier for this …","Returns a globally-unique identifier for this <code>BindGroup</code>.","Returns a globally-unique identifier for this <code>ShaderModule</code>.","Returns a globally-unique identifier for this …","Returns a globally-unique identifier for this …","Returns a globally-unique identifier for this …","Returns a globally-unique identifier for this <code>RenderBundle</code>.","Returns a globally-unique identifier for this <code>QuerySet</code>.","Returns a globally-unique identifier for this <code>Queue</code>.","Returns the format features guaranteed by the WebGPU spec.","Returns <code>true</code> if the format has a color aspect","Returns <code>true</code> if the format has a depth aspect","Returns true for buffer bindings with dynamic offset …","Returns <code>true</code> if the format has a stencil aspect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the height of this <code>Texture</code>.","Height of the swap chain. Must be the same size as the …","Height of the extent","Macro to load raw SPIR-V data statically, for use with …","Macro to load a WGSL module statically.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Inserts debug marker.","Inserts debug marker.","Inserts debug marker.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codehether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Returns <code>true</code> if the format is a combined depth-stencil …","Returns <code>true</code> for compressed formats.","Returns true if the depth testing is enabled.","Returns true if the state doesn’t mutate the depth …","Returns <code>true</code> if <code>self</code> is a depth or stencil component of …","Returns <code>true</code> if the format is a depth and/or stencil format","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Returns true if the stencil test is enabled.","Returns true if the depth biasing is enabled.","Returns if the given range represents a full resource, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if this timestamp is the invalid timestamp.","Returns <code>true</code> if the format is a multi-planar format","Returns true if the result is <code>Self::SubmissionQueueEmpty</code>`.","Returns true if the state doesn’t mutate the target …","Returns true if the state doesn’t mutate either depth or …","Returns true if the face state doesn’t mutate the target …","Returns <code>true</code> for srgb formats.","Returns true if the state doesn’t mutate the stencil.","Returns true for strip topologies.","Returns whether this adapter may present to the passed …","This maintain represents a wait of some kind.","Returns true if the underlying platform offers complete …","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Debug label for the device.","Debug label of a buffer. This will show up in graphics …","Debug label for the command encoder. This will show up in …","Debug label of the render bundle encoder. This will show …","Debug label of the texture. This will show up in graphics …","Debug label for the query set.","Debug label of the shader module. This will show up in …","Debug label of the shader module. This will show up in …","Debug label of the texture view. This will show up in …","Debug label of the pipeline layout. This will show up in …","Debug label of the sampler. This will show up in graphics …","Debug label of the bind group. This will show up in …","Debug label of the render pass. This will show up in …","Debug label of the pipeline. This will show up in graphics …","Debug label of the compute pass. This will show up in …","Debug label of the pipeline. This will show up in graphics …","Debug label of the bind group layout. This will show up in …","Debug label of the render bundle encoder. This will show …","Debug label of this command buffer.","Returns the layer range of a subresource range describes …","The layout of the texture data in this buffer.","The <code>BindGroupLayout</code> that corresponds to this bind group.","The layout of bind groups for this pipeline.","The layout of bind groups for this pipeline.","The layout of the texture data in this buffer.","The best limits which can be used to create devices on …","The limits which can be used on this device.","Additional limits","How data should be read through this attachment.","Maximum level of detail (i.e. mip level) to use","Minimum level of detail (i.e. mip level) to use","How to filter the texture when it needs to be magnified …","Map the buffer. Buffer is ready to map once the callback …","Map on the wait index type.","Takes a closure and maps the label of the command buffer …","Allows a buffer to be mapped immediately after they are …","Bitmask that restricts the samples of a pixel modified by …","Amount of bind groups that can be attached to a pipeline …","Maximum binding index allowed in <code>create_bind_group_layout</code>. …","A limit above which buffer allocations are guaranteed to …","Maximum value of the product of the <code>workgroup_size</code> …","The maximum value of the workgroup_size X dimension for a …","The maximum value of the workgroup_size Y dimension for a …","The maximum value of the workgroup_size Z dimension for a …","Maximum number of bytes used for workgroup memory in a …","The maximum value for each dimension of a …","Amount of storage buffer bindings that can be dynamic in a …","Amount of uniform buffer bindings that can be dynamic in a …","Maximum allowed number of components (scalars) of input or …","Calculates the maximum possible count of mipmaps.","Maximum number of live non-sampler bindings.","Amount of storage available for push constants in bytes. …","Amount of sampled textures visible in a single shader …","Amount of samplers visible in a single shader stage. …","Maximum size in bytes of a binding to a storage buffer. …","Amount of storage buffers visible in a single shader …","Amount of storage textures visible in a single shader …","Maximum allowed value for the <code>size.depth_or_array_layers</code> …","Maximum allowed value for the <code>size.width</code> of a texture …","Maximum allowed value for the <code>size.width</code> and <code>size.height</code> …","Maximum allowed value for the <code>size.width</code>, <code>size.height</code>, and …","Maximum size in bytes of a binding to a uniform buffer. …","Amount of uniform buffers visible in a single shader …","Maximum length of <code>VertexBufferLayout::attributes</code>, summed …","Maximum value for <code>VertexBufferLayout::array_stride</code> when …","Maximum length of <code>VertexState::buffers</code> when creating a …","How to filter the texture when it needs to be minified …","Required <code>BufferBindingType::Storage</code> alignment for …","Required <code>BufferBindingType::Uniform</code> alignment for …","The target mip level of the texture.","The target mip level of the texture.","The target mip level of the texture.","The target mip level of the texture.","Returns the mip_level_count of this <code>Texture</code>.","Mip count of texture. For a texture with no extra mips, …","Mip level count. If <code>Some(count)</code>, <code>base_mip_level + count</code> …","Mip level count. If <code>Some(count)</code>, <code>base_mip_level + count</code> …","Calculates the extent at a given mip level. Does <em>not</em> …","Returns the mip level range of a subresource range …","How to filter between mip map levels","The compiled shader module for this stage.","The compiled shader module for this stage.","The compiled shader module for this stage.","Dispatches multiple draw calls from the active index …","Dispatches multiple draw calls from the active index …","Dispatches multiple draw calls from the active vertex …","Dispatches multiple draw calls from the active vertex …","The multi-sampling properties of the pipeline.","If the pipeline will be used with a multiview render pass, …","If this render bundle will rendering to multiple array …","Adapter name","Returns true if the stencil state uses the reference value …","Returns true if the face state uses the reference value …","Returns true if the comparison depends on the reference …","Create an new instance of wgpu.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Defines where the occlusion query results will be stored …","Base offset of the buffer, in bytes.","Byte offset of the start of the input","Offset into the buffer that is the start of the texture. …","Registers a callback when the previous call to submit …","Set a callback for errors that are not handled in error …","The binary operation applied to the source and destination,","What operations will be performed on this color attachment.","The base texel of the texture in the selected <code>mip_level</code>. …","The base texel of the texture in the selected <code>mip_level</code>.","The base texel of the texture in the selected <code>mip_level</code>. …","The base texel of the texture in the selected <code>mip_level</code>.","Panics if the MaintainResult is not Ok.","","","","","","Operation that is performed when stencil test success.","Calculates the physical size backing a texture of the given","Returns the number of planes a multi-planar format has.","Check for resource cleanups and mapping callbacks. Will …","Polls all devices.","Controls the way each polygon is rasterized. Can be either …","Stops command recording and creates debug group.","Stops command recording and creates debug group.","Stops command recording and creates debug group.","Pop an error scope.","Power preference for the adapter.","Power preference for the adapter.","The premultiplication of this texture","The premultiplication of this texture","Schedule this texture to be presented on the owning …","Presentation mode of the swap chain. Fifo is the only mode …","List of supported presentation modes to use with the given …","The properties of the pipeline at the primitive assembly …","Set of push constant ranges this pipeline uses. Each …","Start record commands and group it into debug marker group.","Start record commands and group it into debug marker group.","Start record commands and group it into debug marker group.","Push an error scope.","The query set to write to.","The query set to write to.","Red component of the color","Range in push constant memory to use for the stage. Must …","Stencil values are AND’d with this mask when reading and …","Returns <code>true</code> if the blend factor references the second …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Strips the <code>Srgb</code> suffix from the given texture format.","Retrieves an <code>Adapter</code> which matches the given …","Requests a connection to a physical device, creating a …","Returns the required features (if any) in order to use the …","Specifies the features that are required by the device …","Specifies the limits that are required by the device …","Resolves a query set, writing the results into the …","The view that will receive the resolved output if …","Resource to attach to the binding","“Rows” that make up a single “image”.","Returns the sample_count of this <code>Texture</code>.","Sample count of texture. If this is not 1, texture must …","Sample count this render bundle is capable of rendering …","Sample count supported by a given texture format.","Returns the sample type compatible with this format and …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Sets the active bind group for a given bind group index. …","","Sets the active bind group for a given bind group index. …","","Sets the active bind group for a given bind group index. …","Sets the blend color as used by some of the blending modes.","Set a DeviceLostCallback on this device.","","Sets the active index buffer.","","Sets the active index buffer.","Sets the active render pipeline.","","Sets the active compute pipeline.","","Sets the active render pipeline.","","Set push constant data for subsequent draw calls.","Set push constant data for subsequent dispatch calls.","","Set push constant data.","Sets the scissor rectangle used during the rasterization …","Sets the stencil reference.","","Assign a vertex buffer to a slot.","Assign a vertex buffer to a slot.","","Sets the viewport used during the rasterization stage to …","Location for this input. Must match the location in the …","Which collections of features shaders support. Defined in …","Returns the length of the buffer allocation in bytes.","Returns the size of this <code>Texture</code>.","Returns the byte size of the format.","Size of a buffer, in bytes.","Size of the texture. All components must be greater than …","Size of the binding in bytes, or <code>None</code> for using the rest …","Returns the size multiple requirement for a texture using …","Use only a portion of this Buffer for a given operation. …","Slope depth biasing factor.","","","","Source code for the shader.","Binary SPIR-V data, in 4-byte words.","Multiplier for the source, which is produced by the …","Stage push constant range is visible from. Each stage can …","Starts frame capture.","Stencil state.","What operations will be performed on the stencil part of …","If the stencil aspect of the depth stencil attachment is …","How often this vertex buffer is “stepped” forward.","Stops frame capture.","Whether data will be written to through this attachment.","When drawing strip topologies with indices, this is the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Submits a series of finished command buffers for execution.","<code>true</code> if the acquired buffer can still be used for …","A <code>Vec</code> of supported sample counts.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The color state of the render targets.","The texture to be copied to/from.","The texture to be copied to/from.","Accessible view of the frame.","The texture to be copied to/from.","The texture to be copied to/from.","Defines which timestamp values will be written for this …","Defines which timestamp values will be written for this …","Removes the third dimension from this origin","Adds the third dimension to this origin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the string name of the backenddds color space and premultiplied alpha information to …","Removes the colorspace information from the type.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The primitive topology used to interpret verticesind of query that this query set should contain.","The type of the binding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If set to true, the polygon depth is not clipped to 0-1 …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Flushes any pending write operations and unmaps the buffer …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the allowed usages for this <code>Buffer</code>.","Returns the allowed usages of this <code>Texture</code>.","The usage of the swap chain. The only supported usage is …","Usages of a buffer. If the buffer is used in any way that …","Allowed usages of the texture. If used in other ways, the …","Bitflag of supported texture usages for the surface to use …","Returns true if the state relies on the constant color, …","Modify the current limits to use the buffer alignment …","Modify the current limits to use the resolution limits of …","Utility structures and functions that are built on top of …","<code>Backend</code>-specific vendor ID of the adapter","The compiled vertex stage, its entry point, and the input …","Macro to produce an array of <code>VertexAttribute</code>.","The view to use as an attachment.","The view to use as an attachment.","Specifies what view formats will be allowed when calling …","Specifies what view formats will be allowed when calling …","Which shader stages can see this binding.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a wait variant","Construct a WaitForSubmissionIndex variant","Returns the width of this <code>Texture</code>.","Width of the swap chain. Must be the same size as the …","Width of the extent","Returns this set of flags, affected by environment …","Schedule a data write into <code>buffer</code> starting at <code>offset</code>.","Schedule a data write into <code>buffer</code> starting at <code>offset</code> via …","Mask which enables/disables writes to different …","Stencil values are AND’d with this mask when writing to …","Schedule a write of some data into a texture.","Issue a timestamp command at this point in the queue. The …","Issue a timestamp command at this point in the queue. The …","Issue a timestamp command at this point in the queue. The …","","X position of the origin","","Y position of the origin","Z position of the origin","Allowed access to this texture.","Format of the texture.","Indicates that the binding has a dynamic offset.","The minimum size for a <code>BufferBinding</code> matching this entry, …","True if the texture has a sample count greater than 1. If …","Sample type of the texture binding.","Sub-type of the buffer binding.","Dimension of the texture view that is going to be sampled.","Dimension of the texture view that is going to be sampled.","If <code>true</code>, the buffer can only be read in the shader, and it:","Path to the <code>dxcompiler.dll</code> file, or path to the directory …","Path to the <code>dxil.dll</code> file, or path to the directory …","Description of the validation error.","Lower level source of the error.","Lower level source of the error.","Raw display handle, underlying display must outlive the …","Raw display handle, underlying window must outlive the …","compressed block dimensions","ASTC RGBA channel","If this is <code>false</code>, the texture can’t be sampled with a …","","","","","No value.","","Some value of type <code>T</code>.","","","","","","","","","","","","","","","","","Dispatch on an <code>Id</code>’s backend to a backend-generic method.","","","","Allocating resource ids, and tracking the resources they …","","","","","Presentation.","","","","","A <code>Arc</code> of a <code>HalSurface&lt;A&gt;</code>, for any backend <code>A</code>.","","","","","","","","","","If <code>self</code> is an <code>Arc&lt;HalSurface&lt;A&gt;&gt;</code>, return a reference to the","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Return an <code>AnySurface</code> that holds an owning <code>Arc</code> to <code>HalSurface</code>…","If <code>self</code> is an <code>Arc&lt;HalSurface&lt;A&gt;&gt;</code>, returns that.","","","","","","","","","","","","","","Describes a group of bindings and the resources to be …","","Bindable resource and the slot to bind it to.","Bind group layout.","Describes a <code>BindGroupLayout</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes a pipeline layout.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bind groups that this pipeline uses. The first entry will …","Slot for which binding provides resource. Corresponds to …he resources to bind to this bind group.","Array of entries in this BindGroupLayout","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Debug label of the bind group.","Debug label of the bind group layout.","Debug label of the pipeine layout.","The <code>BindGroupLayout</code> that corresponds to this bind group.","","","Set of push constant ranges this pipeline uses. Each …","Resource to attach to the binding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes an attachment location in words.","","","","","","","","","","","","","","","","","","","Clear the output attachment with the clear color. Clearing …","Error encountered while attempting a clear.","","","","","","","","","","Error encountered when performing a compute pass.","Error encountered when performing a compute pass.","Describes the writing of timestamp values in a compute …","","","Error encountered while attempting to do a copy on a …","","","","","Error type returned from <code>RenderBundleEncoder::new</code> if the …","","","","","","","","","","Discards the content of the render target.","","","","","","Error validating a draw call.","","","","","","","","","Error type returned from <code>RenderBundleEncoder::new</code> if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Do not clear output attachment.","Operation to perform to the output attachment at the start …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes an individual channel within a render pass, such …","","","","","","Error encountered when dealing with queries","","","","","Error encountered while trying to use queries","","","","","Describes a <code>RenderBundleEncoder</code>.","Error encountered when finishing recording a render bundle.","","Error encountered when encoding a render command. This is …","","Describes a color attachment to a render pass.","Describes a depth/stencil attachment to a render pass.","Describes the attachments of a render pass.","Error encountered when performing a render pass.","Error encountered when performing a render pass.","Location to write a timestamp to (beginning or end of the …","Describes the writing of timestamp values in a render pass.","","Error encountered while trying to resolve a query.","","","","","","","","","","","","","","Store the result of the renderpass.","Operation to perform to the output attachment at the end …","","","","","","","","Error encountered while attempting a data transfer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The copy aspect.","The copy aspect.","The index of the query set at which a start timestamp of …","The index of the query set at which a start timestamp of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The buffer to be copied to/from.","","What operations will be performed on this color attachment.","If load_op is <code>LoadOp::Clear</code>, the attachment will be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The color attachments of the render pass.","The formats of the color attachments that this render …","The color space of this texture.","","","","","","","What operations will be performed on the depth part of the …","Information about the depth attachment that this render …","The depth and stencil attachment of the render pass, if …he index of the query set at which an end timestamp of …","The index of the query set at which an end timestamp of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeebug label of the render bundle encoder. This will show …","Debug label of the render bundle encoder.","","","","The layout of the texture data in this buffer.","Operation to perform to the output attachment at the start …","The target mip level of the texture.","The target mip level of the texture.","If this render bundle will rendering to multiple array …","","","","Defines where the occlusion query results will be stored …","The base texel of the texture in the selected <code>mip_level</code>. …","The base texel of the texture in the selected <code>mip_level</code>.","","","","The premultiplication of this texture","","The query set to write the timestamps to.","The query set to write the timestamp to.","If true, the relevant channel is not changed by a …","","The view that will receive the resolved output if …","Sample count this render bundle is capable of rendering to.","","","","","","","","","","","","","","","","","","","","What operations will be performed on the stencil part of …","Operation to perform to the output attachment at the end …","","The texture to be copied to/from.","The texture to be copied to/from.","Defines where and when timestamp values will be written …","Defines where and when timestamp values will be written …he view to use as an attachment.","The view to use as an attachment.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","","Safety","Safety","","","Safety","","","","","","Safety","","Safety","Safety","","Safety","","","","","","","","","","Safety","Safety","","","","","","Safety","Safety","","","","Safety","","","","","","","Structure describing a logical device. Some members are …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Debug label for the device.","","","Specifies the features that are required by the device …","Specifies the limits that are required by the device …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A pointer to a <code>Device&lt;A&gt;</code>, for any backend <code>A</code>.","","","","","","","","","If <code>self</code> is an <code>Arc&lt;Device&lt;A&gt;&gt;</code>, return a clone of that.","If <code>self</code> is an <code>Arc&lt;Device&lt;A&gt;&gt;</code>, return a reference to the …","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Return an <code>AnyDevice</code> that holds an owning <code>Arc</code> pointer to …","","","","","","","","","","","","","","","","","","","","","","","","","","","A texture or buffer to be freed soon.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Safety","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Structure describing a logical device. Some members are …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get an ID of one of the bind group layouts. The ID adds a …","","Safety","Assign <code>id_in</code> an error with the given <code>label</code>.","Safety","Safety","","Assign <code>id_in</code> an error with the given <code>label</code>.","Safety","","","","","Safety","","","","","","","","","","","","Safety","","","","","","Safety","","","","Check <code>device_id</code> for freeable resources and completed …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Safety","Safety","","","","","","","","","Safety","Safety","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Poll all devices on all backends.","","","","","","","","","","","","","","","","Get an ID of one of the bind group layouts. The ID adds a …","","","","","","","Safety","","","","","","","","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","All the resources for a particular backend in a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An identifier for a wgpu object.","","","","","","","","","","","","","","Trait carrying methods for direct <code>Id</code> access.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Safety","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","A factory that can build <code>IdentityManager</code>s for all resource …","A type that can produce <code>IdentityManager</code> filters for ids of …","","A global identity handler factory based on <code>IdentityManager</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Create an <code>IdentityManager&lt;I&gt;</code> implementation that can …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error when requesting a device from the adaptor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Surface that is required to be presentable with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates that only a fallback adapter can be returned. …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generates a set of backends from a comma separated list of …","Power preference for the adapter.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Width of abstract types, in bytes.","","Abstract floating-point type.","","WGSL abstract integer type.","","Opaque object representing an acceleration structure of …","Array access with a computed index.","Access the same types as <code>Access</code>, plus <code>Struct</code> with a known …","","","","","Addressing space of variables.","","","","","An arena holding some kind of component (e.g., type, …","Homogenous list of elements.","Get the length of an array. The expression must resolve to …","Size of an array.","Cast a simple type to another kind.","","","","","","Atomic scalar.","Atomic function.","","Function on an atomic value.","Result of an atomic operation.","","","Width of a boolean type, in bytes.","Memory barrier flags.","Synchronize invocations within the work group. The <code>Barrier</code> …","","","","2D vector","","Apply a binary operator.","Operation that can be applied on two values.","Describes how an input/output variable is to be bound.","Array of bindings.","","A code block is a vector of statements, with maybe a …","A block containing more statements, to be executed …","Boolean type.","","Exits the innermost enclosing <code>Loop</code> or <code>Switch</code>.","Built-in inputs and outputs.","Built-in shader variable.","","","Number of bytes per scalar.","Calls a function.","Result of calling another function.","","Interpolate the value at the center of the pixel.","Interpolate the value at a point that lies within all …","","","","Composite expression.","","Enables adjusting depth without disabling early Z.","Constant value.","The array size is constant.","Constant value.","Skips to the <code>continuing</code> block of the innermost enclosing …","","","","","","","Cube map","","1D image","2D image","3D image","","","Depth comparison image.","Compute the derivative on an axis.","Axis on which to compute a derivative.","Hint at which precision to compute a derivative.","","","","","The array size can change at runtime.","Early fragment tests.","Emit a range of expressions, visible to all statements …","The main function for a pipeline stage.","","","","","","","","An expression that can be evaluated to obtain a value.","","May not be NaN or infinity.","","May not be NaN or infinity.","","","Hash map that is faster but not resilient to DoS attacks.","Hash set that is faster but not resilient to DoS attacks.","Insertion-order-preserving hash map (<code>IndexMap&lt;K, V&gt;</code>), but …","Insertion-order-preserving hash set (<code>IndexSet&lt;K&gt;</code>), but …","","","","Indicates that no interpolation will be performed.","Floating point type.","","","","","","","","","A function defined in the module.","Function locals.","A function argument.","Reference a function parameter, by its index.","A function result.","","Variable defined at module level.","Reference a global variable.","","","Shader may rewrite depth only with a value greater than …","","A strongly typed reference to an arena item.","Opaque handles, such as samplers and images.","","","","","","Conditionally executes one of two blocks, based on the …","Possibly multidimensional array of texels.","Sub-class of the image type.","The number of dimensions an image has.","Load a texel from an image.","Type of an image query.","Query information from an image.","Sample a point from a sampled or a depth image.","Stores a texel value to an image.","","","Initialize the <code>RayQuery</code> object.","","","The interpolation qualifier of a binding or struct field.","","","","","Aborts the current shader execution.","Storage can be used as a source for load ops.","","","","Shader may rewrite depth smaller than one that would have …","","Indicates that linear, non-perspective, correct …","","Literal.","Load a value indirectly.","","","Variable defined at function level.","Reference a local variable.","Indexed location.","","","","","","Executes a block repeatedly.","Call a math function","Built-in shader function for math.","Matrix of numbers.","","","","","","","","Shader module.","Equivalent of the WGSL’s <code>%</code> operator or SPIR-V’s <code>OpFRem</code>","","","","","","","Get the number of array layers.","Get the number of mipmap levels.","Get the number of samples.","","","","","","","","","The value will be interpolated in a perspective-correct …","","","Pointer to another type.","","","Return types predeclared for the frexp, modf, and …","","Private data, per invocation, mutable.","Start or continue the query given by the statement’s …","Push constants.","4D vector","","","","","","","","","","","","","","A strongly typed range of handles.","Locally used handle for ray queries.","","An operation that a <code>RayQuery</code> statement applies to its <code>query</code>…","Return an intersection found by <code>query</code>.","Result of a <code>Proceed</code> <code>RayQuery</code> statement.","","","Call a relational function.","Built-in shader function for testing relation between …","Pipeline binding information for global resources.","Returns from the function (possibly with a value).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Barrier affects all <code>AddressSpace::Storage</code> accesses.","Storage can be used as a target for store ops.","Interpolate the value at each sample location. In …","","Sampling modifier to control the level of detail.","","Regular sampled image.","Can be used to sample values from images.","The sampling qualifiers of a binding or struct field.","","Characteristics of a scalar type.","Number of integral or floating-point kind.","Primitive type for a scalar.","Select between two values based on a condition.","Stage of the programmable pipeline.","","Right shift carries the sign of signed integers only.","","","","Signed integer type.","Get the size at the specified level.","","A human-readable representation for a span, tailored for …","A source code span, used for error reporting.","A source code span together with “context”, a …","Set of special types that can be optionally generated by …","Splat scalar into a vector.","","Instructions which make up an executable block.","","Storage buffer data, potentially mutable.","Storage image.","Flags describing an image.","Image storage format.","Stores a value at an address.","User-defined structure.","Member of a user-defined structure.","","","Conditionally executes one of multiple blocks, based on …","A case for a switch statement.","The value of the switch case.","Vector swizzle.","Component selection for a vector swizzle.","","","","","3D vector","","A data type declared in the module.","Enum with additional information, depending on the kind of …","","","","","Unsigned integer type.","Apply an unary operator.","Operation that can be applied on a single value.","Shader may not rewrite depth value.","Uniform buffer data.","An arena whose elements are guaranteed to be unique.","","","","","","Pointer to a scalar or vector.","Vector of numbers.","Number of components in a vector.","","","","","Barrier affects all <code>AddressSpace::WorkGroup</code> accesses.","","Wrapper class for <code>Error</code>, augmenting it with a list of …","Workgroup shared data, mutable.","","","Load uniformly from a uniform pointer in the workgroup …","Result of a <code>WorkGroupUniformLoad</code> statement.","","","","","","","","Zero value of a type.","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Convert inner error into another type. Joins span …","Adds a new value to the arena, returning a typed handle.","","Apply the usual default interpolation for <code>ty</code> to <code>binding</code>.","","Information about function argumentind the common type of <code>self</code> and <code>other</code> under WGSL’s …","Return <code>true</code> if automatic conversions will covert <code>self</code> to …","Backend functions that export shader <code>Module</code>s into binary …","For I/O structs, defines the binding.","Binding number within the group.","For resources, defines the binding point.","For entry points, an argument has to have a binding unless …","For entry points, the result has to have a binding unless …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Body of the case.","Block of instructions comprising the body of the function.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the canonical form of <code>self</code>, or <code>None</code> if it’s …","Assert that <code>handle</code> is valid for this arena.","Assert that <code>handle</code> is valid for this arena.","Assert that <code>range</code> is valid for this arena.","Clears the arena keeping all allocations","Clears the arena, keeping all allocationshe bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","Constant expressions and override expressions used by this …","Arena for the constants defined in this module.","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …arly depth test for fragment stages.","Emits a summary of the error to standard error stream.","Emits a summary of the error to standard error stream.","Emits a summary of the error to a string.","Emits a summary of the error to a string.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Entry points.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compare <code>self</code> and <code>rhs</code> as types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Expressions used inside this function.","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","If true, the control flow continues to the next case in …","Fetch a handle to an existing type.","Adds a value with a custom check for uniqueness: returns a …","Adds a value with a check for uniqueness, where the check …","return the first and last handles included in <code>self</code>.","Construct a float <code>Scalar</code> with the given width.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a <code>Range</code> that covers the zero-based indices in …","Frontend parsers that consume binary and text shaders and …","The entrance function.","Arena for the functions defined in this module.","Populate this module’s <code>SpecialTypes::predeclared_types</code> …","Populate this module’s <code>SpecialTypes::ray_desc</code> type.","Populate this module’s <code>SpecialTypes::ray_intersection</code> …","Return this arena’s handle for <code>value</code>, if present.","Return this arena’s value at <code>handle</code>, if that is a valid …","Get a mutable reference to an element in the arena.","","Return the span associated with <code>handle</code>.","Arena for the global variables defined in this module.","The bind group index.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the zero-based index of this handle.","","","","","","Return the length of a subscriptable type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The value of the constant.","Initial value for this variable.","Initial value for this variable.","Inner structure that depends on the kind of the type.","Insert a new value into the arena.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codextracts the inner vector.","Reverse of <code>Self::new</code>, discards span information and …","","","","","Convert inner error using <code>From</code>.","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","","Check whether <code>self</code> was defined or is a default/unknown span","Return true if this expression is a dynamic array index, …","","Returns <code>true</code> if the arena contains no elements.","Return <code>true</code> if the arena contains no elements.","","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the statement directly terminates the …","Returns an iterator over the items stored in this arena, …","Returns an iterator over the items stored in this arena, …","Yield a set of contained flags values.","Yield a set of contained flags values.","Returns a iterator over the items stored in this arena, …","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Lists of reserved keywords for each shading language with …","How the value’s bits are to be interpreted.","Returns the current number of items stored in this arena.","Return the current number of items stored in this arena.","","Length in code units (in bytes) of the span.","1-based line number.","1-based column of the start of this span","Local variables defined and used in the function.","Return a <code>SourceLocation</code> for this span in the provided …","Return a <code>SourceLocation</code> for our first span, if we have one.","","The name of the type, if any.","","Name of the variable, if any.","Name of the variable, if any.","Name of the argument, if any.","Name of the function, if any.","Name of this entry point, visible externally.","Map of expressions that have associated variable names","Returns true if the expression is considered emitted at …","Create a new arena with no initial capacity allocated.","Create a new arena with no initial capacity allocated.","","Creates a new <code>Span</code> from a range of byte indices","Create a new <code>WithSpan</code> from an <code>Error</code>, containing no spans.","","Return a range enclosing handles <code>first</code> through <code>last</code>, …","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","0-based Offset in code units (in bytes) of the start of …","Offset from the beginning from the struct.","","Return the global variable being accessed by the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Types for predeclared wgsl types instantiated on demand.","<code>Module</code> processing functionality.","","Get the range of handles from a particular number of …","Type for <code>RayDesc</code>.","Type for <code>RayIntersection</code>.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Replace an old value with a new value.","The result of this function, if any.","Return the scalar type of <code>self</code>.","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Get the size of this type.","","How this variable is to be stored.","","","Iterator over stored <code>SpanContext</code>s.","Dictionary of special type handles.","","Shader stage.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Modifies <code>self</code> to contain the smallest <code>Span</code> possible that …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts <code>self</code> to a range if the span is not unknown","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Formats the type as it is written in wgsl.","Format a scalar kind+width as a type is written in wgsl.","","Formats the type as it is written in wgsl.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Returns the smallest <code>Span</code> possible that contains all the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Type of the field.","","The type of this variable.","The type of this variable.","Type of the argument.","Type of the result.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Arena for the types defined in this module.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Returns a new <code>Span</code> starting at <code>self</code> and ending at <code>other</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shader validator.","Value, upon which the case is considered true.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This size of the value in bytes.","","Add a <code>SpanContext</code>.","Add a new span with description.","Workgroup size for compute stages","","Return the zero-based index range covered by <code>self</code>.","","","","","","Indicates the 2nd input to the blender when dual-source …","","","","","","","","","The index into an arrayed image. If the <code>arrayed</code> flag in …","","","","","","","Boolean expression","If provided, converts to the specified byte width. …","","The coordinate of the texel we wish to load. This must be …","","","","","Source expression, which can only be a scalar or a vector.","","","If Some(), this operation is a gather operation on the …","","The image to load a texel from. This must have type <code>Image</code>. …","","","","Target scalar kind.","","","A level of detail, for mipmapped images.","Expression handle lives in const_expressions","","","","","","","","","A sample index, for multisampled <code>Sampled</code> and <code>Depth</code> images.","","","","","","The type of the result","","","","","Kind of values to sample.","Multi-sampled image.","Multi-sampled depth image.","If <code>None</code>, the base level is considered.","","","","","The acceleration structure within which this query should …","A struct of detailed parameters for the ray query.","","","","","","","","","","","","","Function to run on the atomic.","The specific operation we’re performing on <code>query</code>.","","","","Pointer to an atomic value.","This must be of type <code>Pointer</code> in the <code>WorkGroup</code> address space","The <code>RayQuery</code> object this statement operates on.","","<code>AtomicResult</code> expression representing this function’s …","The <code>WorkGroupUniformLoadResult</code> expression representing …","","","","","","Value to use in the function.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ray flags, for a <code>RayDesc</code>’s <code>flags</code> field.","","","","","Get a flags value with all known bits set.","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","","","","The intersection of a source flags value with the …","","","","Get a flags value with all bits unset.","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","Backend for GLSL (OpenGL Shading Language).","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","","","","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","","Yield a set of contained flags values.","Yield a set of contained named flags values.","Backend for MSL (Metal Shading Language).","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Backend for SPIR-V (Standard Portable Intermediate …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","Flip output Y and extend Z from (0, 1) to (-1, 1).","","Buffer address space support.","Mapping between resources and bindings.","","","","","","","8 byte floats.","Supports ARB_shader_draw_parameters on the host, which …","Dual source blending","Arrays with a dynamic length.","<code>core</code> GLSL.","<code>es</code> GLSL.","The entry point couldn’t be found.","A GLSL compilation error.","","Emit <code>PointSize</code> output builtin to vertex shaders, which is …","More image formats.","Structure used to encode additions to GLSL that aren’t …","A error occurred while writing to the output.","Image load and early depth tests.","Image size query","Include unused global variables, constants and functions. …","Instance index","A image was used with multiple samplers, which isn’t …","","","","The specified <code>Version</code> doesn’t have all required <code>Features</code>.","<code>AddressSpace::PushConstant</code> was used more than once in the …","Interpolation and auxiliary qualifiers.","Configuration used in the <code>Writer</code>.","A subset of options meant to be changed per pipeline.","All information to bind a single uniform value to the …","Reflection info for texture mappings and uniforms.","","Sample ID.","List of supported <code>core</code> GLSL versions.","List of supported <code>es</code> GLSL versions.","Texture levels query","Texture samples query","Supports GL_EXT_texture_shadow_lod on the host, which …","Mapping between a texture and its sampler, if it exists.","A call was made to an unsupported external.","A scalar with an unsupported width was requested.","","A GLSL version.","The specified <code>Version</code> isn’t supported.","Writer responsible for all code generation.","Configuration flags for the <code>Writer</code>.","GL uniform name for the item. This name is the same as if …","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","","","","","","","","","","","","","","","","","","","Map of resources association to binding locations.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all bits unset.","Get a flags value with all bits unset.","The name of the entry point.","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","","The index which can be used for dual source blending. This …","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","","","","","","","","","","","","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The location of the global. This corresponds to …","How many views to render to, if doing multiview rendering.","Creates a new <code>Writer</code> instance.","Create a new gles version","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The offset in the push constant memory block this uniform …","","List of push constant items in the shader.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Handle to the associated sampler global variable, if it …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The stage of the entry point.","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Handle to the image global variable.","Mapping between texture names and variables/samplers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","Type of the uniform. This will only ever be a scalar, …","","","","","","","","","","","","Mapping between uniform variables and names.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","Mapping between names and attribute locations.","The GLSL version to be used.","","","","","","","","","","","","Writes the <code>Module</code> as glsl to the output","Configuration flags for the <code>Writer</code>.","Should workgroup variables be zero initialized (by …","","","","","","","","","","","","","","","","","","","","A subset of options that are meant to be changed per …","","","Information about a translated module that is required for …","","","","","","","","","","","","","","","","Allow <code>BuiltIn::PointSize</code> and inject it if doesn’t exist.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If the binding is an unsized binding array, this overrides …","","","","","","","","","","","","","","","","","","","Bounds checking policies.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mapping of the entry point names. Each item in the array …","","","","","","","","","","","","","","","","","","","","","","Don’t panic on missing bindings, instead generate …","Finishes writing and returns the output.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Samplers to be inlined into the code.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","(Major, Minor) target version of the Metal Shading …","","Creates a new <code>Writer</code> instance.","Map of entry-point resources, indexed by entry point …","","","","","The slot of a buffer that contains an array of <code>u32</code>, one …","","Make it possible to link different stages via SPIRV-Cross.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Should workgroup variables be zero initialized (by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Flip Y coordinate of <code>BuiltIn::Position</code> output.","","","","","","","","","","","","","","","","","","","","","Clamp <code>BuiltIn::FragDepth</code> output between 0 and 1.","","SPIR-V operand kind: Capability","","","","","","","","Include debug labels for everything.","","","","","","","","","","","","","","","","","","","","","","","","Emit <code>PointSize</code> output builtin to vertex shaders, which is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Flags corresponding to the boolean(-ish) parameters to …","","","","","","","","","","","","","","","","Emit <code>OpName</code> for input/output locations. Contrary to spec, …","","","","","","","","","","","","","","","Via <code>VK_KHR_zero_initialize_workgroup_memory</code> or Vulkan 1.3","","","","","","","","","","Via assignments + barrier","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If the binding is an unsized binding array, this overrides …","Map of resources to information about the binding.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","How should generate code handle array, vector, matrix, or …","If given, the set of capabilities modules are allowed to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all bits unset.","Get a flags value with all bits unset.","The name of the entry point.","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","Configuration flags for the writer.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","","","Return the set of capabilities the last module written …","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","","","","","","","","","","","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","(Major, Minor) target version of the SPIR-V.","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The stage of the entry point.","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","","","","","","","","","","","Dictates the way workgroup variables should be zero …","Remove unused types, expressions, and constants from <code>module</code>…","Structure responsible for managing variable lookups and …","A table of types for an <code>Arena&lt;Expression&gt;</code>.","Adds a new variable to the current scope.","Adds a new variable to the root scope.","","","","","","","","","Constructs a new symbol table with a root scope","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Grow this typifier until it contains a type for <code>expr_handle</code>…","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Recompute the type resolution for <code>expr_handle</code>.","","","Perform a lookup for a variable named <code>name</code>.","","Removes the current lexical scope and all its variables","Adds a new lexical scope.","Add an expression’s type to an <code>Arena&lt;Type&gt;</code>.","","","","","","","","","","","","","","","","Frontend for WGSL (WebGPU Shading Language).","","","","","","","","","","","","","","","","","","","","","","","","Emits a summary of the error to standard error stream.","Emits a summary of the error to standard error stream.","Emits a summary of the error to a string.","Emits a summary of the error to a string.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns a <code>SourceLocation</code> for the first label in the error …","","","","","","","","","","","","","","","","","","","","","","","","Keywords for WGSL (WebGPU Shading Language).","","A newtype struct where its only valid values are powers of …","","","","","","Policies for injecting bounds checks during code …","How should code generated by Naga do bounds checks?","","","A context for evaluating constant expressions.","","","","The number of elements is determined at runtime.","","Helper class to emit expressions","","","","","","","","","","","","","","","","","A type stored in the associated arena.","","","The number of elements in an indexable type.","","","","","","","","","","","","","","","","","","","","","Values of this type always have the given number of …","","","Helper processor that derives the sizes of all types.","","","","","","","This processor assigns names to all the things in a module …","","","","","","","","Out-of-bounds reads return zero, and writes have no effect.","","","","Replace out-of-bounds indexes with some arbitrary …","","","","","","","","","","Size and alignment information for a type.","","","The result of computing an expression’s type.","Naga adds no checks to indexing operations. Generate the …","A free-floating <code>TypeInner</code>, representing a type that may …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","How should the generated code handle binding array indexes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","How should the generated code handle array, vector, or …","Return a new identifier based on <code>label_raw</code>.","","Convert the scalar components of <code>expr</code> to <code>target</code>.","Convert the scalar leaves of  <code>expr</code> to <code>target</code>, handling …","Determine which policy applies to <code>base</code>.","Remove all entries from this <code>Layouter</code>, retaining storage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return <code>true</code> if any of <code>self</code>’s policies are <code>policy</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ensure that the given block has return statements at the …","","","","","","","","","","","","","","","","","","","","","","","","Return an iterator over the individual components …","","","","","","","","","","","","","","","","","","","","","","","Return a <code>ConstantEvaluator</code> that will add expressions to …","Return a <code>ConstantEvaluator</code> that will add expressions to …","Return a <code>ConstantEvaluator</code> that will add expressions to …","Return a <code>ConstantEvaluator</code> that will add expressions to …","Forces the the expression to not be const","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Panics","","","","","","","","","","","","","","How should the generated code handle image texel loads …","How should the generated code handle image texel stores …","Definitions for index bounds checking.","","How should the generated code handle array, vector, or …","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether or not <code>n</code> is a multiple of this alignment.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Determine the type of <code>expr</code>.","Round <code>n</code> up to the nearest alignment boundary.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Produce the stride as if this type is a base of an array.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to evaluate <code>expr</code> at compile time.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extend this <code>Layouter</code> with layouts for any new entries in …","","","","","","","","","","","","","","","","","","","","Initialize a resolve context from the module.","","","","","","","","","","","","","Policies for injecting bounds checks during code …","How should code generated by Naga do bounds checks?","The number of elements is determined at runtime.","","An index that may be statically known, or may need to be …","The number of elements in an indexable type.","","","","Values of this type always have the given number of …","Out-of-bounds reads return zero, and writes have no effect.","Replace out-of-bounds indexes with some arbitrary …","","Naga adds no checks to indexing operations. Generate the …","Determine whether <code>index</code> is statically known to be in …","","","How should the generated code handle binding array indexes …","","","How should the generated code handle array, vector, or …","","","","","","","","","Build a set of expressions used as indices, to cache in …","","Returns the argument unchanged.","","How should the generated code handle image texel loads …","How should the generated code handle image texel stores …","How should the generated code handle array, vector, or …","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","This type can be passed as a function argument.","","","","","","","Group, binding, and location attributes.","Statements and blocks of them.","","","","","Support for [<code>Builtin::ClipDistance</code>].","","Constants.","A WGSL constructible type.","Uniformity of control flow for operations that require it.","The data can be copied around.","Support for arrayed cube textures.","Support for [<code>Builtin::CullDistance</code>].","","Allowed IR capabilities.","","","","","","","","","","","","","","","","Can be used for data variables.","","Support for generating two sources for blending from …","","","","Support for <code>early_depth_test</code>.","Expressions.","","","","","","","","","","","","","","Float values with width = 8.","","","","","","","","Indicates how a global variable is used.","","","Can be used for host-shareable structures.","","Can be be used for user-defined IO between pipeline stages.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Support for [<code>Builtin::SampleIndex</code>] and [<code>Sampling::Sample</code>].","Support for [<code>BuiltIn::ViewIndex</code>].","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Support for [<code>Builtin:PrimitiveIndex</code>].","Support for [<code>AddressSpace:PushConstant</code>].","","","The information about the data is queried.","Support for ray queries and acceleration structures.","Data will be read from the variable.","","","","Support for non-uniform indexing of sampled textures and …","Support for non-uniform indexing of samplers.","The data type has a size known by pipeline creation time.","Support for 16-bit normalized storage texture formats.","Host-shareable structure layouts.","Validation flags.","","","","","","","","Flags associated with <code>Type</code>s by <code>Validator</code>.","Support for non-uniform indexing of uniform buffers and …","","","Uniform control flow characteristics.","Kinds of expressions that require uniform control flow.","","","","","","","Validation flags.","","","","Data will be written to the variable.","","","","","","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set of shader stages where calling this function is valid.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates that the function is using dual source blending.","","","","","","","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","","","","","","","","","","","","","","","","","","","","","","","","","","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Function may kill the invocation.","Construct a new validator instance.","A child expression with non-uniform result.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","If this expression requires uniform control flow, store …","Reset the validator internals","All pairs of (texture, sampler) globals that may be used …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Uniformity characteristics.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","","","","","","","","","","","","","","Check the given module to be valid.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes a compute pipeline.","","","","","","","","","","","","","","","","Describes fragment processing in a render pipeline.","","","","Number of implicit bind groups derived at pipeline …","","","","","","","","","","","","","","","","","","","","","","","","Describes a programmable pipeline stage.","","","Describes a render (graphics) pipeline.","","","","","","","","","","","","","","","","Describes how the vertex buffer is interpreted.","Describes the vertex process in a render pipeline.","How a render pipeline will retrieve attributes from a …","","","","","Get a flags value with all known bits set.","The stride, in bytes, between elements of this buffer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The list of attributes which comprise a single vertex.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The format of any vertex buffers used with this pipeline.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","The effect of draw calls on the depth and stencil aspects …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all bits unset.","The name of the entry point in the compiled shader. There …","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The fragment processing state for this pipeline.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","","","","","","","","","","","","","","","","","","","","","Yield a set of contained flags values.","Yield a set of contained named flags values.","","","","","","The layout of bind groups for this pipeline.","The layout of bind groups for this pipeline.","","Whether the buffer is indexed by vertex number or instance …","The compiled shader module for this stage.","The multi-sampling properties of the pipeline.","If the pipeline will be used with a multiview render pass, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The properties of the pipeline at the primitive assembly …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","","The compiled compute stage and its entry point.","The compiled vertex stage and its entry point.","The compiled fragment stage and its entry point.","How often this vertex buffer is “stepped” forward.","The byte stride in the buffer between one attribute value …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The effect of draw calls on the color aspect of the output …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","","","","","","","","","The vertex processing state for this pipeline.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Registry is the primary holder of each resource type Every …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mapping was aborted (by unmapping or destroying the buffer …","","","The buffer is already mapped.","","","","","","","","","The status code provided to the buffer mapping callback.","","","","The context is Lost.","","","","","","","","","A buffer that has been marked as destroyed and is staged …","A texture that has been marked as destroyed and is staged …","","","","","","","Contains the error value","An unknown error.","","","","The buffer is in an invalid state.","","","The range isn’t properly aligned.","","","","","","","","","","","","","","","","","","","The range isn’t fully contained in the buffer.","","","","","","","Incompatible usage flags.","","","","","Mapping was already requested.","","","","","","","","","","AddressMode::ClampToBorder requires feature …","","","","","","","","","Contains the success value","","","","","","","","Information about the wgpu-core resource.","","Describes a <code>Sampler</code>","","A temporary buffer, consumed by the command that uses it.","The Buffer is sucessfully mapped, <code>get_mapped_range</code> can be …","","","","","","","","","Describes a <code>TextureView</code>.","","","","","","","","","","","","","","","","","","","","","How to deal with out of bounds accesses in the u (i.e. x) …","Must be at least 1. If this is not 1, all filter modes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Border color to use when address_mode is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If this is enabled, this is a comparison sampler using the …","Total count of queries the set contains. Must not be zero. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Dimensions of the texture.","The dimension of the texture view.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Format of the texture.","Format of the texture view, or <code>None</code> for the same format as …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Debug label of a buffer. This will show up in graphics …","Debug label of the texture. This will show up in graphics …","Debug label for the query set.","Debug label of the texture view.","Debug label of the sampler.","Maximum level of detail (i.e. mip level) to use","Minimum level of detail (i.e. mip level) to use","How to filter the texture when it needs to be magnified …","Allows a buffer to be mapped immediately after they are …","How to filter the texture when it needs to be minified …","Mip count of texture. For a texture with no extra mips, …","How to filter between mip map levels","Range within the texture that is accessible via this view.","","Sample count of texture. If this is not 1, texture must …","Size of a buffer, in bytes.","Size of the texture. All components must be greater than …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Kind of query that this query set should contain.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Usages of a buffer. If the buffer is used in any way that …","Allowed usages of the texture. If used in other ways, the …","","Specifies what view formats will be allowed when calling …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A table of <code>T</code> values indexed by the id type <code>I</code>.","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","The binding layout is derived from the pipeline layout.","","","","","","","","","","","","","","","","","","","","","The binding layout is provided by the user in BGLs.","","Errors produced when validating a programmable stage of a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks that the given buffer usage contains the required …","","Return true if the fragment <code>format</code> is covered by the …","Checks that the given texture usage contains the required …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codellow the acceleration structure to be compacted in a copy …","Allow for incremental updates (no change in size)","","<code>offset</code> - offset in bytes","","Flags for acceleration structures","","Information of the required size for a corresponding …","","Entries for a single descriptor","","Flags for acceleration structure geometries","<code>offset</code> - offset in bytes","<code>offset</code> - offset in bytes","<code>offset</code> - offset in bytes","<code>first_vertex</code> - offset in the vertex buffer (as number of …","","","","","","","","","","","","","BindGroup descriptor.","","","BindGroupLayout descriptor.","Pipeline layout creation flags.","","","","","","","","","Similar to <code>wgt::BufferUsages</code> but for internal use.","","Updates use source_acceleration_structure if present, else …","","Format can be used as color and input attachment.","Format can be used as color (with blending) and input …","The color target of a renderpass.","Flag used by the wgpu-core texture tracker to say a …","Format can be copied to.","The destination of a hardware copy.","The destination of a hardware copy.","Format can be copied from.","The source of a hardware copy.","The source of a hardware copy.","","","","Encoder for commands in command buffers. Serves as a …","","","","","","","Describes a compute pipeline.","","","","Format can be used as depth-stencil and input attachment.","Read-only depth stencil usage.","Read-write depth stencil usage","","","","","","","","","Drop guard to signal wgpu-hal is no longer using an …","The combination of states that a buffer must exclusively …","The combination of states that a texture must exclusively …","","","Include support for <code>first_vertex</code> / <code>first_instance</code> drawing.","","","Texture format capability flags.","All buffers, buffer addresses and offsets will be ignored.…","The combination of states that a buffer may be in <em>at the </em>…","The combination of states that a texture may be in <em>at the </em>…","The index buffer used for drawing.","The indirect or count buffer in a indirect draw or …","","","","Error occurring while trying to create an instance, or …","","","Optimize for low memory footprint (scratch and output)","","","","","The argument to a read-only mapping.","The argument to a write-only mapping.","","","","","","","Format can be used for render pass resolve targets.","Format can be multisampled by x16.","Format can be multisampled by x2.","Format can be multisampled by x4.","Format can be multisampled by x8.","","","NO_DUPLICATE_ANY_HIT_INVOCATION","Include support for num work groups builtin.","","Naga shader module.","No value.","Is OPAQUE","The combination of all usages that the are guaranteed to …","The combination of all usages that the are guaranteed to …","","","","","Allows for bind group binding arrays to be shorter than …","","","","","Optimize for fast build time","Optimize for fast ray tracing performance","Ready to present image to the surface.","","","","Pipeline layout creation flags.","Describes a programmable pipeline stage.","A buffer used to store query results.","Size of a single occlusion/timestamp query, when copied …","","","","Read-only sampled or fetched resource.","","","","","Describes a render (graphics) pipeline.","","Format can be sampled.","Format can be sampled with a linear sampler.","Format can be sampled with a min/max reduction sampler.","","","Format can be used as storage with write-only access.","Format can be used as storage with atomics.","A read-only storage buffer used in a bind group.","Read-only storage buffer usage. Corresponds to a UAV in …","Format can be used as storage with read and read/write …","A read-write or write-only buffer used in a bind group.","Read-write or write-only storage buffer usage.","","","","","Shader input.","","","Some value of type <code>T</code>.","","","","Describes information about what a <code>Surface</code>’s …","","","","","","","","","","","","Texture format capability flags.","Similar to <code>wgt::TextureUsages</code> but for internal use.","","TextureView descriptor.","","","A uniform buffer bound in a bind group.","The texture is in unknown state.","Flag used by the wgpu-core texture tracker to say that the …","","Stores the text of any validation errors that have …","A vertex buffer used for drawing.","Flag for internal testing.","Describes how the vertex buffer is interpreted.","","","Returns the next texture to be presented by the swapchain …","","","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","The stride, in bytes, between elements of this bufferhe list of attributes which comprise a single vertex.","","","","Begin encoding a new command buffer.","Safety:","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","","Get the underlying bits value.","","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The buffer being bound.","","","","","","The alignment of the start of the buffer used as a GPU …","The alignment of the row pitch of the texture data stored …","","","To get the required sizes for the buffer allocations use …he effect of draw calls on the color aspect of the output …","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Alpha composition mode.","List of supported alpha composition modes.","Configures the surface to use the given device.","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","","Copy from buffer to texture. Works with a single array …","","","Copy from texture to buffer. Works with a single array …","Copy from one texture to another. Works with a single …","","","","","","","Creates a bind group layout.","Creates a new buffer.","","","","","","","","","","Creates a new texture.","","Current extent of the surface, if known.","Source codes for debug","","","","The effect of draw calls on the depth and stencil aspects …he intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","Discard currently recorded list, if anydummy API implementation.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","The upper bound of the range (exclusive).","","","","","","Safety:","","","","","","The name of the entry point in the compiled shader. There …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Exit connection to this logical device.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Requested texture extent. Must be in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Format of the surface textures.","","","List of supported texture formats.","The fragment stage for this pipeline.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns any API validation errors that hav occurred in …","","Creates a <code>PresentationTimestamp</code> using the adapter’s WSI.","","GLES API internals.","","","","","","","","","","","","","","","","Analysis information of the module.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codehether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","","","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if only one flag is set","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","","","","","","","","","","","","","","","","The layout of bind groups for this pipeline.","The layout of bind groups for this pipeline.","","","","","","","","Range for the number of queued frames.","Maximum number of queued frames. Must be in …","","","","","","","","","Shader module IR.","The compiled shader module for this stage.","The multi-sampling properties of the pipeline.","If the pipeline will be used with a multiview render pass, …","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","The offset at which the bound region starts.","","","","","","","Origin within a texture. Note: for 1D and 2D textures, Z …","","","Vertical synchronization mode.","List of supported V-sync modes.","The properties of the pipeline at the primitive assembly …","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Reclaims all resources that are allocated for this encoder.","","","","","","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Sets the bind group at <code>index</code> to <code>group</code>, assuming the layout …","","","","Sets a range in push constant data.","","","","","","","","The size of the region bound, in bytes.","","","","","","","","","","","","","The compiled compute stage and its entry point.","The lower bound of the range (inclusive).","","","How often this vertex buffer is “stepped” forward.","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Submits the command buffers for execution on GPU.","The presentation configuration no longer matches the …","Returns the capabilities of working with a specified …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","Return the set of supported capabilities for a texture …he bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …nconfigures the surface on the given device.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Supported texture usage flags.","","","","","Allowed usage of surface textures,","","","Contains either a single mutating usage as a target, or a …","","","The format of any vertex buffers used with this pipeline.","","","The vertex stage for this pipeline.","","","","Allows views of this texture to have a different format …","Allows views of swapchain texture to have a different …","Vulkan API internals.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calling wait with a lower value than the current fence …","","","","","Maximum binding size for the shaders that only support <code>i32</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A wrapper around a <code>glow::Context</code> and the required EGL …","A guard containing a lock to an <code>AdapterContext</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the underlying EGL context.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the EGL instance.","Returns the EGL version the adapter context was created …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get’s the <code>glow::Context</code> without waiting for a lock","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Obtain a lock to the EGL context and get handle to the …","","","Creates a new external adapter using the specified loader …","","","","","Returns the EGLDisplay corresponding to the adapter …","","","","","","","","","","","","","","","","","","Safety","Safetyser data needed by …","","Qualcomm OOMs when there are zero color attachments but a …","If the following code returns false, then nvidia will end …","","","","","","","","","","","Only generate SPIR-V for one entry point at a time.","","","","","","","","Workaround flags.","","Get a flags value with all known bits set.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Whether all set bits in a source flags value are also set …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the instance extension names wgpu would like to …","","","","","","","","","","","","","","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all bits unset.","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","","","","","","","","","","","","","","","","","","","","","","","","","","","Yield a set of contained flags values.","Yield a set of contained named flags values.","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","<code>features</code> must be the same features used to create …","","","Returns the queue family index of the device’s internal …","","","Safety","","","","","The intersection of a source flags value with the …","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The pending fence values have to be ascending.","","","","","A raw display handle for Android NDK.","Raw display handle for Android.","A raw window handle for Android NDK.","Raw window handle for Android NDK.","A raw window handle for AppKit.","A raw display handle for AppKit.","Raw display handle for AppKit.","Raw window handle for AppKit.","The handle to the display controller of the windowing …","A raw window handle for the Linux Kernel Mode Set/Direct …","A raw display handle for the Linux Kernel Mode Set/Direct …","Raw display handle for the Linux Kernel Mode Set/Direct …","Raw window handle for the Linux Kernel Mode Set/Direct …","A raw window handle for the Linux Generic Buffer Manager.","A raw display handle for the Linux Generic Buffer Manager.","Raw display handle for the Linux Generic Buffer Manager.","Raw window handle for the Linux Generic Buffer Manager.","A raw window handle for Haiku.","A raw display handle for Haiku.","Raw display handle for Haiku.","Raw window handle for Haiku.","An error that can occur while fetching a display or window …","A display that acts as a wrapper around a display handle.","Display that wraps around a raw display handle.","Window that wraps around a raw window handle.","A handle to a window.","The underlying handle cannot be represented using the …","A raw window handle for the Redox operating system.","A raw display handle for the Redox operating system.","Raw display handle for the Redox operating system.","Raw window handle for the Redox operating system.","A display server handle for a particular windowing system.","A window handle for a particular windowing system.","A raw window handle for UIKit (Apple’s non-macOS …","A raw display handle for UIKit (Apple’s non-macOS …","Raw display handle for UIKit.","Raw window handle for UIKit.","The underlying handle is not available.","A raw window handle for Wayland.","A raw display handle for Wayland.","Raw display handle for Wayland.","Raw window handle for Wayland.","A raw window handle for the Web.","A raw display handle for the Web.","A raw window handle for a Web canvas registered via …","Raw window handle for a Web canvas registered via …","Raw display handle for the Web.","A raw window handle for a Web offscreen canvas registered …","Raw window handle for a Web offscreen canvas registered via","Raw window handle for the Web.","A raw window handle for Win32.","Raw window handle for Win32.","A raw window handle for WinRT.","Raw window handle for WinRT.","The handle to a window.","A raw display handle for Win32.","Raw display handle for Windows.","A raw window handle for Xcb.","A raw display handle for Xcb.","Raw display handle for Xcb.","Raw window handle for Xcb.","A raw window handle for Xlib.","A raw display handle for Xlib.","Raw display handle for Xlib.","Raw window handle for Xlib.","A pointer to an <code>ANativeWindow</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the underlying raw display handle.","Get the underlying raw window handle.","","","A pointer to a BDirectWindow object that might be null","A pointer to a BWindow object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a <code>DisplayHandle</code> from a <code>RawDisplayHandle</code>.","Borrow a <code>WindowHandle</code> from a <code>RawWindowHandle</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A pointer to an X server <code>xcb_connection_t</code>.","A WinRT <code>CoreWindow</code> handle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A pointer to an Xlib <code>Display</code>.","A pointer to a <code>wl_display</code>.","Get a handle to the display controller of the windowing …he drm file descriptor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The gbm device.","The gbm surface.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>GWLP_HINSTANCE</code> associated with this type’s <code>HWND</code>.","A Win32 <code>HWND</code> handle.","An ID value inserted into the data attributes of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new empty display handle.","Create a new handle to an <code>ANativeWindow</code>.","Create a new empty display handle.","Create a new handle to a view.","Create a new empty display handle.","Create a new handle to a window.","Create a new empty display handle.","Create a new handle to a window.","Create a new empty display handle.","Create a new handle to a view.","Create a new handle to a display.","Create a new handle to a window.","Create a new handle to a connection and screen.","Create a new handle to a window.","Create a new display handle.","Create a new handle to a surface.","Create a new handle to a file descriptor.","Create a new handle to a plane.","Create a new handle to a device.","Create a new handle to a surface.","Create a new empty display handle.","Create a new handle to a canvas element.","Create a new handle from a pointer to <code>HtmlCanvasElement</code>.","Create a new handle from a pointer to an <code>OffscreenCanvas</code>.","Create a new empty display handle.","Create a new handle to a window.","Create a new handle to a window.","A pointer to an <code>NSView</code> object.","A pointer to the <code>JsValue</code> of an <code>HtmlCanvasElement</code>.","A pointer to the <code>JsValue</code> of an <code>OffscreenCanvas</code>.","The primary drm plane handle.","","","","","An X11 screen to use with this display handle.","An X11 screen to use with this display handle.","A pointer to a <code>wl_surface</codepointer to an <code>UIView</code> object.","A pointer to an <code>UIViewController</code> object, if the view has …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An Xlib visual ID, or 0 if unknown.","An X11 <code>xcb_visualid_t</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A pointer to an orbclient window.","An Xlib <code>Window</code>.","An X11 <code>xcb_window_t</code>.","Get a handle to the window.","","Describes a Buffer when allocating.","Utility methods not meant to be in the main API.","Argument buffer layout for dispatch_indirect commands.","CPU accessible buffer used to download data back from the …","Argument buffer layout for draw_indexed_indirect commands.","Argument buffer layout for draw_indirect commands.","The texture is laid out densely in memory as:","The texture is laid out densely in memory as:","Methods shared by <code>RenderPass</code> and <code>RenderBundleEncoder</code>.","Efficiently performs many buffer writes by sharing and …","Order in which TextureData is laid out in memory.","Aligns a <code>value</code> to an <code>alignment</code>.","","","","","","","","","","","","","","","","","Returns the bytes representation of the struct, ready to …","Returns the bytes representation of the struct, ready to …","Returns the bytes representation of the struct, ready to …","","","Get a set of backend bits from the environment variable …","The value added to the vertex index before indexing into …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contents of a buffer on creation.","Creates a Buffer with data to initialize it.","Upload an entire texture and its mipmaps from a source …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draws primitives from the active vertex buffer(s).","Draws indexed primitives using the active index buffer and …","Draws indexed primitives using the active index buffer and …","Draws primitives from the active vertex buffer(s) based on …","","","","","","","","Choose which DX12 shader compiler to use from the …","","","","","","","","","","","","","Prepare currently mapped buffers for use in a submission.","The first index within the index buffer.","The instance ID of the first instance to draw.","The instance ID of the first instance to draw.","The Index of the first vertex to draw.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Choose which minor OpenGL ES version to use from the …","","","The number of indices to draw.","","","","","","","","Initialize the adapter obeying the WGPU_ADAPTER_NAME …","Initialize the adapter obeying the WGPU_ADAPTER_NAME …","The number of instances to draw.","The number of instances to draw.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Debug label of a buffer. This will show up in graphics …","Version of make_spirv intended for use with …","Create a new staging belt.","Generates a set of backends from a comma separated list of …","Get a power preference from the environment variable …","Asynchronously read the contents of a buffer.","Recall all of the closed buffers back to be reused.","Sets the active bind group for a given bind group index. …","Sets the active index buffer.","Sets the active render pipeline.","<code>wgt::Features::PUSH_CONSTANTS</code> must be enabled on the …","Assign a vertex buffer to a slot.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Usages of a buffer. If the buffer is used in any way that …","The number of vertices to draw.","","","","","","","","Allocate the staging belt slice of <code>size</code> to be uploaded …","The number of work groups in X dimension.","The number of work groups in Y dimension.","The number of work groups in Z dimension.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","",""],"ifc":[1793,1794,1895,1896,2330,2351,2621,2941,2948,3366,3367,3394,3395,4030,4200,4632,6301,7186,7187,7188,7189,7190,7191,7192,14226,38728,38729,39769,39771],"p":[[8,"Any",40419],[8,"DynEq",5165],[4,"NamedKey",0],[3,"AndroidInterface",0],[15,"tuple"],[8,"TypeData",40420],[3,"Box",40421],[4,"Ordering",40422],[3,"Foliage",0],[15,"usize"],[3,"DifferentialId",9244],[15,"bool"],[8,"Hasher",40423],[3,"Formatter",40424],[3,"Error",40424],[4,"Result",40425],[3,"World",1946],[3,"Arc",40426],[3,"Rc",40427],[4,"Option",40428],[15,"str"],[3,"TypeId",40419],[3,"WindowDescriptor",40319],[3,"String",40429],[8,"Into",40430],[3,"RenderId",450],[3,"Components",1250],[3,"Storages",5836],[8,"FnMut",40431],[8,"Deserializer",40432],[8,"Serializer",40433],[3,"Ok",40433],[3,"Error",40434],[3,"BundleExtension",9462],[8,"Bundle",1946],[8,"Clone",40435],[8,"Serializer",40436],[3,"RenderInstructionHandle",498],[3,"RenderInstructionsRecorder",498],[4,"RenderPhase",577],[3,"Ginkgo",9895],[3,"Entity",1946],[3,"RenderPacket",621],[3,"RenderPackage",696],[4,"RenderRecordBehavior",498],[15,"i32"],[3,"RenderPacketStore",621],[8,"DifferentialIdentification",9244],[8,"Deserialize",40432],[8,"Render",577],[3,"Elm",9462],[3,"OnFetch",722],[3,"ElmConfiguration",9683],[3,"AssetContainer",722],[15,"u128"],[15,"u8"],[3,"Vec",40437],[3,"Archetypes",804],[3,"ArchetypeRow",804],[3,"ArchetypeId",804],[3,"ArchetypeGeneration",804],[3,"ArchetypeComponentId",804],[3,"Archetype",804],[8,"Iterator",40438],[3,"ComponentId",1250],[3,"Edges",804],[3,"ArchetypeEntity",804],[15,"slice"],[3,"TableRow",5836],[3,"BundleId",1092],[3,"SystemMeta",6221],[3,"UnsafeWorldCell",7403],[3,"Tick",1250],[4,"StorageType",1250],[3,"RangeFrom",40439],[3,"TableId",5836],[3,"BundleInfo",1092],[3,"Bundles",1092],[3,"MutUntyped",1195],[3,"PtrMut",4204],[3,"Ptr",4204],[3,"Mut",1946],[8,"FnOnce",40431],[8,"Sized",40440],[3,"ComponentTicks",1250],[3,"ComponentInfo",1250],[3,"ComponentDescriptor",1250],[3,"TickCells",1250],[3,"ComponentIdFor",1250],[8,"Component",1946],[15,"u32"],[3,"Layout",40441],[4,"Cow",40442],[3,"Entities",1646],[3,"EntityLocation",1646],[3,"EntityMapper",1646],[3,"HashMap",40443],[3,"ReserveEntitiesIterator",1646],[3,"ManualEventReader",1785],[3,"Events",1946],[8,"Event",1946],[3,"EventId",1785],[3,"EventIterator",1785],[3,"EventIteratorWithId",1785],[3,"EventUpdateSignal",40444],[3,"ResMut",1946],[3,"Res",1946],[8,"Debug",40424],[3,"CompactString",40445],[3,"SmolStr",40446],[3,"Commands",1946],[8,"Command",6221],[3,"Schedule",1946],[8,"IntoSystemConfigs",1946],[8,"System",1946],[4,"NodeConfigs",5165],[8,"IntoSystemSet",1946],[8,"SystemSet",1946],[3,"Interned",40447],[3,"Schedules",1946],[3,"AndThenMarker",40448],[3,"CombinatorSystem",6221],[8,"Condition",1946],[8,"Reflect",40449],[3,"ReflectComponent",1946],[3,"EntityWorldMut",1946],[3,"ReflectResource",1946],[3,"State",1946],[8,"States",1946],[8,"FromReflect",40450],[8,"TypePath",40451],[3,"NextState",1946],[3,"EntityMut",1946],[3,"EntityRef",1946],[3,"Access",4404],[8,"DerefMut",40452],[8,"Resource",1946],[3,"NonSendMut",1946],[3,"OnEnter",1946],[3,"OnExit",1946],[3,"OnTransition",1946],[3,"QueryState",1946],[3,"NopWorldQuery",4404],[8,"WorldQuery",4404],[8,"ReadOnlyWorldQuery",4404],[3,"Ref",1946],[3,"WorldCell",7199],[3,"EventReader",1946],[3,"RemovedComponents",1946],[3,"AppTypeRegistry",1946],[3,"DynamicTupleStruct",40453],[3,"ParallelCommands",1946],[3,"Query",1946],[3,"ScheduleBuildSettings",5165],[8,"IntoSystemSetConfigs",1946],[8,"ScheduleLabel",5165],[3,"In",1946],[8,"Default",40454],[3,"Deferred",1946],[8,"SystemBuffer",6221],[3,"NonSend",1946],[3,"Local",1946],[8,"FromWorld",1946],[8,"Send",40440],[3,"EntityCommands",6221],[8,"PartialEq",40422],[3,"RemovedComponentEntity",5068],[8,"IntoIterator",40455],[3,"ReflectComponentFns",4879],[3,"ReflectResourceFns",4879],[15,"u64"],[4,"QueryEntityError",4404],[4,"QueryComponentError",4404],[4,"ExecutorKind",5165],[15,"array"],[4,"TypeInfo",40456],[4,"QuerySingleError",4404],[3,"TypeRegistration",40420],[3,"ScheduleGraph",5165],[8,"Hash",40423],[3,"WorldId",7199],[3,"RefFetch",40457],[4,"ScheduleBuildError",5165],[3,"OwningPtr",4204],[8,"Sync",40440],[3,"QueryIter",4404],[3,"Cloned",40458],[3,"IntoIter",40428],[3,"Flatten",40459],[3,"Map",40460],[3,"QueryCombinationIter",4404],[8,"ExactSizeIterator",40461],[3,"TupleStructFieldIter",40453],[3,"QueryManyIter",4404],[8,"AsRef",40430],[3,"AdapterSystem",6221],[8,"Fn",40431],[3,"CommandQueue",6221],[3,"NotMarker",40448],[8,"Not",40462],[8,"IntoSystem",1946],[3,"OrElseMarker",40448],[3,"ParamSet",1946],[8,"SystemParam",6221],[3,"QueryParIter",4404],[3,"Pipe",40463],[3,"RemovedComponentReader",5068],[4,"ReflectMut",40449],[4,"ReflectOwned",40449],[4,"ReflectRef",40449],[3,"UnsafeEntityCell",7403],[3,"SystemId",6221],[3,"RemovedSystem",6221],[4,"RegisteredSystemError",6221],[3,"RemovedComponentEvents",5068],[3,"EventWriter",1946],[3,"Table",5836],[3,"SpawnBatchIter",7199],[3,"TryRunScheduleError",7373],[3,"FilteredAccess",4404],[8,"IsAligned",4204],[15,"isize"],[3,"ThinSlicePtr",4204],[3,"Aligned",4204],[3,"Unaligned",4204],[3,"NonZeroUsize",40464],[3,"NonNull",40465],[8,"Copy",40440],[8,"SparseSetIndex",5836],[3,"FilteredAccessSet",4404],[3,"BatchingStrategy",4404],[8,"ArchetypeFilter",4404],[3,"ReflectBundle",4879],[3,"TypeRegistry",40420],[3,"ReflectBundleFns",4879],[3,"ReflectMapEntities",4879],[3,"SystemTypeSet",5165],[3,"AnonymousSet",5165],[3,"BTreeSet",40466],[3,"SystemSchedule",5165],[3,"Dag",5165],[4,"NodeId",5165],[3,"MainThreadExecutor",5165],[4,"LogLevel",5165],[3,"MultiThreadedExecutor",5165],[3,"SimpleExecutor",5165],[3,"SingleThreadedExecutor",5165],[4,"Directed",40467],[3,"GraphMap",40468],[8,"ReadOnlySystem",1946],[3,"SparseSet",5836],[3,"Resources",5836],[3,"Column",5836],[3,"ComponentSparseSet",5836],[3,"Tables",5836],[3,"SparseSets",5836],[3,"ResourceData",5836],[3,"UnsafeCell",40469],[3,"Iter",40470],[8,"EntityCommand",6221],[3,"WithEntity",6221],[3,"SpawnBatch",6221],[3,"InsertOrSpawnBatch",6221],[3,"Insert",6221],[3,"TryInsert",6221],[3,"InitResource",6221],[3,"InsertResource",6221],[3,"RemoveResource",6221],[3,"LogComponents",6221],[3,"SystemState",6221],[3,"Spawn",6221],[3,"Despawn",6221],[3,"Remove",6221],[3,"RunSystem",6221],[8,"Combine",6221],[3,"ExclusiveFunctionSystem",6221],[8,"ExclusiveSystemParamFunction",6221],[3,"FunctionSystem",6221],[8,"SystemParamFunction",1946],[8,"Adapt",6221],[3,"SystemName",6221],[3,"StaticSystemParam",6221],[3,"SystemChangeTick",6221],[8,"ReadOnlySystemParam",6221],[3,"WorldBorrow",7199],[3,"WorldBorrowMut",7199],[3,"Diameter",7498],[3,"InterfaceContext",8694],[3,"Area",8886],[4,"SetDescriptor",7498],[3,"CircleStyle",7498],[3,"Circle",7498],[3,"Color",7690],[3,"Progress",12762],[15,"f32"],[3,"Clipboard",7661],[3,"ColorBuilder",7690],[3,"View",7816],[3,"Compositor",7816],[3,"ViewHandle",7816],[3,"ResponsiveSegment",8219],[3,"SceneCoordinator",11769],[8,"Scene",11769],[3,"Position",9083],[3,"CurrentView",7816],[3,"Layout",7985],[3,"Segmental",7816],[3,"AspectRatio",7985],[4,"Orientation",7985],[4,"Threshold",7985],[3,"ThresholdBound",7985],[3,"LayoutThreshold",7985],[3,"NumericalContext",8694],[3,"Grid",8219],[4,"GapDescriptor",8219],[3,"Layer",8993],[3,"WellFormedSegmentUnitDescriptor",8219],[3,"GridTemplate",8219],[3,"Gap",8219],[4,"Justify",8219],[3,"SegmentUnitDescriptor",8219],[3,"Segment",8219],[4,"SegmentBias",8219],[3,"SegmentUnit",8219],[3,"ResponsiveGrid",8219],[3,"Section",9183],[3,"Coordinate",8694],[4,"GridRelativeValue",8219],[3,"DeviceContext",8694],[3,"PositionAdjust",8694],[8,"CoordinateContext",8694],[3,"Location",9042],[3,"CReprArea",8886],[8,"PartialOrd",40422],[8,"Serialize",40436],[3,"CReprPosition",9083],[15,"f64"],[3,"Differentiable",9244],[3,"Differential",9244],[3,"DifferentialDisable",9244],[3,"DifferentialBundle",9244],[3,"Despawn",9244],[3,"Disabled",9462],[4,"EventStage",9462],[4,"InteractionHandlerTrigger",9462],[4,"ElementStyle",9462],[4,"CoreSet",9683],[4,"ExternalSet",9683],[4,"EmptySetDescriptor",9809],[3,"Tag",9809],[3,"ColorTargetState",13035],[3,"ClearColor",9895],[3,"DepthStencilState",13035],[3,"Device",13035],[3,"ShaderModule",13035],[3,"FragmentState",13035],[3,"Buffer",13035],[8,"Pod",40471],[8,"Zeroable",40472],[3,"MultisampleState",13035],[3,"Path",40473],[3,"Queue",13035],[3,"Sampler",13035],[3,"BindGroupEntry",13035],[3,"BindGroupLayoutEntry",13035],[3,"TextureView",13035],[3,"Texture",13035],[3,"PrimitiveState",13035],[3,"Uniform",10009],[3,"AlignedUniform",10009],[3,"ViewportHandle",10071],[3,"Viewport",10071],[4,"SetDescriptor",10137],[4,"FeatherIcon",10137],[3,"Icon",10137],[3,"IconId",10137],[3,"IconScale",10137],[3,"ImageData",10641],[3,"Image",10641],[3,"ImageStorage",10641],[3,"ImageId",10641],[3,"InstanceCoordinator",10805],[8,"Eq",40422],[3,"InstanceCoordinatorBuilder",10805],[3,"InteractionListener",10872],[3,"MouseAdapter",10872],[4,"MouseButton",40474],[4,"ElementState",40474],[3,"KeyboardEvent",10872],[3,"InteractionId",10872],[4,"InteractionPhase",10872],[3,"Interaction",10872],[4,"InteractionShape",10872],[3,"PrimaryInteraction",10872],[3,"KeyboardAdapter",10872],[3,"PrimaryInteractionEntity",10872],[3,"FocusedEntity",10872],[4,"TouchPhase",40474],[4,"Key",40475],[3,"Modifiers",40474],[3,"InteractionEvent",10872],[3,"ScaleFactor",40319],[4,"JobSyncPoint",11279],[3,"Idle",11279],[3,"Job",11279],[3,"Exit",11279],[4,"ExecutionState",11279],[3,"Href",11464],[3,"HrefLink",11464],[4,"SetDescriptor",11566],[3,"PanelStyle",11566],[3,"Panel",11566],[3,"PanelContentArea",11566],[3,"Rectangle",11729],[3,"SceneHandle",11769],[3,"SceneAccessChain",11769],[3,"Anchor",11769],[3,"SceneBinder",11769],[3,"SceneBinding",11769],[3,"SceneAlignment",12049],[3,"IndexSet",40476],[3,"HashSet",40477],[4,"SceneTarget",11769],[3,"BindingCoordinate",11769],[3,"AlignmentPoint",12049],[3,"LayerAlignment",12049],[3,"PositionAlignment",12049],[3,"AlignmentDisable",12049],[4,"AlignmentBias",12049],[3,"FontSize",12244],[3,"MaxCharacters",12244],[3,"MonospacedFont",12519],[3,"CharacterDimension",12244],[4,"SetDescriptor",12244],[3,"Text",12244],[3,"GlyphColorChanges",12244],[3,"TextValue",12244],[3,"TextureAtlas",12549],[3,"AtlasBlock",12549],[3,"TextureAtlasLocation",12549],[3,"AtlasEntry",12549],[3,"IterMut",40478],[3,"TexturePartition",12691],[4,"TextureFormat",13035],[3,"TextureCoordinates",12691],[3,"MipsLevel",12762],[3,"FixedAtlas",12852],[3,"Time",12881],[3,"Duration",40479],[3,"Instant",40480],[3,"Timer",12916],[4,"VirtualKeyboardType",12970],[3,"VirtualKeyboardAdapter",12970],[3,"Backends",13035],[3,"Features",13035],[3,"InstanceFlags",13035],[3,"DownlevelFlags",13035],[3,"ShaderStages",13035],[3,"TextureFormatFeatureFlags",13035],[3,"ColorWrites",13035],[3,"BufferUsages",13035],[3,"TextureUsages",13035],[3,"PipelineStatisticsTypes",13035],[4,"BindingResource",13035],[3,"BufferBinding",13035],[3,"Surface",13035],[3,"Instance",13035],[3,"Adapter",13035],[3,"ImageCopyTextureBase",13035],[3,"QueueWriteBufferView",13035],[3,"BufferViewMut",13035],[3,"BufferView",13035],[4,"TextureAspect",13035],[3,"CommandEncoder",13035],[3,"ComputePassDescriptor",13035],[3,"ComputePass",13035],[3,"RenderPass",13035],[3,"QuerySet",13035],[3,"RenderPassDescriptor",13035],[3,"Limits",13035],[3,"ImageSubresourceRange",13035],[4,"Backend",13035],[4,"PowerPreference",13035],[3,"RequestAdapterOptionsBase",13035],[3,"DownlevelCapabilities",13035],[4,"ShaderModel",13035],[4,"DeviceType",13035],[3,"AdapterInfo",13035],[4,"TextureViewDimension",13035],[4,"BlendFactor",13035],[3,"Id",13035],[4,"BlendOperation",13035],[3,"BlendComponent",13035],[3,"BlendState",13035],[4,"PrimitiveTopology",13035],[4,"FrontFace",13035],[4,"Face",13035],[4,"ErrorFilter",13035],[4,"PolygonMode",13035],[3,"SubmissionIndex",13035],[3,"BufferSlice",13035],[4,"ShaderSource",13035],[3,"ShaderModuleDescriptor",13035],[3,"TextureFormatFeatures",13035],[4,"AstcBlock",13035],[4,"AstcChannel",13035],[4,"LoadOp",13035],[4,"StoreOp",13035],[3,"Operations",13035],[3,"RenderPassTimestampWrites",13035],[3,"RenderPassColorAttachment",13035],[3,"RenderPassDepthStencilAttachment",13035],[3,"TextureViewDescriptor",13035],[3,"PipelineLayoutDescriptor",13035],[3,"SamplerDescriptor",13035],[3,"BindGroupDescriptor",13035],[3,"VertexBufferLayout",13035],[3,"VertexState",13035],[4,"MaintainBase",13035],[3,"RenderPipelineDescriptor",13035],[3,"StencilState",13035],[3,"ComputePassTimestampWrites",13035],[3,"DepthBiasState",13035],[3,"ComputePipelineDescriptor",13035],[4,"IndexFormat",13035],[3,"BindGroupLayoutDescriptor",13035],[4,"StencilOperation",13035],[3,"RenderBundleEncoderDescriptor",13035],[3,"StencilFaceState",13035],[4,"SurfaceError",13035],[4,"CompareFunction",13035],[3,"RequestDeviceError",13035],[3,"CreateSurfaceError",13035],[4,"VertexStepMode",13035],[3,"BufferAsyncError",13035],[3,"VertexAttribute",13035],[4,"MapMode",13035],[4,"VertexFormat",13035],[4,"PresentMode",13035],[4,"CompositeAlphaMode",13035],[3,"PresentationTimestamp",13035],[3,"Color",13035],[4,"TextureDimension",13035],[3,"Origin2d",13035],[3,"Origin3d",13035],[3,"Extent3d",13035],[4,"AddressMode",13035],[4,"FilterMode",13035],[3,"PushConstantRange",13035],[3,"CommandBufferDescriptor",13035],[3,"RenderBundleDepthStencil",13035],[3,"ImageDataLayout",13035],[4,"BufferBindingType",13035],[4,"TextureSampleType",13035],[4,"StorageTextureAccess",13035],[4,"SamplerBindingType",13035],[4,"BindingType",13035],[3,"ImageCopyBufferBase",13035],[4,"PredefinedColorSpace",13035],[3,"ImageCopyTextureTaggedBase",13035],[4,"SamplerBorderColor",13035],[4,"QueryType",13035],[4,"Dx12Compiler",13035],[4,"Gles3MinorVersion",13035],[4,"DeviceLostReason",13035],[3,"SurfaceConfiguration",40481],[3,"ExposedAdapter",33679],[8,"HalApi",23455],[3,"BindGroup",13035],[3,"BindGroupLayout",13035],[3,"BufferDescriptor",40481],[3,"BufferInitDescriptor",40044],[3,"CommandEncoderDescriptor",40481],[3,"ComputePipeline",13035],[3,"OpenDevice",33679],[3,"DeviceDescriptor",40481],[3,"PipelineLayout",13035],[3,"QuerySetDescriptor",40481],[3,"RenderBundleEncoder",13035],[3,"RenderPipeline",13035],[3,"ShaderModuleDescriptorSpirV",13035],[4,"SurfaceTarget",13035],[4,"SurfaceTargetUnsafe",13035],[3,"TextureDescriptor",40481],[4,"TextureDataOrder",40044],[3,"SurfaceCapabilities",13035],[3,"InstanceDescriptor",13035],[3,"Range",40439],[3,"CommandBuffer",13035],[3,"RenderBundle",13035],[3,"SurfaceTexture",13035],[3,"RenderBundleDescriptor",40481],[4,"Error",13035],[4,"SurfaceStatus",13035],[8,"WindowHandle",13035],[4,"RequestDeviceError",23718],[3,"InstanceError",33679],[3,"Instance",23718],[4,"HandleError",38705],[8,"HasDisplayHandle",38705],[8,"HasWindowHandle",38705],[3,"GlobalReport",23270],[4,"MaintainResult",13035],[3,"Iter",40482],[3,"IterNames",40482],[8,"WasmNotSend",13035],[8,"UncapturedErrorHandler",13035],[8,"Future",40483],[8,"RangeBounds",40439],[8,"Error",40484],[3,"NonZeroU64",40464],[3,"AnySurface",19511],[3,"HalSurface",23718],[3,"BindGroupLayout",19544],[3,"Api",36920],[3,"Id",23578],[3,"ResourceInfo",32201],[3,"PipelineLayout",19544],[3,"BindGroup",19544],[4,"BindGroupLayoutEntryError",19544],[4,"CreateBindGroupLayoutError",19544],[4,"CreateBindGroupError",19544],[4,"BindingZone",19544],[3,"BindingTypeMaxCountError",19544],[4,"BindingTypeMaxCountErrorKind",19544],[3,"BindGroupEntry",19544],[3,"BindGroupDescriptor",19544],[3,"BindGroupLayoutDescriptor",19544],[4,"CreatePipelineLayoutError",19544],[4,"PushConstantUploadError",19544],[3,"PipelineLayoutDescriptor",19544],[3,"BufferBinding",19544],[4,"BindingResource",19544],[4,"BindError",19544],[4,"GetBindGroupLayoutError",19544],[3,"LateMinBufferBindingSizeMismatch",19544],[3,"BindGroupDynamicBindingData",19544],[3,"ErrorFormatter",23191],[3,"MissingDownlevelFlags",22321],[3,"MissingFeatures",22321],[4,"DeviceError",22321],[4,"UsageConflict",40485],[3,"MissingTextureUsageError",33298],[3,"MissingBufferUsageError",33298],[3,"CommandBuffer",20425],[3,"RenderBundle",20425],[3,"RenderBundleEncoderDescriptor",20425],[4,"CreateRenderBundleError",20425],[4,"ExecutionError",20425],[3,"RenderBundleError",20425],[4,"ClearError",20425],[3,"ComputePassTimestampWrites",20425],[3,"ComputePassDescriptor",20425],[4,"DispatchError",20425],[4,"ComputePassErrorInner",20425],[3,"ComputePassError",20425],[4,"DrawError",20425],[4,"RenderCommandError",20425],[3,"Rect",20425],[4,"SimplifiedQueryType",20425],[4,"QueryError",20425],[4,"QueryUseError",20425],[4,"ResolveError",20425],[4,"LoadOp",20425],[4,"StoreOp",20425],[3,"PassChannel",20425],[3,"RenderPassColorAttachment",20425],[3,"RenderPassDepthStencilAttachment",20425],[4,"RenderPassTimestampLocation",20425],[3,"RenderPassTimestampWrites",20425],[3,"RenderPassDescriptor",20425],[4,"AttachmentErrorLocation",20425],[4,"ColorAttachmentError",20425],[4,"RenderPassErrorInner",20425],[3,"RenderPassError",20425],[4,"CopySide",20425],[4,"TransferError",20425],[4,"CopyError",20425],[3,"BasePassRef",20425],[4,"CommandEncoderError",20425],[4,"PassErrorScope",20425],[3,"Device",22321],[3,"RenderBundleEncoder",20425],[3,"ComputePass",20425],[3,"RenderPass",20425],[4,"RenderPassCompatibilityError",22321],[4,"RenderCommand",40486],[3,"BasePass",40487],[3,"Buffer",32201],[15,"i8"],[3,"RenderPipeline",31196],[3,"QuerySet",32201],[3,"ComputePipeline",31196],[4,"WaitIdleError",22321],[4,"HostMap",22321],[4,"RenderPassCompatibilityCheckType",22321],[3,"InvalidDevice",22321],[3,"ImplicitPipelineContext",22321],[3,"UserClosures",22321],[3,"DeviceLostClosureRust",22321],[3,"DeviceLostClosureC",22321],[4,"DeviceError",33679],[3,"DeviceLostClosure",22321],[3,"AnyDevice",22857],[3,"Queue",22886],[3,"WrappedSubmissionIndex",22886],[3,"InvalidQueue",22886],[4,"QueueWriteError",22886],[4,"QueueSubmitError",22886],[4,"TempResource",22886],[4,"BufferAccessError",32201],[3,"SubmittedWorkDoneClosureC",22886],[3,"SubmittedWorkDoneClosure",22886],[4,"CreateDeviceError",23152],[3,"ContextError",23191],[8,"Write",40424],[3,"IdentityManagerFactory",23653],[3,"Global",23270],[8,"Display",40424],[3,"Sampler",32201],[3,"Texture",32201],[3,"TextureView",32201],[3,"Adapter",23718],[8,"GlobalIdentityHandlerFactory",23653],[3,"InvalidAdapter",23718],[3,"Surface",23718],[4,"IsSurfaceSupportedError",23718],[4,"DestroyError",32201],[3,"BufferMapOperation",32201],[4,"CreateBufferError",32201],[4,"CreateTextureError",32201],[3,"ComputePipelineDescriptor",31196],[3,"ImplicitPipelineIds",22321],[4,"CreateComputePipelineError",31196],[4,"CreateQuerySetError",32201],[3,"RenderPipelineDescriptor",31196],[4,"CreateRenderPipelineError",31196],[3,"SamplerDescriptor",32201],[4,"CreateSamplerError",32201],[3,"ShaderModuleDescriptor",31196],[4,"ShaderModuleSource",31196],[3,"ShaderModule",31196],[4,"CreateShaderModuleError",31196],[4,"AdapterInputs",23718],[3,"HubReport",23461],[4,"RawDisplayHandle",38705],[4,"RawWindowHandle",38705],[3,"StagingBuffer",32201],[4,"RequestAdapterError",23718],[4,"ConfigureSurfaceError",31998],[4,"GetSurfaceSupportError",23718],[3,"SurfaceOutput",31998],[4,"SurfaceError",31998],[3,"RegistryReport",32127],[3,"TextureViewDescriptor",32201],[4,"CreateTextureViewError",32201],[4,"TextureViewDestroyError",32201],[3,"Hub",23461],[8,"WasmNotSendSync",13035],[3,"ObjectId",40488],[3,"IdentityManager",23653],[8,"TypedId",23578],[3,"FailedLimit",23718],[3,"SurfaceCapabilities",33679],[4,"AddressSpace",24089],[3,"StorageAccess",24089],[3,"Barrier",24089],[3,"WithSpan",24089],[3,"Arena",24089],[3,"Span",24089],[3,"Handle",24089],[3,"Block",24089],[4,"Binding",24089],[4,"TypeInner",24089],[4,"MathFunction",24089],[3,"Scalar",24089],[3,"Type",24089],[3,"UniqueArena",24089],[3,"BadHandle",40489],[3,"Range",24089],[3,"BadRangeError",40489],[3,"SourceLocation",24089],[3,"EarlyDepthTest",24089],[4,"ConservativeDepth",24089],[4,"ShaderStage",24089],[4,"BuiltIn",24089],[4,"VectorSize",24089],[4,"ScalarKind",24089],[4,"ArraySize",24089],[4,"Interpolation",24089],[4,"Sampling",24089],[3,"StructMember",24089],[4,"ImageDimension",24089],[4,"StorageFormat",24089],[4,"ImageClass",24089],[4,"Literal",24089],[4,"Override",24089],[3,"Constant",24089],[3,"ResourceBinding",24089],[3,"GlobalVariable",24089],[3,"LocalVariable",24089],[4,"UnaryOperator",24089],[4,"BinaryOperator",24089],[4,"AtomicFunction",24089],[4,"DerivativeControl",24089],[4,"DerivativeAxis",24089],[4,"RelationalFunction",24089],[4,"SampleLevel",24089],[4,"ImageQuery",24089],[4,"SwizzleComponent",24089],[4,"Expression",24089],[4,"SwitchValue",24089],[3,"SwitchCase",24089],[4,"RayQueryFunction",24089],[4,"Statement",24089],[3,"FunctionArgument",24089],[3,"FunctionResult",24089],[3,"Function",24089],[3,"EntryPoint",24089],[4,"PredeclaredType",24089],[3,"SpecialTypes",24089],[3,"Module",24089],[4,"TypeResolution",28972],[4,"IndexableLength",28972],[4,"IndexableLengthError",28972],[8,"From",40430],[8,"DoubleEndedIterator",40490],[3,"GlobalCtx",28972],[8,"ToString",40429],[3,"RayFlag",26875],[3,"Features",26966],[3,"WriterFlags",26966],[4,"Version",26966],[3,"Options",26966],[3,"PipelineOptions",26966],[3,"TextureMapping",26966],[3,"PushConstantItem",26966],[3,"VaryingLocation",26966],[3,"ReflectionInfo",26966],[4,"Error",26966],[3,"ModuleInfo",29786],[3,"BoundsCheckPolicies",28972],[3,"Writer",26966],[15,"u16"],[4,"BindSamplerTarget",27459],[3,"BindTarget",27459],[3,"EntryPointResources",27459],[4,"EntryPointError",27459],[3,"Options",27459],[3,"PipelineOptions",27459],[3,"Writer",27459],[4,"Error",27459],[3,"TranslationInfo",27459],[4,"Coord",27828],[4,"Address",27828],[4,"BorderColor",27828],[4,"Filter",27828],[4,"CompareFunc",27828],[3,"InlineSampler",27828],[3,"ImageTypeFlags",28108],[3,"WriterFlags",28108],[4,"Error",28108],[3,"DebugInfo",28108],[4,"Capability",28108],[3,"BindingInfo",28108],[4,"ZeroInitializeWorkgroupMemoryMode",28108],[3,"Options",28108],[3,"PipelineOptions",28108],[3,"Writer",28108],[3,"FxHasher",40491],[3,"BuildHasherDefault",40423],[3,"SymbolTable",28831],[3,"Typifier",28831],[3,"ResolveContext",28972],[4,"ResolveError",28972],[8,"Borrow",40492],[3,"ParseError",28900],[3,"Frontend",28900],[3,"Namer",28972],[3,"ConstantEvaluator",28972],[4,"ConstantEvaluatorError",28972],[3,"FunctionInfo",29786],[4,"BoundsCheckPolicy",28972],[3,"Layouter",28972],[3,"Alignment",28972],[3,"TypeLayout",28972],[4,"LayoutErrorInner",28972],[3,"LayoutError",28972],[3,"Emitter",28972],[4,"NameKey",28972],[3,"ExpressionConstnessTracker",28972],[4,"LiteralError",29786],[3,"HashMap",40478],[4,"GuardedIndex",29736],[3,"BitSet",40493],[3,"UniformityRequirements",29786],[3,"GlobalUse",29786],[3,"TypeFlags",29786],[3,"ValidationFlags",29786],[3,"Capabilities",29786],[3,"ShaderStages",29786],[3,"Uniformity",29786],[3,"ExpressionInfo",29786],[4,"ComposeError",29786],[4,"ExpressionError",29786],[4,"ConstExpressionError",29786],[4,"CallError",29786],[4,"LocalVariableError",29786],[4,"FunctionError",29786],[4,"GlobalVariableError",29786],[4,"VaryingError",29786],[4,"EntryPointError",29786],[4,"Disalignment",29786],[4,"TypeError",29786],[4,"ConstantError",29786],[4,"ValidationError",29786],[3,"Validator",29786],[4,"WidthError",40494],[4,"AtomicError",40495],[4,"InvalidHandleError",40496],[3,"FwdDepError",40496],[3,"PipelineFlags",31196],[3,"ShaderError",31196],[3,"ProgrammableStageDescriptor",31196],[4,"ImplicitLayoutError",31196],[3,"VertexBufferLayout",31196],[3,"VertexState",31196],[3,"FragmentState",31196],[4,"ColorStateError",31196],[4,"DepthStencilStateError",31196],[3,"VertexStep",31196],[4,"StageError",33298],[3,"Registry",32127],[8,"Resource",32201],[3,"Storage",33271],[3,"TextureSelector",40497],[4,"TextureErrorDimension",32201],[4,"TextureDimensionError",32201],[4,"TextureViewNotRenderableReason",32201],[4,"SamplerFilterErrorType",32201],[3,"DestroyedBuffer",32201],[3,"DestroyedTexture",32201],[4,"BufferMapAsyncStatus",32201],[3,"BufferMapCallback",32201],[4,"TextureClearMode",32201],[3,"BufferMapCallbackC",32201],[3,"Interface",33298],[4,"BindingLayoutSource",33298],[3,"InterfaceVar",33298],[3,"NumericType",33298],[4,"BindingError",33298],[4,"FilteringError",33298],[4,"InputError",33298],[3,"AcquiredSurfaceTexture",33679],[4,"SurfaceError",33679],[3,"PipelineLayoutFlags",33679],[3,"BindGroupLayoutFlags",33679],[3,"TextureFormatCapabilities",33679],[3,"FormatAspects",33679],[3,"MemoryFlags",33679],[3,"AccelerationStructureBuildFlags",33679],[3,"AttachmentOps",33679],[3,"AccelerationStructureGeometryFlags",33679],[3,"BufferUses",33679],[3,"TextureUses",33679],[3,"AccelerationStructureUses",33679],[3,"TextureDescriptor",33679],[3,"CopyExtent",33679],[3,"ComputePassDescriptor",33679],[3,"RenderPassDescriptor",33679],[3,"TextureCopy",33679],[3,"BufferTextureCopy",33679],[4,"ShaderError",33679],[4,"PipelineError",33679],[3,"InstanceDescriptor",33679],[3,"Alignments",33679],[3,"Capabilities",33679],[3,"BufferMapping",33679],[3,"BufferDescriptor",33679],[3,"TextureViewDescriptor",33679],[3,"SamplerDescriptor",33679],[3,"BindGroupLayoutDescriptor",33679],[3,"PipelineLayoutDescriptor",33679],[8,"Api",33679],[3,"BufferBinding",33679],[3,"TextureBinding",33679],[3,"BindGroupEntry",33679],[3,"BindGroupDescriptor",33679],[3,"CommandEncoderDescriptor",33679],[3,"DebugSource",33679],[3,"ProgrammableStage",33679],[3,"ComputePipelineDescriptor",33679],[3,"VertexBufferLayout",33679],[3,"RenderPipelineDescriptor",33679],[3,"SurfaceConfiguration",33679],[3,"Rect",33679],[3,"BufferBarrier",33679],[3,"TextureBarrier",33679],[3,"BufferCopy",33679],[3,"TextureCopyBase",33679],[3,"Attachment",33679],[3,"ColorAttachment",33679],[3,"DepthStencilAttachment",33679],[3,"RenderPassTimestampWrites",33679],[3,"ComputePassTimestampWrites",33679],[3,"AccelerationStructureDescriptor",33679],[4,"AccelerationStructureFormat",33679],[4,"AccelerationStructureBuildMode",33679],[3,"AccelerationStructureBuildSizes",33679],[3,"BuildAccelerationStructureDescriptor",33679],[3,"GetAccelerationStructureBuildSizesDescriptor",33679],[3,"AccelerationStructureTriangles",33679],[3,"AccelerationStructureAABBs",33679],[3,"AccelerationStructureInstances",33679],[3,"AccelerationStructureTriangleIndices",33679],[3,"AccelerationStructureTriangleTransform",33679],[3,"AccelerationStructureBarrier",33679],[3,"ShaderModuleDescriptor",33679],[4,"ShaderInput",33679],[3,"NagaShader",33679],[4,"AccelerationStructureEntries",33679],[4,"AllocationError",40498],[4,"MapError",40499],[4,"AllocationError",40499],[3,"Result",40500],[3,"ValidationCanary",33679],[3,"Context",36920],[3,"Encoder",36920],[3,"Resource",36920],[3,"Adapter",37128],[3,"AdapterContext",37128],[3,"CommandEncoder",37128],[3,"Api",37128],[3,"QuerySet",37128],[3,"Buffer",37128],[3,"TextureFormatDesc",37128],[4,"TextureInner",37128],[3,"TextureView",37128],[3,"Device",37128],[3,"Texture",37128],[3,"BindGroup",37128],[3,"BindGroupLayout",37128],[3,"ComputePipeline",37128],[3,"Fence",37128],[3,"PipelineLayout",37128],[3,"RenderPipeline",37128],[3,"Sampler",37128],[3,"ShaderModule",37128],[3,"CommandBuffer",37128],[3,"AdapterContextLock",37128],[3,"Library",40501],[3,"EGL1_4",40502],[3,"Dynamic",40502],[3,"Instance",40502],[3,"Queue",37128],[3,"RawMutex",40503],[3,"Context",40504],[3,"MutexGuard",40505],[3,"Surface",40506],[4,"c_void",40507],[3,"Display",40508],[3,"NonZeroU32",40464],[3,"Surface",37840],[3,"Api",37840],[3,"Workarounds",37840],[3,"CommandEncoder",37840],[3,"QuerySet",37840],[3,"SurfaceTexture",37840],[3,"Texture",37840],[3,"Buffer",40509],[3,"Buffer",37840],[3,"Device",37840],[3,"AccelerationStructure",37840],[3,"BindGroup",37840],[3,"BindGroupLayout",37840],[3,"ComputePipeline",37840],[4,"Fence",37840],[3,"PipelineLayout",37840],[3,"RenderPipeline",37840],[3,"Sampler",37840],[4,"ShaderModule",37840],[3,"Instance",37840],[3,"TextureView",37840],[3,"Entry",40510],[3,"CStr",40511],[3,"Adapter",37840],[3,"Device",40512],[3,"InstanceShared",37840],[3,"CommandBuffer",37840],[3,"Queue",37840],[3,"PhysicalDevice",40509],[3,"DebugUtilsMessengerUserData",37840],[3,"Instance",40513],[3,"DebugUtilsCreateInfo",37840],[3,"PhysicalDeviceCapabilities",40514],[3,"PhysicalDeviceFeatures",40514],[3,"Image",40509],[3,"Queue",40509],[3,"DisplayHandle",38705],[3,"WindowHandle",38705],[3,"AndroidDisplayHandle",38705],[3,"AndroidNdkWindowHandle",38705],[3,"AppKitDisplayHandle",38705],[3,"AppKitWindowHandle",38705],[3,"HaikuDisplayHandle",38705],[3,"HaikuWindowHandle",38705],[3,"OrbitalDisplayHandle",38705],[3,"OrbitalWindowHandle",38705],[3,"UiKitDisplayHandle",38705],[3,"UiKitWindowHandle",38705],[3,"XlibDisplayHandle",38705],[3,"XlibWindowHandle",38705],[3,"XcbDisplayHandle",38705],[3,"XcbWindowHandle",38705],[3,"WaylandDisplayHandle",38705],[3,"WaylandWindowHandle",38705],[3,"DrmDisplayHandle",38705],[3,"DrmWindowHandle",38705],[3,"GbmDisplayHandle",38705],[3,"GbmWindowHandle",38705],[3,"WebDisplayHandle",38705],[3,"WebWindowHandle",38705],[3,"WebCanvasWindowHandle",38705],[3,"WebOffscreenCanvasWindowHandle",38705],[3,"WindowsDisplayHandle",38705],[3,"Win32WindowHandle",38705],[3,"WinRtWindowHandle",38705],[3,"NonZeroIsize",40464],[8,"Add",40515],[8,"Rem",40515],[8,"Sub",40515],[3,"DrawIndirectArgs",40044],[3,"DrawIndexedIndirectArgs",40044],[3,"DispatchIndirectArgs",40044],[3,"DownloadBuffer",40044],[3,"StagingBelt",40044],[3,"Mutex",40516],[3,"WorkflowConnectionBase",40380],[8,"Workflow",40380],[8,"RenderIdentification",450],[6,"RenderPacketDifferential",621],[8,"DetectChangesMut",1946],[8,"DetectChanges",1946],[8,"ComponentStorage",1250],[3,"TableStorage",1250],[3,"SparseStorage",1250],[8,"MapEntities",1646],[3,"Has",1946],[3,"AnyOf",1946],[3,"With",1946],[3,"Without",1946],[3,"Or",1946],[3,"Added",1946],[3,"Changed",1946],[8,"UnsafeCellDeref",4204],[8,"ReflectCommandExt",4879],[6,"SystemConfigs",5165],[6,"SystemSetConfigs",5165],[3,"NodeConfig",5165],[13,"Configs",5810],[8,"ExclusiveSystemParam",6221],[8,"RunSystemOnce",6221],[8,"SegmentUnitDesc",8219],[8,"BundleExtend",9462],[8,"Fetch",9462],[8,"Leaf",9809],[8,"Leaves",9809],[3,"Msaa",9984],[6,"Key",10872],[6,"State",10872],[3,"Media",11464],[8,"SceneAligner",12049],[6,"Label",13035],[6,"Maintain",13035],[6,"SurfaceConfiguration",13035],[6,"ImageCopyTexture",13035],[6,"ImageCopyTextureTagged",13035],[6,"ImageCopyBuffer",13035],[6,"RequestAdapterOptions",13035],[6,"QuerySetDescriptor",13035],[6,"TextureDescriptor",13035],[6,"DeviceDescriptor",13035],[6,"BufferDescriptor",13035],[6,"CommandEncoderDescriptor",13035],[6,"RenderBundleDescriptor",13035],[13,"StorageTexture",19454],[13,"Buffer",19454],[13,"Texture",19454],[13,"Storage",19463],[13,"Dxc",19464],[13,"Validation",19466],[13,"OutOfMemory",19466],[13,"RawHandle",19469],[13,"Astc",19471],[13,"Float",19473],[6,"Label",19474],[13,"MismatchedDynamicOffsetCount",20345],[13,"UnalignedDynamicBinding",20345],[13,"DynamicBindingOutOfBounds",20345],[13,"BindingArrayPartialLengthMismatch",20361],[13,"BindingArrayLengthMismatch",20361],[13,"BindingSizeTooSmall",20361],[13,"BindingsNumMismatch",20361],[13,"WrongBindingType",20361],[13,"BufferRangeTooLarge",20361],[13,"InvalidTextureMultisample",20361],[13,"InvalidTextureSampleType",20361],[13,"InvalidTextureDimension",20361],[13,"InvalidStorageTextureFormat",20361],[13,"InvalidStorageTextureMipLevelCount",20361],[13,"WrongSamplerComparison",20361],[13,"WrongSamplerFiltering",20361],[13,"BindingRangeTooLarge",20361],[13,"Entry",20399],[13,"InvalidBindingIndex",20399],[13,"TooManyGroups",20403],[13,"MisalignedPushConstantRange",20403],[13,"MoreThanOnePushConstantRangePerStage",20403],[13,"PushConstantRangeTooLarge",20403],[13,"PartialRangeMatch",20413],[13,"MissingStages",20413],[13,"UnmatchedStages",20413],[13,"TooLarge",20413],[3,"BakedCommands",20425],[3,"CommandBufferMutable",20425],[6,"ImageCopyTexture",20425],[6,"ImageCopyTextureTagged",20425],[6,"ImageCopyBuffer",20425],[6,"RenderBundleDescriptor",20425],[13,"Color",22157],[13,"BufferOverrun",22159],[13,"InvalidTextureLayerRange",22159],[13,"InvalidTextureLevelRange",22159],[13,"MissingTextureAspect",22159],[13,"TooMany",22170],[13,"IndirectBufferOverrun",22172],[13,"BindGroupIndexOutOfRange",22172],[13,"InvalidGroupSize",22177],[13,"IncompatibleBindGroup",22177],[13,"UnmatchedIndexFormats",22181],[13,"IncompatibleBindGroup",22181],[13,"MissingVertexBuffer",22181],[13,"IndexBeyondLimit",22181],[13,"InstanceBeyondLimit",22181],[13,"VertexBeyondLimit",22181],[13,"Draw",22194],[13,"Dispatch",22194],[13,"AlreadyStarted",22199],[13,"OutOfBounds",22199],[13,"UsedTwiceInsideRenderpass",22199],[13,"IncompatibleType",22199],[13,"InvalidDynamicOffsetCount",22206],[13,"BindGroupIndexOutOfRange",22206],[13,"VertexBufferIndexOutOfRange",22206],[13,"AttachmentsDimensionMismatch",22212],[13,"AttachmentSampleCountMismatch",22212],[13,"IndirectCountBufferOverrun",22212],[13,"IndirectBufferOverrun",22212],[13,"IncompatibleBundleReadOnlyDepthStencil",22212],[13,"InvalidResolveSampleCounts",22212],[13,"MismatchedResolveTextureFormat",22212],[13,"UnsupportedResolveTargetFormat",22212],[13,"TextureViewIsNotRenderable",22212],[13,"BufferOverrun",22241],[13,"QueryOverrun",22241],[13,"InvalidTextureAspect",22250],[13,"CopyFromForbiddenTextureFormat",22250],[13,"CopyToForbiddenTextureFormat",22250],[13,"BufferOverrun",22250],[13,"InvalidMipLevel",22250],[13,"TextureOverrun",22250],[13,"TextureFormatsNotCopyCompatible",22250],[13,"InvalidTextureMipLevel",22250],[13,"InvalidSampleCount",22250],[3,"DeviceLostInvocation",22321],[6,"DeviceDescriptor",22321],[13,"IncompatibleColorAttachment",22844],[13,"IncompatibleDepthStencilAttachment",22844],[13,"IncompatibleSampleCount",22844],[13,"IncompatibleMultiview",22844],[8,"PrettyError",23191],[3,"Hubs",23461],[8,"IdentityHandlerFactory",23653],[6,"RequestAdapterOptions",23718],[13,"Storage",26753],[13,"Exchange",26754],[13,"Location",26755],[13,"Position",26759],[13,"Select",26760],[13,"Math",26760],[13,"Relational",26760],[13,"ImageSample",26760],[13,"ImageLoad",26760],[13,"Derivative",26760],[13,"Access",26760],[13,"AccessIndex",26760],[13,"RayQueryGetIntersection",26760],[13,"AtomicResult",26760],[13,"Compose",26760],[13,"As",26760],[13,"Unary",26760],[13,"ImageQuery",26760],[13,"Binary",26760],[13,"Swizzle",26760],[13,"Load",26760],[13,"Splat",26760],[13,"WorkGroupUniformLoadResult",26760],[13,"Storage",26813],[13,"Sampled",26813],[13,"Depth",26813],[13,"Size",26818],[13,"ModfResult",26819],[13,"FrexpResult",26819],[13,"Initialize",26823],[13,"Proceed",26823],[13,"Gradient",26826],[13,"If",26828],[13,"Call",26828],[13,"ImageStore",26828],[13,"Loop",26828],[13,"Switch",26828],[13,"Atomic",26828],[13,"RayQuery",26828],[13,"Store",26828],[13,"WorkGroupUniformLoad",26828],[13,"Return",26828],[13,"Image",26854],[13,"Pointer",26854],[13,"Array",26854],[13,"BindingArray",26854],[13,"Matrix",26854],[13,"Sampler",26854],[13,"Struct",26854],[13,"Vector",26854],[13,"ValuePointer",26854],[13,"Embedded",27457],[13,"InvalidCastArg",29724],[13,"AutomaticConversionLossy",29724],[13,"AutomaticConversionFloatToInt",29724],[13,"OutOfBoundsIndex",29729],[13,"InvalidAccess",29729],[13,"InvalidSubAccess",29729],[13,"FunctionNotDefined",29729],[13,"Argument",31123],[13,"ArgumentType",31123],[13,"ArgumentCount",31123],[13,"ComponentCount",31130],[13,"ComponentType",31130],[13,"ArrayStride",31133],[13,"StructSpan",31133],[13,"MemberOffset",31133],[13,"MemberOffsetAfterStruct",31133],[13,"UnsizedMember",31133],[13,"InvalidIntegerInterpolation",31144],[13,"InvalidLocationsWhileDualSourceBlending",31144],[13,"ComparisonSamplingMismatch",31146],[13,"InvalidCall",31149],[13,"Expression",31149],[13,"LocalVariable",31149],[13,"InvalidArgumentType",31149],[13,"InvalidArgumentPointerSpace",31149],[13,"PipelineInputRegularFunction",31149],[13,"InvalidStoreTypes",31149],[13,"MissingTypeFlags",31164],[13,"InvalidPointerToUnsized",31166],[13,"InvalidArrayStride",31166],[13,"MemberOverlap",31166],[13,"MemberOutOfBounds",31166],[13,"Type",31176],[13,"ConstExpression",31176],[13,"Constant",31176],[13,"GlobalVariable",31176],[13,"Function",31176],[13,"EntryPoint",31176],[13,"InvalidLocationAttributeCombination",31193],[13,"BindingCollision",31193],[13,"IncompatibleFormat",31971],[13,"UnalignedShader",31973],[13,"Stage",31973],[13,"Internal",31973],[13,"BlendFactorOnUnsupportedTarget",31973],[13,"TooManyVertexBuffers",31973],[13,"TooManyVertexAttributes",31973],[13,"VertexStrideTooLarge",31973],[13,"UnalignedVertexStride",31973],[13,"InvalidVertexAttributeOffset",31973],[13,"StripIndexFormatForNonStripTopology",31973],[13,"InvalidGroupIndex",31995],[13,"UnsupportedFormat",32118],[13,"UnsupportedPresentMode",32118],[13,"UnsupportedAlphaMode",32118],[13,"TooLarge",32118],[6,"BufferAccessResult",32201],[6,"QuerySetDescriptor",32201],[6,"TextureDescriptor",32201],[6,"BufferDescriptor",32201],[13,"NegativeRange",33220],[13,"OutOfBoundsUnderrun",33220],[13,"OutOfBoundsOverrun",33220],[13,"UnalignedOffset",33220],[13,"UnalignedRangeSize",33220],[13,"MaxBufferSize",33228],[13,"TooManyQueries",33230],[13,"InvalidFilterModeWithAnisotropy",33232],[13,"InvalidLodMaxClamp",33232],[13,"InvalidMipLevelCount",33237],[13,"InvalidCubemapTextureDepth",33239],[13,"InvalidCubemapArrayTextureDepth",33239],[13,"InvalidArrayLayerCount",33239],[13,"TooManyMipLevels",33239],[13,"TooManyArrayLayers",33239],[13,"InvalidAspect",33239],[13,"InvalidTextureViewDimension",33239],[13,"FormatReinterpretation",33239],[13,"Surface",33253],[13,"RenderPass",33253],[13,"NotMultipleOfBlockHeight",33256],[13,"NotMultipleOfBlockWidth",33256],[13,"LimitExceeded",33256],[13,"WidthNotMultipleOf",33256],[13,"HeightNotMultipleOf",33256],[13,"WrongAddressSpace",33659],[13,"WrongTextureViewDimension",33659],[13,"WrongTextureClass",33659],[13,"InvalidWorkgroupSize",33666],[13,"Filtering",33666],[13,"Input",33666],[13,"TooManyVaryings",33666],[13,"InputNotConsumed",33666],[6,"Label",33679],[8,"Surface",33679],[8,"CommandEncoder",33679],[8,"Device",33679],[8,"Instance",33679],[6,"MemoryRange",33679],[8,"Adapter",33679],[8,"Queue",33679],[13,"Renderbuffer",37837],[13,"Texture",37837],[13,"FencePool",38700],[13,"Intermediate",38703],[8,"HasRawDisplayHandle",38705],[8,"HasRawWindowHandle",38705],[8,"DeviceExt",40044],[8,"RenderEncoder",40044],[8,"SingleThreadedWorkflow",40380]],"b":[[965,"impl-Index%3CArchetypeId%3E-for-Archetypes"],[966,"impl-Index%3CRangeFrom%3CArchetypeGeneration%3E%3E-for-Archetypes"],[1852,"impl-Display-for-EventId%3CE%3E"],[1853,"impl-Debug-for-EventId%3CE%3E"],[2035,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1,+P2,+P3)%3E"],[2036,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,)%3E"],[2037,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1)%3E"],[2038,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1,+P2)%3E"],[2039,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1,+P2,+P3,+P4,+P5,+P6)%3E"],[2040,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1,+P2,+P3,+P4,+P5)%3E"],[2041,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1,+P2,+P3,+P4)%3E"],[2042,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1,+P2,+P3,+P4,+P5,+P6,+P7)%3E"],[2626,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13)%3E"],[2627,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7)%3E"],[2628,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12)%3E"],[2629,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3)%3E"],[2630,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9)%3E"],[2631,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13,+F14)%3E"],[2632,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6)%3E"],[2633,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5)%3E"],[2634,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10)%3E"],[2635,"impl-WorldQuery-for-AnyOf%3C(F0,+F1)%3E"],[2636,"impl-WorldQuery-for-AnyOf%3C(F0,)%3E"],[2637,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4)%3E"],[2638,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11)%3E"],[2639,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2)%3E"],[2640,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8)%3E"],[2641,"impl-WorldQuery-for-AnyOf%3C()%3E"],[2644,"impl-WorldQuery-for-Or%3C()%3E"],[2645,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6)%3E"],[2646,"impl-WorldQuery-for-Or%3C(F0,)%3E"],[2647,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7)%3E"],[2648,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12)%3E"],[2649,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13,+F14)%3E"],[2650,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13)%3E"],[2651,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3)%3E"],[2652,"impl-WorldQuery-for-Or%3C(F0,+F1)%3E"],[2653,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9)%3E"],[2654,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2)%3E"],[2655,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11)%3E"],[2656,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8)%3E"],[2657,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5)%3E"],[2658,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10)%3E"],[2659,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4)%3E"],[2671,"impl-WorldQuery-for-Or%3C(F0,+F1)%3E"],[2672,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10)%3E"],[2673,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11)%3E"],[2674,"impl-WorldQuery-for-Or%3C(F0,)%3E"],[2675,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8)%3E"],[2676,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7)%3E"],[2677,"impl-WorldQuery-for-Or%3C()%3E"],[2678,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12)%3E"],[2679,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9)%3E"],[2680,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4)%3E"],[2681,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13)%3E"],[2682,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2)%3E"],[2683,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6)%3E"],[2684,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5)%3E"],[2685,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3)%3E"],[2686,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13,+F14)%3E"],[2721,"impl-From%3CResMut%3C\'a,+T%3E%3E-for-Mut%3C\'a,+T%3E"],[2722,"impl-From%3CNonSendMut%3C\'a,+T%3E%3E-for-Mut%3C\'a,+T%3E"],[2737,"impl-From%3C%26mut+EntityWorldMut%3C\'_%3E%3E-for-EntityMut%3C\'a%3E"],[2738,"impl-From%3CEntityWorldMut%3C\'w%3E%3E-for-EntityMut%3C\'w%3E"],[2762,"impl-From%3CEntityWorldMut%3C\'w%3E%3E-for-EntityRef%3C\'w%3E"],[2763,"impl-From%3C%26EntityWorldMut%3C\'_%3E%3E-for-EntityRef%3C\'a%3E"],[2765,"impl-From%3CEntityMut%3C\'w%3E%3E-for-EntityRef%3C\'w%3E"],[2766,"impl-From%3C%26EntityMut%3C\'_%3E%3E-for-EntityRef%3C\'a%3E"],[2887,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1,+P2,+P3,+P4,+P5)%3E"],[2888,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1)%3E"],[2889,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1,+P2,+P3,+P4)%3E"],[2890,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1,+P2,+P3,+P4,+P5,+P6,+P7)%3E"],[2891,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1,+P2)%3E"],[2892,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1,+P2,+P3)%3E"],[2893,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1,+P2,+P3,+P4,+P5,+P6)%3E"],[2894,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,)%3E"],[2903,"impl-SystemParam-for-Local%3C\'a,+T%3E"],[2904,"impl-ExclusiveSystemParam-for-Local%3C\'_s,+T%3E"],[2995,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12)%3E"],[2996,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7)%3E"],[2997,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5)%3E"],[2998,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13)%3E"],[2999,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9)%3E"],[3000,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8)%3E"],[3001,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2)%3E"],[3002,"impl-WorldQuery-for-AnyOf%3C(F0,)%3E"],[3003,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6)%3E"],[3004,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10)%3E"],[3005,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3)%3E"],[3006,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13,+F14)%3E"],[3007,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4)%3E"],[3008,"impl-WorldQuery-for-AnyOf%3C(F0,+F1)%3E"],[3009,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11)%3E"],[3010,"impl-WorldQuery-for-AnyOf%3C()%3E"],[3013,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8)%3E"],[3014,"impl-WorldQuery-for-Or%3C()%3E"],[3015,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9)%3E"],[3016,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7)%3E"],[3017,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4)%3E"],[3018,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10)%3E"],[3019,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6)%3E"],[3020,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5)%3E"],[3021,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11)%3E"],[3022,"impl-WorldQuery-for-Or%3C(F0,)%3E"],[3023,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13,+F14)%3E"],[3024,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2)%3E"],[3025,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3)%3E"],[3026,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13)%3E"],[3027,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12)%3E"],[3028,"impl-WorldQuery-for-Or%3C(F0,+F1)%3E"],[3042,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13,+F14)%3E"],[3043,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3)%3E"],[3044,"impl-WorldQuery-for-AnyOf%3C(F0,)%3E"],[3045,"impl-WorldQuery-for-AnyOf%3C(F0,+F1)%3E"],[3046,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6)%3E"],[3047,"impl-WorldQuery-for-AnyOf%3C()%3E"],[3048,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8)%3E"],[3049,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5)%3E"],[3050,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12)%3E"],[3051,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13)%3E"],[3052,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10)%3E"],[3053,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2)%3E"],[3054,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4)%3E"],[3055,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9)%3E"],[3056,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7)%3E"],[3057,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11)%3E"],[3060,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13)%3E"],[3061,"impl-WorldQuery-for-Or%3C(F0,)%3E"],[3062,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3)%3E"],[3063,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4)%3E"],[3064,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11)%3E"],[3065,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2)%3E"],[3066,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5)%3E"],[3067,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9)%3E"],[3068,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12)%3E"],[3069,"impl-WorldQuery-for-Or%3C(F0,+F1)%3E"],[3070,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7)%3E"],[3071,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13,+F14)%3E"],[3072,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10)%3E"],[3073,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6)%3E"],[3074,"impl-WorldQuery-for-Or%3C()%3E"],[3075,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8)%3E"],[3077,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1,+P2,+P3,+P4,+P5,+P6)%3E"],[3078,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1,+P2,+P3,+P4,+P5)%3E"],[3079,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,)%3E"],[3080,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1,+P2,+P3)%3E"],[3081,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1,+P2,+P3,+P4,+P5,+P6,+P7)%3E"],[3082,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1,+P2,+P3,+P4)%3E"],[3083,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1,+P2)%3E"],[3084,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1)%3E"],[3285,"impl-IntoIterator-for-%26mut+ResMut%3C\'w,+T%3E"],[3286,"impl-IntoIterator-for-%26ResMut%3C\'w,+T%3E"],[3288,"impl-IntoIterator-for-%26Mut%3C\'w,+T%3E"],[3289,"impl-IntoIterator-for-%26mut+Mut%3C\'w,+T%3E"],[3290,"impl-IntoIterator-for-%26Query%3C\'_,+\'s,+Q,+F%3E"],[3291,"impl-IntoIterator-for-%26mut+Query%3C\'_,+\'s,+Q,+F%3E"],[3292,"impl-IntoIterator-for-%26Local%3C\'s,+T%3E"],[3293,"impl-IntoIterator-for-%26mut+Local%3C\'s,+T%3E"],[3427,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12)%3E"],[3428,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13,+F14)%3E"],[3429,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7)%3E"],[3430,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6)%3E"],[3431,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5)%3E"],[3432,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2)%3E"],[3433,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4)%3E"],[3434,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10)%3E"],[3435,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8)%3E"],[3436,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13)%3E"],[3437,"impl-WorldQuery-for-AnyOf%3C()%3E"],[3438,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9)%3E"],[3439,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3)%3E"],[3440,"impl-WorldQuery-for-AnyOf%3C(F0,)%3E"],[3441,"impl-WorldQuery-for-AnyOf%3C(F0,+F1)%3E"],[3442,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11)%3E"],[3445,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11)%3E"],[3446,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8)%3E"],[3447,"impl-WorldQuery-for-Or%3C(F0,+F1)%3E"],[3448,"impl-WorldQuery-for-Or%3C()%3E"],[3449,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9)%3E"],[3450,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13,+F14)%3E"],[3451,"impl-WorldQuery-for-Or%3C(F0,)%3E"],[3452,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7)%3E"],[3453,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12)%3E"],[3454,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4)%3E"],[3455,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6)%3E"],[3456,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10)%3E"],[3457,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2)%3E"],[3458,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13)%3E"],[3459,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5)%3E"],[3460,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3)%3E"],[3482,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1,+P2,+P3,+P4,+P5,+P6)%3E"],[3483,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,)%3E"],[3484,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1,+P2,+P3)%3E"],[3485,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1)%3E"],[3486,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1,+P2,+P3,+P4,+P5)%3E"],[3487,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1,+P2,+P3,+P4)%3E"],[3488,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1,+P2)%3E"],[3489,"impl-SystemParam-for-ParamSet%3C\'_w,+\'_s,+(P0,+P1,+P2,+P3,+P4,+P5,+P6,+P7)%3E"],[3504,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3,+P4,+P5)%3E"],[3505,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3,+P4,+P5,+P6,+P7)%3E"],[3506,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1)%3E"],[3507,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2)%3E"],[3508,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3)%3E"],[3509,"impl-ParamSet%3C\'w,+\'s,+(P0,)%3E"],[3510,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3,+P4,+P5,+P6)%3E"],[3511,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3,+P4)%3E"],[3512,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2)%3E"],[3513,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1)%3E"],[3514,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3)%3E"],[3515,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3,+P4)%3E"],[3516,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3,+P4,+P5)%3E"],[3517,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3,+P4,+P5,+P6)%3E"],[3518,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3,+P4,+P5,+P6,+P7)%3E"],[3519,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2)%3E"],[3520,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3)%3E"],[3521,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3,+P4)%3E"],[3522,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3,+P4,+P5)%3E"],[3523,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3,+P4,+P5,+P6)%3E"],[3524,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3,+P4,+P5,+P6,+P7)%3E"],[3525,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3,+P4,+P5,+P6,+P7)%3E"],[3526,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3)%3E"],[3527,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3,+P4)%3E"],[3528,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3,+P4,+P5)%3E"],[3529,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3,+P4,+P5,+P6)%3E"],[3530,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3,+P4,+P5)%3E"],[3531,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3,+P4,+P5,+P6)%3E"],[3532,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3,+P4,+P5,+P6,+P7)%3E"],[3533,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3,+P4)%3E"],[3534,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3,+P4,+P5,+P6)%3E"],[3535,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3,+P4,+P5,+P6,+P7)%3E"],[3536,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3,+P4,+P5)%3E"],[3537,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3,+P4,+P5,+P6)%3E"],[3538,"impl-ParamSet%3C\'w,+\'s,+(P0,+P1,+P2,+P3,+P4,+P5,+P6,+P7)%3E"],[3649,"impl-NextState%3CS%3E"],[3650,"impl-Reflect-for-NextState%3CS%3E"],[3654,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9)%3E"],[3655,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12)%3E"],[3656,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3)%3E"],[3657,"impl-WorldQuery-for-AnyOf%3C(F0,+F1)%3E"],[3658,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13)%3E"],[3659,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11)%3E"],[3660,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10)%3E"],[3661,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2)%3E"],[3662,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5)%3E"],[3663,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8)%3E"],[3664,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4)%3E"],[3665,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7)%3E"],[3666,"impl-WorldQuery-for-AnyOf%3C(F0,)%3E"],[3667,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13,+F14)%3E"],[3668,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6)%3E"],[3669,"impl-WorldQuery-for-AnyOf%3C()%3E"],[3672,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5)%3E"],[3673,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6)%3E"],[3674,"impl-WorldQuery-for-Or%3C(F0,)%3E"],[3675,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4)%3E"],[3676,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10)%3E"],[3677,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13)%3E"],[3678,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2)%3E"],[3679,"impl-WorldQuery-for-Or%3C(F0,+F1)%3E"],[3680,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7)%3E"],[3681,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8)%3E"],[3682,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9)%3E"],[3683,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12)%3E"],[3684,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13,+F14)%3E"],[3685,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3)%3E"],[3686,"impl-WorldQuery-for-Or%3C()%3E"],[3687,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11)%3E"],[3707,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11)%3E"],[3708,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13)%3E"],[3709,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7)%3E"],[3710,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13,+F14)%3E"],[3711,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10)%3E"],[3712,"impl-WorldQuery-for-AnyOf%3C()%3E"],[3713,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5)%3E"],[3714,"impl-WorldQuery-for-AnyOf%3C(F0,)%3E"],[3715,"impl-WorldQuery-for-AnyOf%3C(F0,+F1)%3E"],[3716,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8)%3E"],[3717,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4)%3E"],[3718,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12)%3E"],[3719,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2)%3E"],[3720,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6)%3E"],[3721,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3)%3E"],[3722,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9)%3E"],[3725,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12)%3E"],[3726,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4)%3E"],[3727,"impl-WorldQuery-for-Or%3C()%3E"],[3728,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10)%3E"],[3729,"impl-WorldQuery-for-Or%3C(F0,+F1)%3E"],[3730,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8)%3E"],[3731,"impl-WorldQuery-for-Or%3C(F0,)%3E"],[3732,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13,+F14)%3E"],[3733,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2)%3E"],[3734,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9)%3E"],[3735,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7)%3E"],[3736,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3)%3E"],[3737,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5)%3E"],[3738,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11)%3E"],[3739,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13)%3E"],[3740,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6)%3E"],[3751,"impl-WorldQuery-for-AnyOf%3C(F0,+F1)%3E"],[3752,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2)%3E"],[3753,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5)%3E"],[3754,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13,+F14)%3E"],[3755,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12)%3E"],[3756,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11)%3E"],[3757,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4)%3E"],[3758,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7)%3E"],[3759,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3)%3E"],[3760,"impl-WorldQuery-for-AnyOf%3C(F0,)%3E"],[3761,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8)%3E"],[3762,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10)%3E"],[3763,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6)%3E"],[3764,"impl-WorldQuery-for-AnyOf%3C()%3E"],[3765,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13)%3E"],[3766,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9)%3E"],[3769,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12)%3E"],[3770,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6)%3E"],[3771,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13)%3E"],[3772,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13,+F14)%3E"],[3773,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7)%3E"],[3774,"impl-WorldQuery-for-Or%3C(F0,)%3E"],[3775,"impl-WorldQuery-for-Or%3C(F0,+F1)%3E"],[3776,"impl-WorldQuery-for-Or%3C()%3E"],[3777,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9)%3E"],[3778,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10)%3E"],[3779,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5)%3E"],[3780,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3)%3E"],[3781,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2)%3E"],[3782,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4)%3E"],[3783,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8)%3E"],[3784,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11)%3E"],[4075,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6)%3E"],[4076,"impl-WorldQuery-for-AnyOf%3C(F0,)%3E"],[4077,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13)%3E"],[4078,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8)%3E"],[4079,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9)%3E"],[4080,"impl-WorldQuery-for-AnyOf%3C(F0,+F1)%3E"],[4081,"impl-WorldQuery-for-AnyOf%3C()%3E"],[4082,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11)%3E"],[4083,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7)%3E"],[4084,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2)%3E"],[4085,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12)%3E"],[4086,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10)%3E"],[4087,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13,+F14)%3E"],[4088,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4)%3E"],[4089,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3)%3E"],[4090,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5)%3E"],[4093,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11)%3E"],[4094,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10)%3E"],[4095,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5)%3E"],[4096,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13)%3E"],[4097,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4)%3E"],[4098,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7)%3E"],[4099,"impl-WorldQuery-for-Or%3C(F0,+F1)%3E"],[4100,"impl-WorldQuery-for-Or%3C(F0,)%3E"],[4101,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13,+F14)%3E"],[4102,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3)%3E"],[4103,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2)%3E"],[4104,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8)%3E"],[4105,"impl-WorldQuery-for-Or%3C()%3E"],[4106,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9)%3E"],[4107,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6)%3E"],[4108,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12)%3E"],[4118,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2)%3E"],[4119,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12)%3E"],[4120,"impl-WorldQuery-for-AnyOf%3C(F0,+F1)%3E"],[4121,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13)%3E"],[4122,"impl-WorldQuery-for-AnyOf%3C()%3E"],[4123,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10)%3E"],[4124,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9)%3E"],[4125,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5)%3E"],[4126,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8)%3E"],[4127,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11)%3E"],[4128,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3)%3E"],[4129,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6)%3E"],[4130,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4)%3E"],[4131,"impl-WorldQuery-for-AnyOf%3C(F0,)%3E"],[4132,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7)%3E"],[4133,"impl-WorldQuery-for-AnyOf%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13,+F14)%3E"],[4136,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3)%3E"],[4137,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7)%3E"],[4138,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13)%3E"],[4139,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6)%3E"],[4140,"impl-WorldQuery-for-Or%3C()%3E"],[4141,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12,+F13,+F14)%3E"],[4142,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8)%3E"],[4143,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10)%3E"],[4144,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4)%3E"],[4145,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11,+F12)%3E"],[4146,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2)%3E"],[4147,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9)%3E"],[4148,"impl-WorldQuery-for-Or%3C(F0,)%3E"],[4149,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5)%3E"],[4150,"impl-WorldQuery-for-Or%3C(F0,+F1)%3E"],[4151,"impl-WorldQuery-for-Or%3C(F0,+F1,+F2,+F3,+F4,+F5,+F6,+F7,+F8,+F9,+F10,+F11)%3E"],[4625,"impl-Display-for-QueryEntityError"],[4626,"impl-Debug-for-QueryEntityError"],[4627,"impl-Debug-for-QueryComponentError"],[4628,"impl-Display-for-QueryComponentError"],[4629,"impl-Debug-for-QuerySingleError"],[4630,"impl-Display-for-QuerySingleError"],[5234,"impl-IntoSystemSetConfigs-for-NodeConfigs%3CInterned%3Cdyn+SystemSet%3E%3E"],[5235,"impl-IntoSystemConfigs%3C()%3E-for-NodeConfigs%3CBox%3Cdyn+System%3CIn+=+(),+Out+=+()%3E%3E%3E"],[5239,"impl-IntoSystemConfigs%3C()%3E-for-NodeConfigs%3CBox%3Cdyn+System%3CIn+=+(),+Out+=+()%3E%3E%3E"],[5240,"impl-IntoSystemSetConfigs-for-NodeConfigs%3CInterned%3Cdyn+SystemSet%3E%3E"],[5243,"impl-IntoSystemConfigs%3C()%3E-for-NodeConfigs%3CBox%3Cdyn+System%3CIn+=+(),+Out+=+()%3E%3E%3E"],[5244,"impl-IntoSystemSetConfigs-for-NodeConfigs%3CInterned%3Cdyn+SystemSet%3E%3E"],[5294,"impl-IntoSystemSetConfigs-for-NodeConfigs%3CInterned%3Cdyn+SystemSet%3E%3E"],[5295,"impl-IntoSystemConfigs%3C()%3E-for-NodeConfigs%3CBox%3Cdyn+System%3CIn+=+(),+Out+=+()%3E%3E%3E"],[5332,"impl-IntoSystemSetConfigs-for-NodeConfigs%3CInterned%3Cdyn+SystemSet%3E%3E"],[5333,"impl-IntoSystemConfigs%3C()%3E-for-NodeConfigs%3CBox%3Cdyn+System%3CIn+=+(),+Out+=+()%3E%3E%3E"],[5491,"impl-Display-for-ScheduleBuildError"],[5492,"impl-Debug-for-ScheduleBuildError"],[5548,"impl-IntoSystemConfigs%3C()%3E-for-NodeConfigs%3CBox%3Cdyn+System%3CIn+=+(),+Out+=+()%3E%3E%3E"],[5549,"impl-IntoSystemSetConfigs-for-NodeConfigs%3CInterned%3Cdyn+SystemSet%3E%3E"],[5675,"impl-IntoSystemSetConfigs-for-NodeConfigs%3CInterned%3Cdyn+SystemSet%3E%3E"],[5676,"impl-IntoSystemConfigs%3C()%3E-for-NodeConfigs%3CBox%3Cdyn+System%3CIn+=+(),+Out+=+()%3E%3E%3E"],[6318,"impl-CommandQueue"],[6319,"impl-SystemBuffer-for-CommandQueue"],[6643,"impl-Display-for-SystemName%3C\'s%3E"],[6644,"impl-Debug-for-SystemName%3C\'s%3E"],[6647,"impl-Debug-for-RegisteredSystemError"],[6648,"impl-Display-for-RegisteredSystemError"],[7383,"impl-Debug-for-TryRunScheduleError"],[7384,"impl-Display-for-TryRunScheduleError"],[7762,"impl-From%3C(f32,+f32,+f32)%3E-for-Color"],[7763,"impl-From%3C(f32,+f32,+f32,+f32)%3E-for-Color"],[8930,"impl-From%3C(usize,+usize)%3E-for-Area%3CContext%3E"],[8931,"impl-From%3C(i32,+i32)%3E-for-Area%3CContext%3E"],[8932,"impl-From%3C(f32,+f32)%3E-for-Area%3CContext%3E"],[8933,"impl-From%3C(u32,+u32)%3E-for-Area%3CContext%3E"],[8935,"impl-From%3C(i32,+f32)%3E-for-Area%3CContext%3E"],[9014,"impl-From%3Ci32%3E-for-Layer"],[9015,"impl-From%3Cf32%3E-for-Layer"],[9017,"impl-From%3Cu32%3E-for-Layer"],[9126,"impl-From%3C(u32,+u32)%3E-for-Position%3CContext%3E"],[9127,"impl-From%3C(f32,+f32)%3E-for-Position%3CContext%3E"],[9128,"impl-From%3C(f64,+f64)%3E-for-Position%3CContext%3E"],[9129,"impl-From%3C(usize,+usize)%3E-for-Position%3CContext%3E"],[9130,"impl-From%3C(i32,+i32)%3E-for-Position%3CContext%3E"],[11068,"impl-From%3Cu64%3E-for-InteractionId"],[11070,"impl-From%3CMouseButton%3E-for-InteractionId"],[11906,"impl-From%3Ci32%3E-for-SceneBinding"],[11908,"impl-From%3C()%3E-for-SceneBinding"],[12142,"impl-From%3C(SAP,+SAP,+f32)%3E-for-SceneAlignment"],[12143,"impl-From%3C(SAP,+SAP,+i32)%3E-for-SceneAlignment"],[12145,"impl-From%3C(SAP,+SAP,+u32)%3E-for-SceneAlignment"],[14183,"impl-Backends"],[14184,"impl-Flags-for-Backends"],[14185,"impl-Flags-for-Features"],[14186,"impl-Features"],[14187,"impl-InstanceFlags"],[14188,"impl-Flags-for-InstanceFlags"],[14189,"impl-Flags-for-DownlevelFlags"],[14190,"impl-DownlevelFlags"],[14191,"impl-Flags-for-ShaderStages"],[14192,"impl-ShaderStages"],[14193,"impl-Flags-for-TextureFormatFeatureFlags"],[14194,"impl-TextureFormatFeatureFlags"],[14195,"impl-ColorWrites"],[14196,"impl-Flags-for-ColorWrites"],[14197,"impl-BufferUsages"],[14198,"impl-Flags-for-BufferUsages"],[14199,"impl-TextureUsages"],[14200,"impl-Flags-for-TextureUsages"],[14201,"impl-Flags-for-PipelineStatisticsTypes"],[14202,"impl-PipelineStatisticsTypes"],[15604,"impl-RenderPass%3C\'a%3E"],[15605,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[15606,"impl-RenderBundleEncoder%3C\'a%3E"],[15607,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[15608,"impl-RenderPass%3C\'a%3E"],[15609,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[15610,"impl-RenderBundleEncoder%3C\'a%3E"],[15611,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[15612,"impl-RenderPass%3C\'a%3E"],[15613,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[15614,"impl-RenderBundleEncoder%3C\'a%3E"],[15615,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[15616,"impl-RenderPass%3C\'a%3E"],[15617,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[15618,"impl-RenderBundleEncoder%3C\'a%3E"],[15619,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[16294,"impl-Debug-for-Backends"],[16295,"impl-Octal-for-Backends"],[16296,"impl-LowerHex-for-Backends"],[16297,"impl-Binary-for-Backends"],[16298,"impl-UpperHex-for-Backends"],[16300,"impl-Debug-for-Features"],[16301,"impl-Octal-for-Features"],[16302,"impl-Binary-for-Features"],[16303,"impl-LowerHex-for-Features"],[16304,"impl-UpperHex-for-Features"],[16305,"impl-Debug-for-InstanceFlags"],[16306,"impl-Octal-for-InstanceFlags"],[16307,"impl-LowerHex-for-InstanceFlags"],[16308,"impl-Binary-for-InstanceFlags"],[16309,"impl-UpperHex-for-InstanceFlags"],[16312,"impl-LowerHex-for-DownlevelFlags"],[16313,"impl-UpperHex-for-DownlevelFlags"],[16314,"impl-Octal-for-DownlevelFlags"],[16315,"impl-Debug-for-DownlevelFlags"],[16316,"impl-Binary-for-DownlevelFlags"],[16321,"impl-Octal-for-ShaderStages"],[16322,"impl-UpperHex-for-ShaderStages"],[16323,"impl-Binary-for-ShaderStages"],[16324,"impl-LowerHex-for-ShaderStages"],[16325,"impl-Debug-for-ShaderStages"],[16345,"impl-Binary-for-TextureFormatFeatureFlags"],[16346,"impl-LowerHex-for-TextureFormatFeatureFlags"],[16347,"impl-Debug-for-TextureFormatFeatureFlags"],[16348,"impl-Octal-for-TextureFormatFeatureFlags"],[16349,"impl-UpperHex-for-TextureFormatFeatureFlags"],[16383,"impl-Debug-for-ColorWrites"],[16384,"impl-Octal-for-ColorWrites"],[16385,"impl-LowerHex-for-ColorWrites"],[16386,"impl-UpperHex-for-ColorWrites"],[16387,"impl-Binary-for-ColorWrites"],[16410,"impl-Display-for-SurfaceError"],[16411,"impl-Debug-for-SurfaceError"],[16413,"impl-Display-for-RequestDeviceError"],[16414,"impl-Debug-for-RequestDeviceError"],[16415,"impl-Debug-for-CreateSurfaceError"],[16416,"impl-Display-for-CreateSurfaceError"],[16418,"impl-Display-for-BufferAsyncError"],[16419,"impl-Debug-for-BufferAsyncError"],[16425,"impl-Debug-for-Error"],[16426,"impl-Display-for-Error"],[16427,"impl-Binary-for-BufferUsages"],[16428,"impl-Debug-for-BufferUsages"],[16429,"impl-UpperHex-for-BufferUsages"],[16430,"impl-LowerHex-for-BufferUsages"],[16431,"impl-Octal-for-BufferUsages"],[16434,"impl-Octal-for-TextureUsages"],[16435,"impl-Debug-for-TextureUsages"],[16436,"impl-Binary-for-TextureUsages"],[16437,"impl-LowerHex-for-TextureUsages"],[16438,"impl-UpperHex-for-TextureUsages"],[16467,"impl-Octal-for-PipelineStatisticsTypes"],[16468,"impl-Binary-for-PipelineStatisticsTypes"],[16469,"impl-UpperHex-for-PipelineStatisticsTypes"],[16470,"impl-Debug-for-PipelineStatisticsTypes"],[16471,"impl-LowerHex-for-PipelineStatisticsTypes"],[16648,"impl-Backends"],[16649,"impl-Flags-for-Backends"],[16650,"impl-Flags-for-Features"],[16651,"impl-Features"],[16652,"impl-InstanceFlags"],[16653,"impl-Flags-for-InstanceFlags"],[16654,"impl-DownlevelFlags"],[16655,"impl-Flags-for-DownlevelFlags"],[16656,"impl-Flags-for-ShaderStages"],[16657,"impl-ShaderStages"],[16658,"impl-TextureFormatFeatureFlags"],[16659,"impl-Flags-for-TextureFormatFeatureFlags"],[16660,"impl-ColorWrites"],[16661,"impl-Flags-for-ColorWrites"],[16662,"impl-BufferUsages"],[16663,"impl-Flags-for-BufferUsages"],[16664,"impl-Flags-for-TextureUsages"],[16665,"impl-TextureUsages"],[16666,"impl-Flags-for-PipelineStatisticsTypes"],[16667,"impl-PipelineStatisticsTypes"],[18159,"impl-RenderPass%3C\'a%3E"],[18160,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[18162,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[18163,"impl-RenderBundleEncoder%3C\'a%3E"],[18166,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[18167,"impl-RenderPass%3C\'a%3E"],[18168,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[18169,"impl-RenderBundleEncoder%3C\'a%3E"],[18170,"impl-RenderPass%3C\'a%3E"],[18171,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[18173,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[18174,"impl-RenderBundleEncoder%3C\'a%3E"],[18175,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[18176,"impl-RenderPass%3C\'a%3E"],[18178,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[18179,"impl-RenderBundleEncoder%3C\'a%3E"],[18182,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[18183,"impl-RenderPass%3C\'a%3E"],[18184,"impl-RenderBundleEncoder%3C\'a%3E"],[18185,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[19921,"impl-Display-for-BindGroupLayoutEntryError"],[19922,"impl-Debug-for-BindGroupLayoutEntryError"],[19923,"impl-Display-for-CreateBindGroupLayoutError"],[19924,"impl-Debug-for-CreateBindGroupLayoutError"],[19925,"impl-Display-for-CreateBindGroupError"],[19926,"impl-Debug-for-CreateBindGroupError"],[19927,"impl-Display-for-BindingZone"],[19928,"impl-Debug-for-BindingZone"],[19929,"impl-Display-for-BindingTypeMaxCountError"],[19930,"impl-Debug-for-BindingTypeMaxCountError"],[19936,"impl-Debug-for-CreatePipelineLayoutError"],[19937,"impl-Display-for-CreatePipelineLayoutError"],[19938,"impl-Display-for-PushConstantUploadError"],[19939,"impl-Debug-for-PushConstantUploadError"],[19944,"impl-Debug-for-BindError"],[19945,"impl-Display-for-BindError"],[19948,"impl-Debug-for-GetBindGroupLayoutError"],[19949,"impl-Display-for-GetBindGroupLayoutError"],[19950,"impl-Display-for-LateMinBufferBindingSizeMismatch"],[19951,"impl-Debug-for-LateMinBufferBindingSizeMismatch"],[19955,"impl-From%3CMissingDownlevelFlags%3E-for-BindGroupLayoutEntryError"],[19956,"impl-From%3CMissingFeatures%3E-for-BindGroupLayoutEntryError"],[19959,"impl-From%3CUsageConflict%3E-for-CreateBindGroupError"],[19961,"impl-From%3CDeviceError%3E-for-CreateBindGroupError"],[19962,"impl-From%3CMissingTextureUsageError%3E-for-CreateBindGroupError"],[19963,"impl-From%3CMissingBufferUsageError%3E-for-CreateBindGroupError"],[19971,"impl-From%3CMissingFeatures%3E-for-CreatePipelineLayoutError"],[19973,"impl-From%3CDeviceError%3E-for-CreatePipelineLayoutError"],[21255,"impl-Display-for-CreateRenderBundleError"],[21256,"impl-Debug-for-CreateRenderBundleError"],[21257,"impl-Debug-for-ExecutionError"],[21258,"impl-Display-for-ExecutionError"],[21260,"impl-Debug-for-RenderBundleError"],[21261,"impl-Display-for-RenderBundleError"],[21262,"impl-Debug-for-ClearError"],[21263,"impl-Display-for-ClearError"],[21266,"impl-Display-for-DispatchError"],[21267,"impl-Debug-for-DispatchError"],[21268,"impl-Display-for-ComputePassErrorInner"],[21269,"impl-Debug-for-ComputePassErrorInner"],[21270,"impl-Debug-for-ComputePassError"],[21271,"impl-Display-for-ComputePassError"],[21272,"impl-Display-for-DrawError"],[21273,"impl-Debug-for-DrawError"],[21274,"impl-Debug-for-RenderCommandError"],[21275,"impl-Display-for-RenderCommandError"],[21278,"impl-Display-for-QueryError"],[21279,"impl-Debug-for-QueryError"],[21280,"impl-Debug-for-QueryUseError"],[21281,"impl-Display-for-QueryUseError"],[21282,"impl-Debug-for-ResolveError"],[21283,"impl-Display-for-ResolveError"],[21292,"impl-Debug-for-AttachmentErrorLocation"],[21293,"impl-Display-for-AttachmentErrorLocation"],[21294,"impl-Display-for-ColorAttachmentError"],[21295,"impl-Debug-for-ColorAttachmentError"],[21296,"impl-Debug-for-RenderPassErrorInner"],[21297,"impl-Display-for-RenderPassErrorInner"],[21298,"impl-Debug-for-RenderPassError"],[21299,"impl-Display-for-RenderPassError"],[21301,"impl-Display-for-TransferError"],[21302,"impl-Debug-for-TransferError"],[21303,"impl-Debug-for-CopyError"],[21304,"impl-Display-for-CopyError"],[21306,"impl-Debug-for-CommandEncoderError"],[21307,"impl-Display-for-CommandEncoderError"],[21308,"impl-Debug-for-PassErrorScope"],[21309,"impl-Display-for-PassErrorScope"],[21338,"impl-From%3CMissingFeatures%3E-for-ComputePassErrorInner"],[21340,"impl-From%3CMissingDownlevelFlags%3E-for-ComputePassErrorInner"],[21341,"impl-From%3CDispatchError%3E-for-ComputePassErrorInner"],[21342,"impl-From%3CUsageConflict%3E-for-ComputePassErrorInner"],[21343,"impl-From%3CCommandEncoderError%3E-for-ComputePassErrorInner"],[21344,"impl-From%3CQueryUseError%3E-for-ComputePassErrorInner"],[21345,"impl-From%3CDeviceError%3E-for-ComputePassErrorInner"],[21346,"impl-From%3CBindError%3E-for-ComputePassErrorInner"],[21347,"impl-From%3CMissingBufferUsageError%3E-for-ComputePassErrorInner"],[21348,"impl-From%3CPushConstantUploadError%3E-for-ComputePassErrorInner"],[21352,"impl-From%3CUsageConflict%3E-for-RenderCommandError"],[21353,"impl-From%3CPushConstantUploadError%3E-for-RenderCommandError"],[21354,"impl-From%3CRenderPassCompatibilityError%3E-for-RenderCommandError"],[21355,"impl-From%3CMissingBufferUsageError%3E-for-RenderCommandError"],[21356,"impl-From%3CMissingTextureUsageError%3E-for-RenderCommandError"],[21362,"impl-From%3CDeviceError%3E-for-QueryError"],[21363,"impl-From%3CResolveError%3E-for-QueryError"],[21364,"impl-From%3CCommandEncoderError%3E-for-QueryError"],[21365,"impl-From%3CQueryUseError%3E-for-QueryError"],[21378,"impl-From%3CDeviceError%3E-for-RenderPassErrorInner"],[21379,"impl-From%3CBindError%3E-for-RenderPassErrorInner"],[21380,"impl-From%3CRenderPassCompatibilityError%3E-for-RenderPassErrorInner"],[21381,"impl-From%3CMissingFeatures%3E-for-RenderPassErrorInner"],[21382,"impl-From%3CRenderCommandError%3E-for-RenderPassErrorInner"],[21383,"impl-From%3CUsageConflict%3E-for-RenderPassErrorInner"],[21384,"impl-From%3CCommandEncoderError%3E-for-RenderPassErrorInner"],[21386,"impl-From%3CMissingTextureUsageError%3E-for-RenderPassErrorInner"],[21387,"impl-From%3CMissingBufferUsageError%3E-for-RenderPassErrorInner"],[21388,"impl-From%3CDrawError%3E-for-RenderPassErrorInner"],[21389,"impl-From%3CMissingDownlevelFlags%3E-for-RenderPassErrorInner"],[21390,"impl-From%3CQueryUseError%3E-for-RenderPassErrorInner"],[21391,"impl-From%3CColorAttachmentError%3E-for-RenderPassErrorInner"],[21394,"impl-From%3CClearError%3E-for-TransferError"],[21396,"impl-From%3CMissingDownlevelFlags%3E-for-TransferError"],[21398,"impl-From%3CTransferError%3E-for-CopyError"],[21399,"impl-From%3CCommandEncoderError%3E-for-CopyError"],[21400,"impl-From%3CDeviceError%3E-for-CopyError"],[22547,"impl-Display-for-WaitIdleError"],[22548,"impl-Debug-for-WaitIdleError"],[22551,"impl-Display-for-RenderPassCompatibilityError"],[22552,"impl-Debug-for-RenderPassCompatibilityError"],[22553,"impl-Display-for-InvalidDevice"],[22554,"impl-Debug-for-InvalidDevice"],[22555,"impl-Debug-for-DeviceError"],[22556,"impl-Display-for-DeviceError"],[22557,"impl-Debug-for-MissingFeatures"],[22558,"impl-Display-for-MissingFeatures"],[22559,"impl-Display-for-MissingDownlevelFlags"],[22560,"impl-Debug-for-MissingDownlevelFlags"],[23001,"impl-Display-for-InvalidQueue"],[23002,"impl-Debug-for-InvalidQueue"],[23003,"impl-Debug-for-QueueWriteError"],[23004,"impl-Display-for-QueueWriteError"],[23005,"impl-Display-for-QueueSubmitError"],[23006,"impl-Debug-for-QueueSubmitError"],[23013,"impl-From%3CDeviceError%3E-for-QueueWriteError"],[23014,"impl-From%3CTransferError%3E-for-QueueWriteError"],[23016,"impl-From%3CClearError%3E-for-QueueWriteError"],[23017,"impl-From%3CBufferAccessError%3E-for-QueueSubmitError"],[23019,"impl-From%3CDeviceError%3E-for-QueueSubmitError"],[23168,"impl-Display-for-CreateDeviceError"],[23169,"impl-Debug-for-CreateDeviceError"],[23220,"impl-Debug-for-ContextError"],[23221,"impl-Display-for-ContextError"],[23873,"impl-Display-for-FailedLimit"],[23874,"impl-Debug-for-FailedLimit"],[23875,"impl-Debug-for-IsSurfaceSupportedError"],[23876,"impl-Display-for-IsSurfaceSupportedError"],[23877,"impl-Debug-for-GetSurfaceSupportError"],[23878,"impl-Display-for-GetSurfaceSupportError"],[23879,"impl-Display-for-RequestDeviceError"],[23880,"impl-Debug-for-RequestDeviceError"],[23881,"impl-Debug-for-InvalidAdapter"],[23882,"impl-Display-for-InvalidAdapter"],[23883,"impl-Debug-for-RequestAdapterError"],[23884,"impl-Display-for-RequestAdapterError"],[24668,"impl-StorageAccess"],[24669,"impl-Flags-for-StorageAccess"],[24670,"impl-Barrier"],[24671,"impl-Flags-for-Barrier"],[25545,"impl-Display-for-WithSpan%3CE%3E"],[25546,"impl-Debug-for-WithSpan%3CE%3E"],[25560,"impl-Binary-for-StorageAccess"],[25561,"impl-UpperHex-for-StorageAccess"],[25562,"impl-LowerHex-for-StorageAccess"],[25563,"impl-Octal-for-StorageAccess"],[25564,"impl-Debug-for-StorageAccess"],[25586,"impl-Octal-for-Barrier"],[25587,"impl-Binary-for-Barrier"],[25588,"impl-UpperHex-for-Barrier"],[25589,"impl-LowerHex-for-Barrier"],[25590,"impl-Debug-for-Barrier"],[25664,"impl-StorageAccess"],[25665,"impl-Flags-for-StorageAccess"],[25666,"impl-Flags-for-Barrier"],[25667,"impl-Barrier"],[25788,"impl-Index%3CRange%3CT%3E%3E-for-Arena%3CT%3E"],[25789,"impl-Index%3CHandle%3CT%3E%3E-for-Arena%3CT%3E"],[26894,"impl-RayFlag"],[26895,"impl-Flags-for-RayFlag"],[26919,"impl-UpperHex-for-RayFlag"],[26920,"impl-Octal-for-RayFlag"],[26921,"impl-LowerHex-for-RayFlag"],[26922,"impl-Binary-for-RayFlag"],[26923,"impl-Debug-for-RayFlag"],[26926,"impl-Flags-for-RayFlag"],[26927,"impl-RayFlag"],[27057,"impl-Flags-for-Features"],[27058,"impl-Features"],[27059,"impl-WriterFlags"],[27060,"impl-Flags-for-WriterFlags"],[27192,"impl-LowerHex-for-Features"],[27193,"impl-UpperHex-for-Features"],[27194,"impl-Binary-for-Features"],[27195,"impl-Octal-for-Features"],[27196,"impl-Debug-for-Features"],[27197,"impl-Debug-for-Version"],[27198,"impl-Display-for-Version"],[27199,"impl-LowerHex-for-WriterFlags"],[27200,"impl-Octal-for-WriterFlags"],[27201,"impl-Binary-for-WriterFlags"],[27202,"impl-Debug-for-WriterFlags"],[27203,"impl-UpperHex-for-WriterFlags"],[27210,"impl-Display-for-Error"],[27211,"impl-Debug-for-Error"],[27226,"impl-Flags-for-Features"],[27227,"impl-Features"],[27228,"impl-WriterFlags"],[27229,"impl-Flags-for-WriterFlags"],[27649,"impl-Debug-for-Error"],[27650,"impl-Display-for-Error"],[27651,"impl-Debug-for-EntryPointError"],[27652,"impl-Display-for-EntryPointError"],[28429,"impl-ImageTypeFlags"],[28430,"impl-Flags-for-ImageTypeFlags"],[28431,"impl-WriterFlags"],[28432,"impl-Flags-for-WriterFlags"],[28589,"impl-Display-for-Error"],[28590,"impl-Debug-for-Error"],[28592,"impl-Binary-for-ImageTypeFlags"],[28593,"impl-Debug-for-ImageTypeFlags"],[28594,"impl-UpperHex-for-ImageTypeFlags"],[28595,"impl-Octal-for-ImageTypeFlags"],[28596,"impl-LowerHex-for-ImageTypeFlags"],[28598,"impl-LowerHex-for-WriterFlags"],[28599,"impl-Binary-for-WriterFlags"],[28600,"impl-Octal-for-WriterFlags"],[28601,"impl-UpperHex-for-WriterFlags"],[28602,"impl-Debug-for-WriterFlags"],[28619,"impl-Flags-for-ImageTypeFlags"],[28620,"impl-ImageTypeFlags"],[28621,"impl-Flags-for-WriterFlags"],[28622,"impl-WriterFlags"],[28927,"impl-Display-for-ParseError"],[28928,"impl-Debug-for-ParseError"],[29336,"impl-Debug-for-ConstantEvaluatorError"],[29337,"impl-Display-for-ConstantEvaluatorError"],[29341,"impl-Display-for-IndexableLengthError"],[29342,"impl-Debug-for-IndexableLengthError"],[29344,"impl-Display-for-Alignment"],[29345,"impl-Debug-for-Alignment"],[29348,"impl-Debug-for-LayoutErrorInner"],[29349,"impl-Display-for-LayoutErrorInner"],[29350,"impl-Display-for-LayoutError"],[29351,"impl-Debug-for-LayoutError"],[29354,"impl-Debug-for-ResolveError"],[29355,"impl-Display-for-ResolveError"],[29541,"impl-Mul%3Cu32%3E-for-Alignment"],[29542,"impl-Mul-for-Alignment"],[30110,"impl-UniformityRequirements"],[30111,"impl-Flags-for-UniformityRequirements"],[30112,"impl-GlobalUse"],[30113,"impl-Flags-for-GlobalUse"],[30114,"impl-Flags-for-TypeFlags"],[30115,"impl-TypeFlags"],[30116,"impl-Flags-for-ValidationFlags"],[30117,"impl-ValidationFlags"],[30118,"impl-Flags-for-Capabilities"],[30119,"impl-Capabilities"],[30120,"impl-Flags-for-ShaderStages"],[30121,"impl-ShaderStages"],[30441,"impl-Octal-for-UniformityRequirements"],[30442,"impl-Debug-for-UniformityRequirements"],[30443,"impl-LowerHex-for-UniformityRequirements"],[30444,"impl-Binary-for-UniformityRequirements"],[30445,"impl-UpperHex-for-UniformityRequirements"],[30447,"impl-Octal-for-GlobalUse"],[30448,"impl-Debug-for-GlobalUse"],[30449,"impl-LowerHex-for-GlobalUse"],[30450,"impl-Binary-for-GlobalUse"],[30451,"impl-UpperHex-for-GlobalUse"],[30454,"impl-Display-for-ComposeError"],[30455,"impl-Debug-for-ComposeError"],[30456,"impl-Display-for-ExpressionError"],[30457,"impl-Debug-for-ExpressionError"],[30458,"impl-Display-for-ConstExpressionError"],[30459,"impl-Debug-for-ConstExpressionError"],[30460,"impl-Debug-for-LiteralError"],[30461,"impl-Display-for-LiteralError"],[30462,"impl-Display-for-CallError"],[30463,"impl-Debug-for-CallError"],[30464,"impl-Debug-for-LocalVariableError"],[30465,"impl-Display-for-LocalVariableError"],[30466,"impl-Debug-for-FunctionError"],[30467,"impl-Display-for-FunctionError"],[30468,"impl-Debug-for-GlobalVariableError"],[30469,"impl-Display-for-GlobalVariableError"],[30470,"impl-Display-for-VaryingError"],[30471,"impl-Debug-for-VaryingError"],[30472,"impl-Debug-for-EntryPointError"],[30473,"impl-Display-for-EntryPointError"],[30474,"impl-LowerHex-for-TypeFlags"],[30475,"impl-Binary-for-TypeFlags"],[30476,"impl-Octal-for-TypeFlags"],[30477,"impl-Debug-for-TypeFlags"],[30478,"impl-UpperHex-for-TypeFlags"],[30479,"impl-Debug-for-Disalignment"],[30480,"impl-Display-for-Disalignment"],[30481,"impl-Display-for-TypeError"],[30482,"impl-Debug-for-TypeError"],[30483,"impl-LowerHex-for-ValidationFlags"],[30484,"impl-Octal-for-ValidationFlags"],[30485,"impl-Debug-for-ValidationFlags"],[30486,"impl-Binary-for-ValidationFlags"],[30487,"impl-UpperHex-for-ValidationFlags"],[30488,"impl-Octal-for-Capabilities"],[30489,"impl-LowerHex-for-Capabilities"],[30490,"impl-Binary-for-Capabilities"],[30491,"impl-UpperHex-for-Capabilities"],[30492,"impl-Debug-for-Capabilities"],[30493,"impl-Debug-for-ShaderStages"],[30494,"impl-UpperHex-for-ShaderStages"],[30495,"impl-Octal-for-ShaderStages"],[30496,"impl-Binary-for-ShaderStages"],[30497,"impl-LowerHex-for-ShaderStages"],[30500,"impl-Display-for-ConstantError"],[30501,"impl-Debug-for-ConstantError"],[30502,"impl-Display-for-ValidationError"],[30503,"impl-Debug-for-ValidationError"],[30510,"impl-From%3CIndexableLengthError%3E-for-ExpressionError"],[30511,"impl-From%3CLiteralError%3E-for-ExpressionError"],[30512,"impl-From%3CResolveError%3E-for-ExpressionError"],[30513,"impl-From%3CComposeError%3E-for-ExpressionError"],[30515,"impl-From%3CWidthError%3E-for-ConstExpressionError"],[30516,"impl-From%3CLiteralError%3E-for-ConstExpressionError"],[30517,"impl-From%3CResolveError%3E-for-ConstExpressionError"],[30519,"impl-From%3CComposeError%3E-for-ConstExpressionError"],[30528,"impl-From%3CFunctionError%3E-for-EntryPointError"],[30530,"impl-From%3CVaryingError%3E-for-EntryPointError"],[30541,"impl-From%3CInvalidHandleError%3E-for-ValidationError"],[30542,"impl-From%3CBadHandle%3E-for-ValidationError"],[30544,"impl-From%3CFwdDepError%3E-for-ValidationError"],[30545,"impl-From%3CBadRangeError%3E-for-ValidationError"],[30546,"impl-From%3CLayoutError%3E-for-ValidationError"],[30553,"impl-Flags-for-UniformityRequirements"],[30554,"impl-UniformityRequirements"],[30555,"impl-Flags-for-GlobalUse"],[30556,"impl-GlobalUse"],[30557,"impl-Flags-for-TypeFlags"],[30558,"impl-TypeFlags"],[30559,"impl-Flags-for-ValidationFlags"],[30560,"impl-ValidationFlags"],[30561,"impl-Flags-for-Capabilities"],[30562,"impl-Capabilities"],[30563,"impl-ShaderStages"],[30564,"impl-Flags-for-ShaderStages"],[30612,"impl-Index%3CHandle%3CExpression%3E%3E-for-FunctionInfo"],[30613,"impl-Index%3CHandle%3CGlobalVariable%3E%3E-for-FunctionInfo"],[30614,"impl-Index%3CHandle%3CExpression%3E%3E-for-ModuleInfo"],[30615,"impl-Index%3CHandle%3CFunction%3E%3E-for-ModuleInfo"],[30616,"impl-Index%3CHandle%3CType%3E%3E-for-ModuleInfo"],[31328,"impl-Flags-for-PipelineFlags"],[31329,"impl-PipelineFlags"],[31537,"impl-Display-for-ShaderError%3CWithSpan%3CValidationError%3E%3E"],[31538,"impl-Display-for-ShaderError%3CParseError%3E"],[31539,"impl-Debug-for-ShaderError%3CE%3E"],[31540,"impl-Display-for-CreateShaderModuleError"],[31541,"impl-Debug-for-CreateShaderModuleError"],[31543,"impl-Display-for-ImplicitLayoutError"],[31544,"impl-Debug-for-ImplicitLayoutError"],[31546,"impl-Debug-for-CreateComputePipelineError"],[31547,"impl-Display-for-CreateComputePipelineError"],[31553,"impl-Display-for-ColorStateError"],[31554,"impl-Debug-for-ColorStateError"],[31555,"impl-Display-for-DepthStencilStateError"],[31556,"impl-Debug-for-DepthStencilStateError"],[31557,"impl-Debug-for-CreateRenderPipelineError"],[31558,"impl-Display-for-CreateRenderPipelineError"],[31559,"impl-Binary-for-PipelineFlags"],[31560,"impl-UpperHex-for-PipelineFlags"],[31561,"impl-Debug-for-PipelineFlags"],[31562,"impl-Octal-for-PipelineFlags"],[31563,"impl-LowerHex-for-PipelineFlags"],[31571,"impl-From%3CDeviceError%3E-for-CreateShaderModuleError"],[31572,"impl-From%3CShaderError%3CParseError%3E%3E-for-CreateShaderModuleError"],[31573,"impl-From%3CMissingFeatures%3E-for-CreateShaderModuleError"],[31574,"impl-From%3CShaderError%3CWithSpan%3CValidationError%3E%3E%3E-for-CreateShaderModuleError"],[31577,"impl-From%3CCreateBindGroupLayoutError%3E-for-ImplicitLayoutError"],[31578,"impl-From%3CCreatePipelineLayoutError%3E-for-ImplicitLayoutError"],[31582,"impl-From%3CDeviceError%3E-for-CreateComputePipelineError"],[31583,"impl-From%3CMissingDownlevelFlags%3E-for-CreateComputePipelineError"],[31584,"impl-From%3CStageError%3E-for-CreateComputePipelineError"],[31585,"impl-From%3CImplicitLayoutError%3E-for-CreateComputePipelineError"],[31593,"impl-From%3CColorAttachmentError%3E-for-CreateRenderPipelineError"],[31594,"impl-From%3CMissingDownlevelFlags%3E-for-CreateRenderPipelineError"],[31595,"impl-From%3CImplicitLayoutError%3E-for-CreateRenderPipelineError"],[31596,"impl-From%3CDeviceError%3E-for-CreateRenderPipelineError"],[31598,"impl-From%3CDepthStencilStateError%3E-for-CreateRenderPipelineError"],[31599,"impl-From%3CMissingFeatures%3E-for-CreateRenderPipelineError"],[31604,"impl-Flags-for-PipelineFlags"],[31605,"impl-PipelineFlags"],[32052,"impl-Debug-for-SurfaceError"],[32053,"impl-Display-for-SurfaceError"],[32054,"impl-Display-for-ConfigureSurfaceError"],[32055,"impl-Debug-for-ConfigureSurfaceError"],[32060,"impl-From%3CMissingDownlevelFlags%3E-for-ConfigureSurfaceError"],[32061,"impl-From%3CDeviceError%3E-for-ConfigureSurfaceError"],[32062,"impl-From%3CWaitIdleError%3E-for-ConfigureSurfaceError"],[32674,"impl-Display-for-BufferAccessError"],[32675,"impl-Debug-for-BufferAccessError"],[32677,"impl-Debug-for-CreateBufferError"],[32678,"impl-Display-for-CreateBufferError"],[32685,"impl-Display-for-TextureDimensionError"],[32686,"impl-Debug-for-TextureDimensionError"],[32687,"impl-Debug-for-CreateTextureError"],[32688,"impl-Display-for-CreateTextureError"],[32690,"impl-Display-for-TextureViewNotRenderableReason"],[32691,"impl-Debug-for-TextureViewNotRenderableReason"],[32693,"impl-Debug-for-CreateTextureViewError"],[32694,"impl-Display-for-CreateTextureViewError"],[32695,"impl-Debug-for-TextureViewDestroyError"],[32696,"impl-Display-for-TextureViewDestroyError"],[32700,"impl-Debug-for-CreateSamplerError"],[32701,"impl-Display-for-CreateSamplerError"],[32702,"impl-Display-for-CreateQuerySetError"],[32703,"impl-Debug-for-CreateQuerySetError"],[32705,"impl-Debug-for-DestroyError"],[32706,"impl-Display-for-DestroyError"],[32715,"impl-From%3CMissingBufferUsageError%3E-for-BufferAccessError"],[32716,"impl-From%3CDeviceError%3E-for-BufferAccessError"],[32719,"impl-From%3CMissingDownlevelFlags%3E-for-CreateBufferError"],[32720,"impl-From%3CBufferAccessError%3E-for-CreateBufferError"],[32721,"impl-From%3CDeviceError%3E-for-CreateBufferError"],[32729,"impl-From%3CDeviceError%3E-for-CreateTextureError"],[32731,"impl-From%3CCreateTextureViewError%3E-for-CreateTextureError"],[32732,"impl-From%3CTextureDimensionError%3E-for-CreateTextureError"],[32733,"impl-From%3CMissingDownlevelFlags%3E-for-CreateTextureError"],[32742,"impl-From%3CDeviceError%3E-for-CreateSamplerError"],[32743,"impl-From%3CMissingFeatures%3E-for-CreateSamplerError"],[32745,"impl-From%3CMissingFeatures%3E-for-CreateQuerySetError"],[32746,"impl-From%3CDeviceError%3E-for-CreateQuerySetError"],[33454,"impl-Debug-for-NumericType"],[33455,"impl-Display-for-NumericType"],[33456,"impl-Debug-for-InterfaceVar"],[33457,"impl-Display-for-InterfaceVar"],[33459,"impl-Debug-for-MissingBufferUsageError"],[33460,"impl-Display-for-MissingBufferUsageError"],[33461,"impl-Debug-for-MissingTextureUsageError"],[33462,"impl-Display-for-MissingTextureUsageError"],[33463,"impl-Display-for-BindingError"],[33464,"impl-Debug-for-BindingError"],[33465,"impl-Display-for-FilteringError"],[33466,"impl-Debug-for-FilteringError"],[33467,"impl-Display-for-InputError"],[33468,"impl-Debug-for-InputError"],[33469,"impl-Display-for-StageError"],[33470,"impl-Debug-for-StageError"],[34140,"impl-PipelineLayoutFlags"],[34141,"impl-Flags-for-PipelineLayoutFlags"],[34142,"impl-Flags-for-BindGroupLayoutFlags"],[34143,"impl-BindGroupLayoutFlags"],[34144,"impl-Flags-for-TextureFormatCapabilities"],[34145,"impl-TextureFormatCapabilities"],[34146,"impl-Flags-for-FormatAspects"],[34147,"impl-FormatAspects"],[34148,"impl-MemoryFlags"],[34149,"impl-Flags-for-MemoryFlags"],[34150,"impl-AccelerationStructureBuildFlags"],[34151,"impl-Flags-for-AccelerationStructureBuildFlags"],[34152,"impl-Flags-for-AttachmentOps"],[34153,"impl-AttachmentOps"],[34154,"impl-Flags-for-AccelerationStructureGeometryFlags"],[34155,"impl-AccelerationStructureGeometryFlags"],[34156,"impl-Flags-for-BufferUses"],[34157,"impl-BufferUses"],[34158,"impl-TextureUses"],[34159,"impl-Flags-for-TextureUses"],[34160,"impl-AccelerationStructureUses"],[34161,"impl-Flags-for-AccelerationStructureUses"],[35167,"impl-Display-for-DeviceError"],[35168,"impl-Debug-for-DeviceError"],[35169,"impl-Debug-for-ShaderError"],[35170,"impl-Display-for-ShaderError"],[35171,"impl-Debug-for-PipelineError"],[35172,"impl-Display-for-PipelineError"],[35173,"impl-Display-for-SurfaceError"],[35174,"impl-Debug-for-SurfaceError"],[35175,"impl-Display-for-InstanceError"],[35176,"impl-Debug-for-InstanceError"],[35177,"impl-Debug-for-PipelineLayoutFlags"],[35178,"impl-UpperHex-for-PipelineLayoutFlags"],[35179,"impl-Binary-for-PipelineLayoutFlags"],[35180,"impl-Octal-for-PipelineLayoutFlags"],[35181,"impl-LowerHex-for-PipelineLayoutFlags"],[35182,"impl-UpperHex-for-BindGroupLayoutFlags"],[35183,"impl-Binary-for-BindGroupLayoutFlags"],[35184,"impl-LowerHex-for-BindGroupLayoutFlags"],[35185,"impl-Debug-for-BindGroupLayoutFlags"],[35186,"impl-Octal-for-BindGroupLayoutFlags"],[35187,"impl-LowerHex-for-TextureFormatCapabilities"],[35188,"impl-Debug-for-TextureFormatCapabilities"],[35189,"impl-Octal-for-TextureFormatCapabilities"],[35190,"impl-UpperHex-for-TextureFormatCapabilities"],[35191,"impl-Binary-for-TextureFormatCapabilities"],[35192,"impl-Binary-for-FormatAspects"],[35193,"impl-LowerHex-for-FormatAspects"],[35194,"impl-UpperHex-for-FormatAspects"],[35195,"impl-Debug-for-FormatAspects"],[35196,"impl-Octal-for-FormatAspects"],[35197,"impl-Octal-for-MemoryFlags"],[35198,"impl-LowerHex-for-MemoryFlags"],[35199,"impl-Binary-for-MemoryFlags"],[35200,"impl-Debug-for-MemoryFlags"],[35201,"impl-UpperHex-for-MemoryFlags"],[35202,"impl-Debug-for-AccelerationStructureBuildFlags"],[35203,"impl-Binary-for-AccelerationStructureBuildFlags"],[35204,"impl-UpperHex-for-AccelerationStructureBuildFlags"],[35205,"impl-Octal-for-AccelerationStructureBuildFlags"],[35206,"impl-LowerHex-for-AccelerationStructureBuildFlags"],[35207,"impl-Binary-for-AttachmentOps"],[35208,"impl-Debug-for-AttachmentOps"],[35209,"impl-Octal-for-AttachmentOps"],[35210,"impl-UpperHex-for-AttachmentOps"],[35211,"impl-LowerHex-for-AttachmentOps"],[35212,"impl-Octal-for-AccelerationStructureGeometryFlags"],[35213,"impl-Binary-for-AccelerationStructureGeometryFlags"],[35214,"impl-LowerHex-for-AccelerationStructureGeometryFlags"],[35215,"impl-Debug-for-AccelerationStructureGeometryFlags"],[35216,"impl-UpperHex-for-AccelerationStructureGeometryFlags"],[35217,"impl-Binary-for-BufferUses"],[35218,"impl-Debug-for-BufferUses"],[35219,"impl-UpperHex-for-BufferUses"],[35220,"impl-Octal-for-BufferUses"],[35221,"impl-LowerHex-for-BufferUses"],[35222,"impl-Octal-for-TextureUses"],[35223,"impl-Debug-for-TextureUses"],[35224,"impl-Binary-for-TextureUses"],[35225,"impl-LowerHex-for-TextureUses"],[35226,"impl-UpperHex-for-TextureUses"],[35279,"impl-LowerHex-for-AccelerationStructureUses"],[35280,"impl-UpperHex-for-AccelerationStructureUses"],[35281,"impl-Octal-for-AccelerationStructureUses"],[35282,"impl-Binary-for-AccelerationStructureUses"],[35283,"impl-Debug-for-AccelerationStructureUses"],[35296,"impl-From%3CAllocationError%3E-for-DeviceError"],[35298,"impl-From%3CMapError%3E-for-DeviceError"],[35299,"impl-From%3CAllocationError%3E-for-DeviceError"],[35300,"impl-From%3CResult%3E-for-DeviceError"],[35384,"impl-PipelineLayoutFlags"],[35385,"impl-Flags-for-PipelineLayoutFlags"],[35386,"impl-BindGroupLayoutFlags"],[35387,"impl-Flags-for-BindGroupLayoutFlags"],[35388,"impl-Flags-for-TextureFormatCapabilities"],[35389,"impl-TextureFormatCapabilities"],[35390,"impl-Flags-for-FormatAspects"],[35391,"impl-FormatAspects"],[35392,"impl-MemoryFlags"],[35393,"impl-Flags-for-MemoryFlags"],[35394,"impl-Flags-for-AccelerationStructureBuildFlags"],[35395,"impl-AccelerationStructureBuildFlags"],[35396,"impl-Flags-for-AttachmentOps"],[35397,"impl-AttachmentOps"],[35398,"impl-Flags-for-AccelerationStructureGeometryFlags"],[35399,"impl-AccelerationStructureGeometryFlags"],[35400,"impl-BufferUses"],[35401,"impl-Flags-for-BufferUses"],[35402,"impl-Flags-for-TextureUses"],[35403,"impl-TextureUses"],[35404,"impl-AccelerationStructureUses"],[35405,"impl-Flags-for-AccelerationStructureUses"],[37938,"impl-Workarounds"],[37939,"impl-Flags-for-Workarounds"],[38211,"impl-Debug-for-Workarounds"],[38212,"impl-UpperHex-for-Workarounds"],[38213,"impl-Binary-for-Workarounds"],[38214,"impl-Octal-for-Workarounds"],[38215,"impl-LowerHex-for-Workarounds"],[38257,"impl-Flags-for-Workarounds"],[38258,"impl-Workarounds"],[39433,"impl-Display-for-HandleError"],[39434,"impl-Debug-for-HandleError"],[39464,"impl-From%3COrbitalWindowHandle%3E-for-RawWindowHandle"],[39465,"impl-From%3CWaylandWindowHandle%3E-for-RawWindowHandle"],[39467,"impl-From%3CDrmWindowHandle%3E-for-RawWindowHandle"],[39468,"impl-From%3CWinRtWindowHandle%3E-for-RawWindowHandle"],[39469,"impl-From%3CAppKitWindowHandle%3E-for-RawWindowHandle"],[39470,"impl-From%3CXcbWindowHandle%3E-for-RawWindowHandle"],[39471,"impl-From%3CHaikuWindowHandle%3E-for-RawWindowHandle"],[39472,"impl-From%3CWindowHandle%3C\'_%3E%3E-for-RawWindowHandle"],[39473,"impl-From%3CGbmWindowHandle%3E-for-RawWindowHandle"],[39474,"impl-From%3CWebWindowHandle%3E-for-RawWindowHandle"],[39475,"impl-From%3CAndroidNdkWindowHandle%3E-for-RawWindowHandle"],[39476,"impl-From%3CWebOffscreenCanvasWindowHandle%3E-for-RawWindowHandle"],[39477,"impl-From%3CWebCanvasWindowHandle%3E-for-RawWindowHandle"],[39478,"impl-From%3CWin32WindowHandle%3E-for-RawWindowHandle"],[39479,"impl-From%3CUiKitWindowHandle%3E-for-RawWindowHandle"],[39480,"impl-From%3CXlibWindowHandle%3E-for-RawWindowHandle"],[39481,"impl-From%3CWindowsDisplayHandle%3E-for-RawDisplayHandle"],[39482,"impl-From%3CXcbDisplayHandle%3E-for-RawDisplayHandle"],[39483,"impl-From%3CXlibDisplayHandle%3E-for-RawDisplayHandle"],[39484,"impl-From%3CUiKitDisplayHandle%3E-for-RawDisplayHandle"],[39485,"impl-From%3CDrmDisplayHandle%3E-for-RawDisplayHandle"],[39486,"impl-From%3COrbitalDisplayHandle%3E-for-RawDisplayHandle"],[39487,"impl-From%3CDisplayHandle%3C\'_%3E%3E-for-RawDisplayHandle"],[39488,"impl-From%3CWaylandDisplayHandle%3E-for-RawDisplayHandle"],[39489,"impl-From%3CAppKitDisplayHandle%3E-for-RawDisplayHandle"],[39490,"impl-From%3CAndroidDisplayHandle%3E-for-RawDisplayHandle"],[39491,"impl-From%3CHaikuDisplayHandle%3E-for-RawDisplayHandle"],[39492,"impl-From%3CGbmDisplayHandle%3E-for-RawDisplayHandle"],[39493,"impl-From%3CWebDisplayHandle%3E-for-RawDisplayHandle"]],"a":{"apply_system_buffers":[2054,5248]}}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
