(function() {var type_impls = {
"foliage":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Schedule\" class=\"impl\"><a href=\"#impl-Schedule\" class=\"anchor\">¬ß</a><h3 class=\"code-header\">impl Schedule</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>(label: impl ScheduleLabel) -&gt; Schedule</h4></section></summary><div class=\"docblock\"><p>Constructs an empty <code>Schedule</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_systems\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">add_systems</a>&lt;M&gt;(\n    &amp;mut self,\n    systems: impl IntoSystemConfigs&lt;M&gt;\n) -&gt; &amp;mut Schedule</h4></section></summary><div class=\"docblock\"><p>Add a collection of systems to the schedule.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.configure_set\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">configure_set</a>(&amp;mut self, set: impl IntoSystemSetConfigs) -&gt; &amp;mut Schedule</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">üëé</span><span>Deprecated since 0.12.0: Please use <code>configure_sets</code> instead.</span></div></span></summary><div class=\"docblock\"><p>Configures a system set in this schedule, adding it if it does not exist.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.configure_sets\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">configure_sets</a>(\n    &amp;mut self,\n    sets: impl IntoSystemSetConfigs\n) -&gt; &amp;mut Schedule</h4></section></summary><div class=\"docblock\"><p>Configures a collection of system sets in this schedule, adding them if they does not exist.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_build_settings\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_build_settings</a>(\n    &amp;mut self,\n    settings: ScheduleBuildSettings\n) -&gt; &amp;mut Schedule</h4></section></summary><div class=\"docblock\"><p>Changes miscellaneous build settings.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_build_settings\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_build_settings</a>(&amp;self) -&gt; ScheduleBuildSettings</h4></section></summary><div class=\"docblock\"><p>Returns the schedule‚Äôs current <code>ScheduleBuildSettings</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_executor_kind\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_executor_kind</a>(&amp;self) -&gt; ExecutorKind</h4></section></summary><div class=\"docblock\"><p>Returns the schedule‚Äôs current execution strategy.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_executor_kind\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_executor_kind</a>(&amp;mut self, executor: ExecutorKind) -&gt; &amp;mut Schedule</h4></section></summary><div class=\"docblock\"><p>Sets the schedule‚Äôs execution strategy.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_apply_final_deferred\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_apply_final_deferred</a>(\n    &amp;mut self,\n    apply_final_deferred: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>\n) -&gt; &amp;mut Schedule</h4></section></summary><div class=\"docblock\"><p>Set whether the schedule applies deferred system buffers on final time or not. This is a catch-all\nin case a system uses commands but was not explicitly ordered before an instance of\n[<code>apply_deferred</code>]. By default this\nsetting is true, but may be disabled if needed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">run</a>(&amp;mut self, world: &amp;mut World)</h4></section></summary><div class=\"docblock\"><p>Runs all systems in this schedule on the <code>world</code>, using its current execution strategy.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.initialize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">initialize</a>(\n    &amp;mut self,\n    world: &amp;mut World\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, ScheduleBuildError&gt;</h4></section></summary><div class=\"docblock\"><p>Initializes any newly-added systems and conditions, rebuilds the executable schedule,\nand re-initializes the executor.</p>\n<p>Moves all systems and run conditions out of the [<code>ScheduleGraph</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.graph\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">graph</a>(&amp;self) -&gt; &amp;ScheduleGraph</h4></section></summary><div class=\"docblock\"><p>Returns the [<code>ScheduleGraph</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.graph_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">graph_mut</a>(&amp;mut self) -&gt; &amp;mut ScheduleGraph</h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference to the [<code>ScheduleGraph</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply_deferred\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">apply_deferred</a>(&amp;mut self, world: &amp;mut World)</h4></section></summary><div class=\"docblock\"><p>Directly applies any accumulated <a href=\"crate::system::Deferred\"><code>Deferred</code></a> system parameters (like <a href=\"crate::prelude::Commands\"><code>Commands</code></a>) to the <code>world</code>.</p>\n<p>Like always, deferred system parameters are applied in the ‚Äútopological sort order‚Äù of the schedule graph.\nAs a result, buffers from one system are only guaranteed to be applied before those of other systems\nif there is an explicit system ordering between the two systems.</p>\n<p>This is used in rendering to extract data from the main world, storing the data in system buffers,\nbefore applying their buffers in a different world.</p>\n</div></details></div></details>",0,"foliage::job::Task"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Schedule\" class=\"impl\"><a href=\"#impl-Default-for-Schedule\" class=\"anchor\">¬ß</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for Schedule</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">¬ß</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Schedule</h4></section></summary><div class=\"docblock\"><p>Creates a schedule with a default label. Only use in situations where\nyou don‚Äôt care about the [<code>ScheduleLabel</code>]. Inserting a default schedule\ninto the world risks overwriting another schedule. For most situations\nyou should use [<code>Schedule::new</code>].</p>\n</div></details></div></details>","Default","foliage::job::Task"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()